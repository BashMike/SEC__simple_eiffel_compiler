State 103 conflicts: 1 shift/reduce
State 108 conflicts: 1 shift/reduce
State 138 conflicts: 1 shift/reduce
State 155 conflicts: 1 shift/reduce
State 161 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_decl_seq

    2 class_decl_seq: class_decl
    3               | class_decl_seq class_decl

    4 identifiers_comma_seq: ID
    5                      | identifiers_comma_seq ',' ID

    6 opt_semicolon: /* empty */
    7              | ';'

    8 opt_semicolon_seq: /* empty */
    9                  | nonempty_opt_semicolon_seq

   10 nonempty_opt_semicolon_seq: ';'
   11                           | nonempty_opt_semicolon_seq ';'

   12 class_decl: CLASS ID inheritance_block creators_block features_block END

   13 inheritance_block: /* empty */
   14                  | INHERIT parent_seq

   15 parent_seq: parent opt_semicolon
   16           | parent_seq parent opt_semicolon

   17 parent: ID
   18       | ID parent_info END

   19 parent_info: RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   20            | UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   21            | RENAME rename_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   22            | REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   23            | RENAME rename_seq UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   24            | UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   25            | RENAME rename_seq SELECT identifiers_comma_seq
   26            | SELECT identifiers_comma_seq
   27            | RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq
   28            | UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq
   29            | RENAME rename_seq REDEFINE identifiers_comma_seq
   30            | REDEFINE identifiers_comma_seq
   31            | RENAME rename_seq UNDEFINE identifiers_comma_seq
   32            | UNDEFINE identifiers_comma_seq
   33            | RENAME rename_seq

   34 rename_seq: ID AS ID
   35           | rename_seq ',' ID AS ID

   36 creators_block: /* empty */
   37               | nonempty_creators_block

   38 nonempty_creators_block: CREATE identifiers_comma_seq
   39                        | nonempty_creators_block CREATE identifiers_comma_seq

   40 features_block: /* empty */
   41               | nonempty_features_block

   42 nonempty_features_block: FEATURE feature_decl_seq
   43                        | nonempty_features_block FEATURE feature_decl_seq

   44 feature_decl_seq: /* empty */
   45                 | nonempty_feature_decl_seq

   46 nonempty_feature_decl_seq: feature_decl opt_semicolon_seq
   47                          | nonempty_feature_decl_seq feature_decl opt_semicolon_seq

   48 feature_decl: identifiers_comma_seq ':' type
   49             | identifiers_comma_seq ':' type routine_decl_body
   50             | identifiers_comma_seq routine_decl_body
   51             | identifiers_comma_seq '(' ids_with_type_seq ')' ':' type routine_decl_body
   52             | identifiers_comma_seq '(' ids_with_type_seq ')' routine_decl_body

   53 ids_with_type_seq: /* empty */
   54                  | nonempty_ids_with_type_seq

   55 nonempty_ids_with_type_seq: ids_with_type opt_semicolon
   56                           | nonempty_ids_with_type_seq ids_with_type opt_semicolon

   57 ids_with_type: identifiers_comma_seq ':' type

   58 routine_decl_body: local_decl DO opt_semicolon_seq instruction_seq END
   59                  | local_decl DO opt_semicolon_seq END

   60 local_decl: /* empty */
   61           | LOCAL ids_with_type_seq

   62 instruction_seq: instruction opt_semicolon_seq
   63                | instruction_seq instruction opt_semicolon_seq

   64 instruction: CREATE ID
   65            | CREATE ID '.' ID '(' argument_seq ')'
   66            | call

   67 call: ID
   68     | ID '(' argument_seq ')'
   69     | ID '.' call_sub_seq
   70     | ID '(' argument_seq ')' '.' call_sub_seq
   71     | CURRENT '.' call_sub_seq
   72     | RESULT '.' call_sub_seq
   73     | '(' expr ')' '.' call_sub_seq
   74     | PRECURSOR
   75     | PRECURSOR '(' argument_seq ')'
   76     | PRECURSOR '{' ID '}'
   77     | PRECURSOR '{' ID '}' '(' argument_seq ')'
   78     | PRECURSOR '.' call_sub_seq
   79     | PRECURSOR '(' argument_seq ')' '.' call_sub_seq
   80     | PRECURSOR '{' ID '}' '.' call_sub_seq
   81     | PRECURSOR '{' ID '}' '(' argument_seq ')' '.' call_sub_seq

   82 call_sub_seq: ID
   83             | ID '(' argument_seq ')'
   84             | call_sub_seq '.' ID
   85             | call_sub_seq '.' ID '(' argument_seq ')'

   86 argument_seq: /* empty */
   87             | nonempty_argument_seq

   88 nonempty_argument_seq: expr
   89                      | nonempty_argument_seq ',' expr

   90 expr: call
   91     | '(' expr ')'
   92     | LITER_BOOLEAN
   93     | LITER_INTEGER
   94     | LITER_CHAR
   95     | LITER_STRING

   96 type: ID
   97     | DATATYPE_INTEGER_32


Terminals, with rules where they appear

$end (0) 0
'(' (40) 51 52 65 68 70 73 75 77 79 81 83 85 91
')' (41) 51 52 65 68 70 73 75 77 79 81 83 85 91
',' (44) 5 35 89
'.' (46) 65 69 70 71 72 73 78 79 80 81 84 85
':' (58) 48 49 51 57
';' (59) 7 10 11
'{' (123) 76 77 80 81
'}' (125) 76 77 80 81
error (256)
ID (258) 4 5 12 17 18 34 35 64 65 67 68 69 70 76 77 80 81 82 83 84
    85 96
CLASS (259) 12
END (260) 12 18 58 59
DATATYPE_INTEGER_32 (261) 97
LITER_BOOLEAN (262) 92
LITER_INTEGER (263) 93
LITER_CHAR (264) 94
LITER_STRING (265) 95
INHERIT (266) 14
RENAME (267) 19 21 23 25 27 29 31 33
UNDEFINE (268) 19 20 23 24 27 28 31 32
REDEFINE (269) 19 20 21 22 27 28 29 30
SELECT (270) 19 20 21 22 23 24 25 26
AS (271) 34 35
CREATE (272) 38 39 64 65
FEATURE (273) 42 43
LOCAL (274) 61
DO (275) 58 59
CURRENT (276) 71
RESULT (277) 72
PRECURSOR (278) 74 75 76 77 78 79 80 81


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
program (33)
    on left: 1, on right: 0
class_decl_seq (34)
    on left: 2 3, on right: 1 3
identifiers_comma_seq (35)
    on left: 4 5, on right: 5 19 20 21 22 23 24 25 26 27 28 29 30 31
    32 38 39 48 49 50 51 52 57
opt_semicolon (36)
    on left: 6 7, on right: 15 16 55 56
opt_semicolon_seq (37)
    on left: 8 9, on right: 46 47 58 59 62 63
nonempty_opt_semicolon_seq (38)
    on left: 10 11, on right: 9 11
class_decl (39)
    on left: 12, on right: 2 3
inheritance_block (40)
    on left: 13 14, on right: 12
parent_seq (41)
    on left: 15 16, on right: 14 16
parent (42)
    on left: 17 18, on right: 15 16
parent_info (43)
    on left: 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33,
    on right: 18
rename_seq (44)
    on left: 34 35, on right: 19 21 23 25 27 29 31 33 35
creators_block (45)
    on left: 36 37, on right: 12
nonempty_creators_block (46)
    on left: 38 39, on right: 37 39
features_block (47)
    on left: 40 41, on right: 12
nonempty_features_block (48)
    on left: 42 43, on right: 41 43
feature_decl_seq (49)
    on left: 44 45, on right: 42 43
nonempty_feature_decl_seq (50)
    on left: 46 47, on right: 45 47
feature_decl (51)
    on left: 48 49 50 51 52, on right: 46 47
ids_with_type_seq (52)
    on left: 53 54, on right: 51 52 61
nonempty_ids_with_type_seq (53)
    on left: 55 56, on right: 54 56
ids_with_type (54)
    on left: 57, on right: 55 56
routine_decl_body (55)
    on left: 58 59, on right: 49 50 51 52
local_decl (56)
    on left: 60 61, on right: 58 59
instruction_seq (57)
    on left: 62 63, on right: 58 63
instruction (58)
    on left: 64 65 66, on right: 62 63
call (59)
    on left: 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81,
    on right: 66 90
call_sub_seq (60)
    on left: 82 83 84 85, on right: 69 70 71 72 73 78 79 80 81 84 85
argument_seq (61)
    on left: 86 87, on right: 65 68 70 75 77 79 81 83 85
nonempty_argument_seq (62)
    on left: 88 89, on right: 87 89
expr (63)
    on left: 90 91 92 93 94 95, on right: 73 88 89 91
type (64)
    on left: 96 97, on right: 48 49 51 57


state 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program         go to state 2
    class_decl_seq  go to state 3
    class_decl      go to state 4


state 1

   12 class_decl: CLASS . ID inheritance_block creators_block features_block END

    ID  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: class_decl_seq .
    3 class_decl_seq: class_decl_seq . class_decl

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class_decl  go to state 7


state 4

    2 class_decl_seq: class_decl .

    $default  reduce using rule 2 (class_decl_seq)


state 5

   12 class_decl: CLASS ID . inheritance_block creators_block features_block END

    INHERIT  shift, and go to state 8

    $default  reduce using rule 13 (inheritance_block)

    inheritance_block  go to state 9


state 6

    0 $accept: program $end .

    $default  accept


state 7

    3 class_decl_seq: class_decl_seq class_decl .

    $default  reduce using rule 3 (class_decl_seq)


state 8

   14 inheritance_block: INHERIT . parent_seq

    ID  shift, and go to state 10

    parent_seq  go to state 11
    parent      go to state 12


state 9

   12 class_decl: CLASS ID inheritance_block . creators_block features_block END

    CREATE  shift, and go to state 13

    $default  reduce using rule 36 (creators_block)

    creators_block           go to state 14
    nonempty_creators_block  go to state 15


state 10

   17 parent: ID .
   18       | ID . parent_info END

    RENAME    shift, and go to state 16
    UNDEFINE  shift, and go to state 17
    REDEFINE  shift, and go to state 18
    SELECT    shift, and go to state 19

    $default  reduce using rule 17 (parent)

    parent_info  go to state 20


state 11

   14 inheritance_block: INHERIT parent_seq .
   16 parent_seq: parent_seq . parent opt_semicolon

    ID  shift, and go to state 10

    $default  reduce using rule 14 (inheritance_block)

    parent  go to state 21


state 12

   15 parent_seq: parent . opt_semicolon

    ';'  shift, and go to state 22

    $default  reduce using rule 6 (opt_semicolon)

    opt_semicolon  go to state 23


state 13

   38 nonempty_creators_block: CREATE . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 25


state 14

   12 class_decl: CLASS ID inheritance_block creators_block . features_block END

    FEATURE  shift, and go to state 26

    $default  reduce using rule 40 (features_block)

    features_block           go to state 27
    nonempty_features_block  go to state 28


state 15

   37 creators_block: nonempty_creators_block .
   39 nonempty_creators_block: nonempty_creators_block . CREATE identifiers_comma_seq

    CREATE  shift, and go to state 29

    $default  reduce using rule 37 (creators_block)


state 16

   19 parent_info: RENAME . rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   21            | RENAME . rename_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   23            | RENAME . rename_seq UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   25            | RENAME . rename_seq SELECT identifiers_comma_seq
   27            | RENAME . rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq
   29            | RENAME . rename_seq REDEFINE identifiers_comma_seq
   31            | RENAME . rename_seq UNDEFINE identifiers_comma_seq
   33            | RENAME . rename_seq

    ID  shift, and go to state 30

    rename_seq  go to state 31


state 17

   20 parent_info: UNDEFINE . identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   24            | UNDEFINE . identifiers_comma_seq SELECT identifiers_comma_seq
   28            | UNDEFINE . identifiers_comma_seq REDEFINE identifiers_comma_seq
   32            | UNDEFINE . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 32


state 18

   22 parent_info: REDEFINE . identifiers_comma_seq SELECT identifiers_comma_seq
   30            | REDEFINE . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 33


state 19

   26 parent_info: SELECT . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 34


state 20

   18 parent: ID parent_info . END

    END  shift, and go to state 35


state 21

   16 parent_seq: parent_seq parent . opt_semicolon

    ';'  shift, and go to state 22

    $default  reduce using rule 6 (opt_semicolon)

    opt_semicolon  go to state 36


state 22

    7 opt_semicolon: ';' .

    $default  reduce using rule 7 (opt_semicolon)


state 23

   15 parent_seq: parent opt_semicolon .

    $default  reduce using rule 15 (parent_seq)


state 24

    4 identifiers_comma_seq: ID .

    $default  reduce using rule 4 (identifiers_comma_seq)


state 25

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   38 nonempty_creators_block: CREATE identifiers_comma_seq .

    ','  shift, and go to state 37

    $default  reduce using rule 38 (nonempty_creators_block)


state 26

   42 nonempty_features_block: FEATURE . feature_decl_seq

    ID  shift, and go to state 24

    $default  reduce using rule 44 (feature_decl_seq)

    identifiers_comma_seq      go to state 38
    feature_decl_seq           go to state 39
    nonempty_feature_decl_seq  go to state 40
    feature_decl               go to state 41


state 27

   12 class_decl: CLASS ID inheritance_block creators_block features_block . END

    END  shift, and go to state 42


state 28

   41 features_block: nonempty_features_block .
   43 nonempty_features_block: nonempty_features_block . FEATURE feature_decl_seq

    FEATURE  shift, and go to state 43

    $default  reduce using rule 41 (features_block)


state 29

   39 nonempty_creators_block: nonempty_creators_block CREATE . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 44


state 30

   34 rename_seq: ID . AS ID

    AS  shift, and go to state 45


state 31

   19 parent_info: RENAME rename_seq . UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   21            | RENAME rename_seq . REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   23            | RENAME rename_seq . UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   25            | RENAME rename_seq . SELECT identifiers_comma_seq
   27            | RENAME rename_seq . UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq
   29            | RENAME rename_seq . REDEFINE identifiers_comma_seq
   31            | RENAME rename_seq . UNDEFINE identifiers_comma_seq
   33            | RENAME rename_seq .
   35 rename_seq: rename_seq . ',' ID AS ID

    UNDEFINE  shift, and go to state 46
    REDEFINE  shift, and go to state 47
    SELECT    shift, and go to state 48
    ','       shift, and go to state 49

    $default  reduce using rule 33 (parent_info)


state 32

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   20 parent_info: UNDEFINE identifiers_comma_seq . REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   24            | UNDEFINE identifiers_comma_seq . SELECT identifiers_comma_seq
   28            | UNDEFINE identifiers_comma_seq . REDEFINE identifiers_comma_seq
   32            | UNDEFINE identifiers_comma_seq .

    REDEFINE  shift, and go to state 50
    SELECT    shift, and go to state 51
    ','       shift, and go to state 37

    $default  reduce using rule 32 (parent_info)


state 33

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   22 parent_info: REDEFINE identifiers_comma_seq . SELECT identifiers_comma_seq
   30            | REDEFINE identifiers_comma_seq .

    SELECT  shift, and go to state 52
    ','     shift, and go to state 37

    $default  reduce using rule 30 (parent_info)


state 34

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   26 parent_info: SELECT identifiers_comma_seq .

    ','  shift, and go to state 37

    $default  reduce using rule 26 (parent_info)


state 35

   18 parent: ID parent_info END .

    $default  reduce using rule 18 (parent)


state 36

   16 parent_seq: parent_seq parent opt_semicolon .

    $default  reduce using rule 16 (parent_seq)


state 37

    5 identifiers_comma_seq: identifiers_comma_seq ',' . ID

    ID  shift, and go to state 53


state 38

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   48 feature_decl: identifiers_comma_seq . ':' type
   49             | identifiers_comma_seq . ':' type routine_decl_body
   50             | identifiers_comma_seq . routine_decl_body
   51             | identifiers_comma_seq . '(' ids_with_type_seq ')' ':' type routine_decl_body
   52             | identifiers_comma_seq . '(' ids_with_type_seq ')' routine_decl_body

    LOCAL  shift, and go to state 54
    ','    shift, and go to state 37
    ':'    shift, and go to state 55
    '('    shift, and go to state 56

    $default  reduce using rule 60 (local_decl)

    routine_decl_body  go to state 57
    local_decl         go to state 58


state 39

   42 nonempty_features_block: FEATURE feature_decl_seq .

    $default  reduce using rule 42 (nonempty_features_block)


state 40

   45 feature_decl_seq: nonempty_feature_decl_seq .
   47 nonempty_feature_decl_seq: nonempty_feature_decl_seq . feature_decl opt_semicolon_seq

    ID  shift, and go to state 24

    $default  reduce using rule 45 (feature_decl_seq)

    identifiers_comma_seq  go to state 38
    feature_decl           go to state 59


state 41

   46 nonempty_feature_decl_seq: feature_decl . opt_semicolon_seq

    ';'  shift, and go to state 60

    $default  reduce using rule 8 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 61
    nonempty_opt_semicolon_seq  go to state 62


state 42

   12 class_decl: CLASS ID inheritance_block creators_block features_block END .

    $default  reduce using rule 12 (class_decl)


state 43

   43 nonempty_features_block: nonempty_features_block FEATURE . feature_decl_seq

    ID  shift, and go to state 24

    $default  reduce using rule 44 (feature_decl_seq)

    identifiers_comma_seq      go to state 38
    feature_decl_seq           go to state 63
    nonempty_feature_decl_seq  go to state 40
    feature_decl               go to state 41


state 44

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   39 nonempty_creators_block: nonempty_creators_block CREATE identifiers_comma_seq .

    ','  shift, and go to state 37

    $default  reduce using rule 39 (nonempty_creators_block)


state 45

   34 rename_seq: ID AS . ID

    ID  shift, and go to state 64


state 46

   19 parent_info: RENAME rename_seq UNDEFINE . identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   23            | RENAME rename_seq UNDEFINE . identifiers_comma_seq SELECT identifiers_comma_seq
   27            | RENAME rename_seq UNDEFINE . identifiers_comma_seq REDEFINE identifiers_comma_seq
   31            | RENAME rename_seq UNDEFINE . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 65


state 47

   21 parent_info: RENAME rename_seq REDEFINE . identifiers_comma_seq SELECT identifiers_comma_seq
   29            | RENAME rename_seq REDEFINE . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 66


state 48

   25 parent_info: RENAME rename_seq SELECT . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 67


state 49

   35 rename_seq: rename_seq ',' . ID AS ID

    ID  shift, and go to state 68


state 50

   20 parent_info: UNDEFINE identifiers_comma_seq REDEFINE . identifiers_comma_seq SELECT identifiers_comma_seq
   28            | UNDEFINE identifiers_comma_seq REDEFINE . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 69


state 51

   24 parent_info: UNDEFINE identifiers_comma_seq SELECT . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 70


state 52

   22 parent_info: REDEFINE identifiers_comma_seq SELECT . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 71


state 53

    5 identifiers_comma_seq: identifiers_comma_seq ',' ID .

    $default  reduce using rule 5 (identifiers_comma_seq)


state 54

   61 local_decl: LOCAL . ids_with_type_seq

    ID  shift, and go to state 24

    $default  reduce using rule 53 (ids_with_type_seq)

    identifiers_comma_seq       go to state 72
    ids_with_type_seq           go to state 73
    nonempty_ids_with_type_seq  go to state 74
    ids_with_type               go to state 75


state 55

   48 feature_decl: identifiers_comma_seq ':' . type
   49             | identifiers_comma_seq ':' . type routine_decl_body

    ID                   shift, and go to state 76
    DATATYPE_INTEGER_32  shift, and go to state 77

    type  go to state 78


state 56

   51 feature_decl: identifiers_comma_seq '(' . ids_with_type_seq ')' ':' type routine_decl_body
   52             | identifiers_comma_seq '(' . ids_with_type_seq ')' routine_decl_body

    ID  shift, and go to state 24

    $default  reduce using rule 53 (ids_with_type_seq)

    identifiers_comma_seq       go to state 72
    ids_with_type_seq           go to state 79
    nonempty_ids_with_type_seq  go to state 74
    ids_with_type               go to state 75


state 57

   50 feature_decl: identifiers_comma_seq routine_decl_body .

    $default  reduce using rule 50 (feature_decl)


state 58

   58 routine_decl_body: local_decl . DO opt_semicolon_seq instruction_seq END
   59                  | local_decl . DO opt_semicolon_seq END

    DO  shift, and go to state 80


state 59

   47 nonempty_feature_decl_seq: nonempty_feature_decl_seq feature_decl . opt_semicolon_seq

    ';'  shift, and go to state 60

    $default  reduce using rule 8 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 81
    nonempty_opt_semicolon_seq  go to state 62


state 60

   10 nonempty_opt_semicolon_seq: ';' .

    $default  reduce using rule 10 (nonempty_opt_semicolon_seq)


state 61

   46 nonempty_feature_decl_seq: feature_decl opt_semicolon_seq .

    $default  reduce using rule 46 (nonempty_feature_decl_seq)


state 62

    9 opt_semicolon_seq: nonempty_opt_semicolon_seq .
   11 nonempty_opt_semicolon_seq: nonempty_opt_semicolon_seq . ';'

    ';'  shift, and go to state 82

    $default  reduce using rule 9 (opt_semicolon_seq)


state 63

   43 nonempty_features_block: nonempty_features_block FEATURE feature_decl_seq .

    $default  reduce using rule 43 (nonempty_features_block)


state 64

   34 rename_seq: ID AS ID .

    $default  reduce using rule 34 (rename_seq)


state 65

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   19 parent_info: RENAME rename_seq UNDEFINE identifiers_comma_seq . REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq
   23            | RENAME rename_seq UNDEFINE identifiers_comma_seq . SELECT identifiers_comma_seq
   27            | RENAME rename_seq UNDEFINE identifiers_comma_seq . REDEFINE identifiers_comma_seq
   31            | RENAME rename_seq UNDEFINE identifiers_comma_seq .

    REDEFINE  shift, and go to state 83
    SELECT    shift, and go to state 84
    ','       shift, and go to state 37

    $default  reduce using rule 31 (parent_info)


state 66

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   21 parent_info: RENAME rename_seq REDEFINE identifiers_comma_seq . SELECT identifiers_comma_seq
   29            | RENAME rename_seq REDEFINE identifiers_comma_seq .

    SELECT  shift, and go to state 85
    ','     shift, and go to state 37

    $default  reduce using rule 29 (parent_info)


state 67

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   25 parent_info: RENAME rename_seq SELECT identifiers_comma_seq .

    ','  shift, and go to state 37

    $default  reduce using rule 25 (parent_info)


state 68

   35 rename_seq: rename_seq ',' ID . AS ID

    AS  shift, and go to state 86


state 69

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   20 parent_info: UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq . SELECT identifiers_comma_seq
   28            | UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq .

    SELECT  shift, and go to state 87
    ','     shift, and go to state 37

    $default  reduce using rule 28 (parent_info)


state 70

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   24 parent_info: UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq .

    ','  shift, and go to state 37

    $default  reduce using rule 24 (parent_info)


state 71

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   22 parent_info: REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq .

    ','  shift, and go to state 37

    $default  reduce using rule 22 (parent_info)


state 72

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   57 ids_with_type: identifiers_comma_seq . ':' type

    ','  shift, and go to state 37
    ':'  shift, and go to state 88


state 73

   61 local_decl: LOCAL ids_with_type_seq .

    $default  reduce using rule 61 (local_decl)


state 74

   54 ids_with_type_seq: nonempty_ids_with_type_seq .
   56 nonempty_ids_with_type_seq: nonempty_ids_with_type_seq . ids_with_type opt_semicolon

    ID  shift, and go to state 24

    $default  reduce using rule 54 (ids_with_type_seq)

    identifiers_comma_seq  go to state 72
    ids_with_type          go to state 89


state 75

   55 nonempty_ids_with_type_seq: ids_with_type . opt_semicolon

    ';'  shift, and go to state 22

    $default  reduce using rule 6 (opt_semicolon)

    opt_semicolon  go to state 90


state 76

   96 type: ID .

    $default  reduce using rule 96 (type)


state 77

   97 type: DATATYPE_INTEGER_32 .

    $default  reduce using rule 97 (type)


state 78

   48 feature_decl: identifiers_comma_seq ':' type .
   49             | identifiers_comma_seq ':' type . routine_decl_body

    LOCAL  shift, and go to state 54

    DO        reduce using rule 60 (local_decl)
    $default  reduce using rule 48 (feature_decl)

    routine_decl_body  go to state 91
    local_decl         go to state 58


state 79

   51 feature_decl: identifiers_comma_seq '(' ids_with_type_seq . ')' ':' type routine_decl_body
   52             | identifiers_comma_seq '(' ids_with_type_seq . ')' routine_decl_body

    ')'  shift, and go to state 92


state 80

   58 routine_decl_body: local_decl DO . opt_semicolon_seq instruction_seq END
   59                  | local_decl DO . opt_semicolon_seq END

    ';'  shift, and go to state 60

    $default  reduce using rule 8 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 93
    nonempty_opt_semicolon_seq  go to state 62


state 81

   47 nonempty_feature_decl_seq: nonempty_feature_decl_seq feature_decl opt_semicolon_seq .

    $default  reduce using rule 47 (nonempty_feature_decl_seq)


state 82

   11 nonempty_opt_semicolon_seq: nonempty_opt_semicolon_seq ';' .

    $default  reduce using rule 11 (nonempty_opt_semicolon_seq)


state 83

   19 parent_info: RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE . identifiers_comma_seq SELECT identifiers_comma_seq
   27            | RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 94


state 84

   23 parent_info: RENAME rename_seq UNDEFINE identifiers_comma_seq SELECT . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 95


state 85

   21 parent_info: RENAME rename_seq REDEFINE identifiers_comma_seq SELECT . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 96


state 86

   35 rename_seq: rename_seq ',' ID AS . ID

    ID  shift, and go to state 97


state 87

   20 parent_info: UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 98


state 88

   57 ids_with_type: identifiers_comma_seq ':' . type

    ID                   shift, and go to state 76
    DATATYPE_INTEGER_32  shift, and go to state 77

    type  go to state 99


state 89

   56 nonempty_ids_with_type_seq: nonempty_ids_with_type_seq ids_with_type . opt_semicolon

    ';'  shift, and go to state 22

    $default  reduce using rule 6 (opt_semicolon)

    opt_semicolon  go to state 100


state 90

   55 nonempty_ids_with_type_seq: ids_with_type opt_semicolon .

    $default  reduce using rule 55 (nonempty_ids_with_type_seq)


state 91

   49 feature_decl: identifiers_comma_seq ':' type routine_decl_body .

    $default  reduce using rule 49 (feature_decl)


state 92

   51 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' . ':' type routine_decl_body
   52             | identifiers_comma_seq '(' ids_with_type_seq ')' . routine_decl_body

    LOCAL  shift, and go to state 54
    ':'    shift, and go to state 101

    $default  reduce using rule 60 (local_decl)

    routine_decl_body  go to state 102
    local_decl         go to state 58


state 93

   58 routine_decl_body: local_decl DO opt_semicolon_seq . instruction_seq END
   59                  | local_decl DO opt_semicolon_seq . END

    ID         shift, and go to state 103
    END        shift, and go to state 104
    CREATE     shift, and go to state 105
    CURRENT    shift, and go to state 106
    RESULT     shift, and go to state 107
    PRECURSOR  shift, and go to state 108
    '('        shift, and go to state 109

    instruction_seq  go to state 110
    instruction      go to state 111
    call             go to state 112


state 94

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   19 parent_info: RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq . SELECT identifiers_comma_seq
   27            | RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq .

    SELECT  shift, and go to state 113
    ','     shift, and go to state 37

    $default  reduce using rule 27 (parent_info)


state 95

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   23 parent_info: RENAME rename_seq UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq .

    ','  shift, and go to state 37

    $default  reduce using rule 23 (parent_info)


state 96

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   21 parent_info: RENAME rename_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq .

    ','  shift, and go to state 37

    $default  reduce using rule 21 (parent_info)


state 97

   35 rename_seq: rename_seq ',' ID AS ID .

    $default  reduce using rule 35 (rename_seq)


state 98

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   20 parent_info: UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq .

    ','  shift, and go to state 37

    $default  reduce using rule 20 (parent_info)


state 99

   57 ids_with_type: identifiers_comma_seq ':' type .

    $default  reduce using rule 57 (ids_with_type)


state 100

   56 nonempty_ids_with_type_seq: nonempty_ids_with_type_seq ids_with_type opt_semicolon .

    $default  reduce using rule 56 (nonempty_ids_with_type_seq)


state 101

   51 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' . type routine_decl_body

    ID                   shift, and go to state 76
    DATATYPE_INTEGER_32  shift, and go to state 77

    type  go to state 114


state 102

   52 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' routine_decl_body .

    $default  reduce using rule 52 (feature_decl)


state 103

   67 call: ID .
   68     | ID . '(' argument_seq ')'
   69     | ID . '.' call_sub_seq
   70     | ID . '(' argument_seq ')' '.' call_sub_seq

    '('  shift, and go to state 115
    '.'  shift, and go to state 116

    '('       [reduce using rule 67 (call)]
    $default  reduce using rule 67 (call)


state 104

   59 routine_decl_body: local_decl DO opt_semicolon_seq END .

    $default  reduce using rule 59 (routine_decl_body)


state 105

   64 instruction: CREATE . ID
   65            | CREATE . ID '.' ID '(' argument_seq ')'

    ID  shift, and go to state 117


state 106

   71 call: CURRENT . '.' call_sub_seq

    '.'  shift, and go to state 118


state 107

   72 call: RESULT . '.' call_sub_seq

    '.'  shift, and go to state 119


state 108

   74 call: PRECURSOR .
   75     | PRECURSOR . '(' argument_seq ')'
   76     | PRECURSOR . '{' ID '}'
   77     | PRECURSOR . '{' ID '}' '(' argument_seq ')'
   78     | PRECURSOR . '.' call_sub_seq
   79     | PRECURSOR . '(' argument_seq ')' '.' call_sub_seq
   80     | PRECURSOR . '{' ID '}' '.' call_sub_seq
   81     | PRECURSOR . '{' ID '}' '(' argument_seq ')' '.' call_sub_seq

    '('  shift, and go to state 120
    '.'  shift, and go to state 121
    '{'  shift, and go to state 122

    '('       [reduce using rule 74 (call)]
    $default  reduce using rule 74 (call)


state 109

   73 call: '(' . expr ')' '.' call_sub_seq

    ID             shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 123
    LITER_INTEGER  shift, and go to state 124
    LITER_CHAR     shift, and go to state 125
    LITER_STRING   shift, and go to state 126
    CURRENT        shift, and go to state 106
    RESULT         shift, and go to state 107
    PRECURSOR      shift, and go to state 108
    '('            shift, and go to state 127

    call  go to state 128
    expr  go to state 129


state 110

   58 routine_decl_body: local_decl DO opt_semicolon_seq instruction_seq . END
   63 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID         shift, and go to state 103
    END        shift, and go to state 130
    CREATE     shift, and go to state 105
    CURRENT    shift, and go to state 106
    RESULT     shift, and go to state 107
    PRECURSOR  shift, and go to state 108
    '('        shift, and go to state 109

    instruction  go to state 131
    call         go to state 112


state 111

   62 instruction_seq: instruction . opt_semicolon_seq

    ';'  shift, and go to state 60

    $default  reduce using rule 8 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 132
    nonempty_opt_semicolon_seq  go to state 62


state 112

   66 instruction: call .

    $default  reduce using rule 66 (instruction)


state 113

   19 parent_info: RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT . identifiers_comma_seq

    ID  shift, and go to state 24

    identifiers_comma_seq  go to state 133


state 114

   51 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type . routine_decl_body

    LOCAL  shift, and go to state 54

    $default  reduce using rule 60 (local_decl)

    routine_decl_body  go to state 134
    local_decl         go to state 58


state 115

   68 call: ID '(' . argument_seq ')'
   70     | ID '(' . argument_seq ')' '.' call_sub_seq

    ID             shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 123
    LITER_INTEGER  shift, and go to state 124
    LITER_CHAR     shift, and go to state 125
    LITER_STRING   shift, and go to state 126
    CURRENT        shift, and go to state 106
    RESULT         shift, and go to state 107
    PRECURSOR      shift, and go to state 108
    '('            shift, and go to state 127

    $default  reduce using rule 86 (argument_seq)

    call                   go to state 128
    argument_seq           go to state 135
    nonempty_argument_seq  go to state 136
    expr                   go to state 137


state 116

   69 call: ID '.' . call_sub_seq

    ID  shift, and go to state 138

    call_sub_seq  go to state 139


state 117

   64 instruction: CREATE ID .
   65            | CREATE ID . '.' ID '(' argument_seq ')'

    '.'  shift, and go to state 140

    $default  reduce using rule 64 (instruction)


state 118

   71 call: CURRENT '.' . call_sub_seq

    ID  shift, and go to state 138

    call_sub_seq  go to state 141


state 119

   72 call: RESULT '.' . call_sub_seq

    ID  shift, and go to state 138

    call_sub_seq  go to state 142


state 120

   75 call: PRECURSOR '(' . argument_seq ')'
   79     | PRECURSOR '(' . argument_seq ')' '.' call_sub_seq

    ID             shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 123
    LITER_INTEGER  shift, and go to state 124
    LITER_CHAR     shift, and go to state 125
    LITER_STRING   shift, and go to state 126
    CURRENT        shift, and go to state 106
    RESULT         shift, and go to state 107
    PRECURSOR      shift, and go to state 108
    '('            shift, and go to state 127

    $default  reduce using rule 86 (argument_seq)

    call                   go to state 128
    argument_seq           go to state 143
    nonempty_argument_seq  go to state 136
    expr                   go to state 137


state 121

   78 call: PRECURSOR '.' . call_sub_seq

    ID  shift, and go to state 138

    call_sub_seq  go to state 144


state 122

   76 call: PRECURSOR '{' . ID '}'
   77     | PRECURSOR '{' . ID '}' '(' argument_seq ')'
   80     | PRECURSOR '{' . ID '}' '.' call_sub_seq
   81     | PRECURSOR '{' . ID '}' '(' argument_seq ')' '.' call_sub_seq

    ID  shift, and go to state 145


state 123

   92 expr: LITER_BOOLEAN .

    $default  reduce using rule 92 (expr)


state 124

   93 expr: LITER_INTEGER .

    $default  reduce using rule 93 (expr)


state 125

   94 expr: LITER_CHAR .

    $default  reduce using rule 94 (expr)


state 126

   95 expr: LITER_STRING .

    $default  reduce using rule 95 (expr)


state 127

   73 call: '(' . expr ')' '.' call_sub_seq
   91 expr: '(' . expr ')'

    ID             shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 123
    LITER_INTEGER  shift, and go to state 124
    LITER_CHAR     shift, and go to state 125
    LITER_STRING   shift, and go to state 126
    CURRENT        shift, and go to state 106
    RESULT         shift, and go to state 107
    PRECURSOR      shift, and go to state 108
    '('            shift, and go to state 127

    call  go to state 128
    expr  go to state 146


state 128

   90 expr: call .

    $default  reduce using rule 90 (expr)


state 129

   73 call: '(' expr . ')' '.' call_sub_seq

    ')'  shift, and go to state 147


state 130

   58 routine_decl_body: local_decl DO opt_semicolon_seq instruction_seq END .

    $default  reduce using rule 58 (routine_decl_body)


state 131

   63 instruction_seq: instruction_seq instruction . opt_semicolon_seq

    ';'  shift, and go to state 60

    $default  reduce using rule 8 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 148
    nonempty_opt_semicolon_seq  go to state 62


state 132

   62 instruction_seq: instruction opt_semicolon_seq .

    $default  reduce using rule 62 (instruction_seq)


state 133

    5 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   19 parent_info: RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq .

    ','  shift, and go to state 37

    $default  reduce using rule 19 (parent_info)


state 134

   51 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type routine_decl_body .

    $default  reduce using rule 51 (feature_decl)


state 135

   68 call: ID '(' argument_seq . ')'
   70     | ID '(' argument_seq . ')' '.' call_sub_seq

    ')'  shift, and go to state 149


state 136

   87 argument_seq: nonempty_argument_seq .
   89 nonempty_argument_seq: nonempty_argument_seq . ',' expr

    ','  shift, and go to state 150

    $default  reduce using rule 87 (argument_seq)


state 137

   88 nonempty_argument_seq: expr .

    $default  reduce using rule 88 (nonempty_argument_seq)


state 138

   82 call_sub_seq: ID .
   83             | ID . '(' argument_seq ')'

    '('  shift, and go to state 151

    '('       [reduce using rule 82 (call_sub_seq)]
    $default  reduce using rule 82 (call_sub_seq)


state 139

   69 call: ID '.' call_sub_seq .
   84 call_sub_seq: call_sub_seq . '.' ID
   85             | call_sub_seq . '.' ID '(' argument_seq ')'

    '.'  shift, and go to state 152

    $default  reduce using rule 69 (call)


state 140

   65 instruction: CREATE ID '.' . ID '(' argument_seq ')'

    ID  shift, and go to state 153


state 141

   71 call: CURRENT '.' call_sub_seq .
   84 call_sub_seq: call_sub_seq . '.' ID
   85             | call_sub_seq . '.' ID '(' argument_seq ')'

    '.'  shift, and go to state 152

    $default  reduce using rule 71 (call)


state 142

   72 call: RESULT '.' call_sub_seq .
   84 call_sub_seq: call_sub_seq . '.' ID
   85             | call_sub_seq . '.' ID '(' argument_seq ')'

    '.'  shift, and go to state 152

    $default  reduce using rule 72 (call)


state 143

   75 call: PRECURSOR '(' argument_seq . ')'
   79     | PRECURSOR '(' argument_seq . ')' '.' call_sub_seq

    ')'  shift, and go to state 154


state 144

   78 call: PRECURSOR '.' call_sub_seq .
   84 call_sub_seq: call_sub_seq . '.' ID
   85             | call_sub_seq . '.' ID '(' argument_seq ')'

    '.'  shift, and go to state 152

    $default  reduce using rule 78 (call)


state 145

   76 call: PRECURSOR '{' ID . '}'
   77     | PRECURSOR '{' ID . '}' '(' argument_seq ')'
   80     | PRECURSOR '{' ID . '}' '.' call_sub_seq
   81     | PRECURSOR '{' ID . '}' '(' argument_seq ')' '.' call_sub_seq

    '}'  shift, and go to state 155


state 146

   73 call: '(' expr . ')' '.' call_sub_seq
   91 expr: '(' expr . ')'

    ')'  shift, and go to state 156


state 147

   73 call: '(' expr ')' . '.' call_sub_seq

    '.'  shift, and go to state 157


state 148

   63 instruction_seq: instruction_seq instruction opt_semicolon_seq .

    $default  reduce using rule 63 (instruction_seq)


state 149

   68 call: ID '(' argument_seq ')' .
   70     | ID '(' argument_seq ')' . '.' call_sub_seq

    '.'  shift, and go to state 158

    $default  reduce using rule 68 (call)


state 150

   89 nonempty_argument_seq: nonempty_argument_seq ',' . expr

    ID             shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 123
    LITER_INTEGER  shift, and go to state 124
    LITER_CHAR     shift, and go to state 125
    LITER_STRING   shift, and go to state 126
    CURRENT        shift, and go to state 106
    RESULT         shift, and go to state 107
    PRECURSOR      shift, and go to state 108
    '('            shift, and go to state 127

    call  go to state 128
    expr  go to state 159


state 151

   83 call_sub_seq: ID '(' . argument_seq ')'

    ID             shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 123
    LITER_INTEGER  shift, and go to state 124
    LITER_CHAR     shift, and go to state 125
    LITER_STRING   shift, and go to state 126
    CURRENT        shift, and go to state 106
    RESULT         shift, and go to state 107
    PRECURSOR      shift, and go to state 108
    '('            shift, and go to state 127

    $default  reduce using rule 86 (argument_seq)

    call                   go to state 128
    argument_seq           go to state 160
    nonempty_argument_seq  go to state 136
    expr                   go to state 137


state 152

   84 call_sub_seq: call_sub_seq '.' . ID
   85             | call_sub_seq '.' . ID '(' argument_seq ')'

    ID  shift, and go to state 161


state 153

   65 instruction: CREATE ID '.' ID . '(' argument_seq ')'

    '('  shift, and go to state 162


state 154

   75 call: PRECURSOR '(' argument_seq ')' .
   79     | PRECURSOR '(' argument_seq ')' . '.' call_sub_seq

    '.'  shift, and go to state 163

    $default  reduce using rule 75 (call)


state 155

   76 call: PRECURSOR '{' ID '}' .
   77     | PRECURSOR '{' ID '}' . '(' argument_seq ')'
   80     | PRECURSOR '{' ID '}' . '.' call_sub_seq
   81     | PRECURSOR '{' ID '}' . '(' argument_seq ')' '.' call_sub_seq

    '('  shift, and go to state 164
    '.'  shift, and go to state 165

    '('       [reduce using rule 76 (call)]
    $default  reduce using rule 76 (call)


state 156

   73 call: '(' expr ')' . '.' call_sub_seq
   91 expr: '(' expr ')' .

    '.'  shift, and go to state 157

    $default  reduce using rule 91 (expr)


state 157

   73 call: '(' expr ')' '.' . call_sub_seq

    ID  shift, and go to state 138

    call_sub_seq  go to state 166


state 158

   70 call: ID '(' argument_seq ')' '.' . call_sub_seq

    ID  shift, and go to state 138

    call_sub_seq  go to state 167


state 159

   89 nonempty_argument_seq: nonempty_argument_seq ',' expr .

    $default  reduce using rule 89 (nonempty_argument_seq)


state 160

   83 call_sub_seq: ID '(' argument_seq . ')'

    ')'  shift, and go to state 168


state 161

   84 call_sub_seq: call_sub_seq '.' ID .
   85             | call_sub_seq '.' ID . '(' argument_seq ')'

    '('  shift, and go to state 169

    '('       [reduce using rule 84 (call_sub_seq)]
    $default  reduce using rule 84 (call_sub_seq)


state 162

   65 instruction: CREATE ID '.' ID '(' . argument_seq ')'

    ID             shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 123
    LITER_INTEGER  shift, and go to state 124
    LITER_CHAR     shift, and go to state 125
    LITER_STRING   shift, and go to state 126
    CURRENT        shift, and go to state 106
    RESULT         shift, and go to state 107
    PRECURSOR      shift, and go to state 108
    '('            shift, and go to state 127

    $default  reduce using rule 86 (argument_seq)

    call                   go to state 128
    argument_seq           go to state 170
    nonempty_argument_seq  go to state 136
    expr                   go to state 137


state 163

   79 call: PRECURSOR '(' argument_seq ')' '.' . call_sub_seq

    ID  shift, and go to state 138

    call_sub_seq  go to state 171


state 164

   77 call: PRECURSOR '{' ID '}' '(' . argument_seq ')'
   81     | PRECURSOR '{' ID '}' '(' . argument_seq ')' '.' call_sub_seq

    ID             shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 123
    LITER_INTEGER  shift, and go to state 124
    LITER_CHAR     shift, and go to state 125
    LITER_STRING   shift, and go to state 126
    CURRENT        shift, and go to state 106
    RESULT         shift, and go to state 107
    PRECURSOR      shift, and go to state 108
    '('            shift, and go to state 127

    $default  reduce using rule 86 (argument_seq)

    call                   go to state 128
    argument_seq           go to state 172
    nonempty_argument_seq  go to state 136
    expr                   go to state 137


state 165

   80 call: PRECURSOR '{' ID '}' '.' . call_sub_seq

    ID  shift, and go to state 138

    call_sub_seq  go to state 173


state 166

   73 call: '(' expr ')' '.' call_sub_seq .
   84 call_sub_seq: call_sub_seq . '.' ID
   85             | call_sub_seq . '.' ID '(' argument_seq ')'

    '.'  shift, and go to state 152

    $default  reduce using rule 73 (call)


state 167

   70 call: ID '(' argument_seq ')' '.' call_sub_seq .
   84 call_sub_seq: call_sub_seq . '.' ID
   85             | call_sub_seq . '.' ID '(' argument_seq ')'

    '.'  shift, and go to state 152

    $default  reduce using rule 70 (call)


state 168

   83 call_sub_seq: ID '(' argument_seq ')' .

    $default  reduce using rule 83 (call_sub_seq)


state 169

   85 call_sub_seq: call_sub_seq '.' ID '(' . argument_seq ')'

    ID             shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 123
    LITER_INTEGER  shift, and go to state 124
    LITER_CHAR     shift, and go to state 125
    LITER_STRING   shift, and go to state 126
    CURRENT        shift, and go to state 106
    RESULT         shift, and go to state 107
    PRECURSOR      shift, and go to state 108
    '('            shift, and go to state 127

    $default  reduce using rule 86 (argument_seq)

    call                   go to state 128
    argument_seq           go to state 174
    nonempty_argument_seq  go to state 136
    expr                   go to state 137


state 170

   65 instruction: CREATE ID '.' ID '(' argument_seq . ')'

    ')'  shift, and go to state 175


state 171

   79 call: PRECURSOR '(' argument_seq ')' '.' call_sub_seq .
   84 call_sub_seq: call_sub_seq . '.' ID
   85             | call_sub_seq . '.' ID '(' argument_seq ')'

    '.'  shift, and go to state 152

    $default  reduce using rule 79 (call)


state 172

   77 call: PRECURSOR '{' ID '}' '(' argument_seq . ')'
   81     | PRECURSOR '{' ID '}' '(' argument_seq . ')' '.' call_sub_seq

    ')'  shift, and go to state 176


state 173

   80 call: PRECURSOR '{' ID '}' '.' call_sub_seq .
   84 call_sub_seq: call_sub_seq . '.' ID
   85             | call_sub_seq . '.' ID '(' argument_seq ')'

    '.'  shift, and go to state 152

    $default  reduce using rule 80 (call)


state 174

   85 call_sub_seq: call_sub_seq '.' ID '(' argument_seq . ')'

    ')'  shift, and go to state 177


state 175

   65 instruction: CREATE ID '.' ID '(' argument_seq ')' .

    $default  reduce using rule 65 (instruction)


state 176

   77 call: PRECURSOR '{' ID '}' '(' argument_seq ')' .
   81     | PRECURSOR '{' ID '}' '(' argument_seq ')' . '.' call_sub_seq

    '.'  shift, and go to state 178

    $default  reduce using rule 77 (call)


state 177

   85 call_sub_seq: call_sub_seq '.' ID '(' argument_seq ')' .

    $default  reduce using rule 85 (call_sub_seq)


state 178

   81 call: PRECURSOR '{' ID '}' '(' argument_seq ')' '.' . call_sub_seq

    ID  shift, and go to state 138

    call_sub_seq  go to state 179


state 179

   81 call: PRECURSOR '{' ID '}' '(' argument_seq ')' '.' call_sub_seq .
   84 call_sub_seq: call_sub_seq . '.' ID
   85             | call_sub_seq . '.' ID '(' argument_seq ')'

    '.'  shift, and go to state 152

    $default  reduce using rule 81 (call)
