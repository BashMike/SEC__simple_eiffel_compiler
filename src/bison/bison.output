Terminals which are not used

   RESULT


State 97 conflicts: 1 shift/reduce
State 110 conflicts: 1 shift/reduce
State 112 conflicts: 1 shift/reduce
State 139 conflicts: 1 shift/reduce
State 191 conflicts: 1 shift/reduce
State 217 conflicts: 1 shift/reduce
State 242 conflicts: 1 shift/reduce
State 243 conflicts: 1 shift/reduce
State 245 conflicts: 1 shift/reduce
State 283 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 identifiers_comma_seq: ID
    2                      | identifiers_comma_seq ',' ID

    3 opt_semicolon: /* empty */
    4              | ';'

    5 opt_semicolon_seq: /* empty */
    6                  | nonempty_opt_semicolon_seq

    7 nonempty_opt_semicolon_seq: ';'
    8                           | nonempty_opt_semicolon_seq ';'

    9 program: class_decl_seq

   10 class_decl_seq: class_decl
   11               | class_decl_seq class_decl

   12 class_decl: CLASS ID parent_seq creators_seq features_seq END
   13           | CLASS ID parent_seq creators_seq END
   14           | CLASS ID parent_seq features_seq END
   15           | CLASS ID parent_seq END
   16           | CLASS ID creators_seq features_seq END
   17           | CLASS ID creators_seq END
   18           | CLASS ID features_seq END
   19           | CLASS ID END

   20 parent_seq: INHERIT parent opt_semicolon
   21           | parent_seq parent opt_semicolon

   22 parent: ID RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   23       | ID UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   24       | ID RENAME rename_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   25       | ID REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   26       | ID RENAME rename_seq UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   27       | ID UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   28       | ID RENAME rename_seq SELECT identifiers_comma_seq END
   29       | ID SELECT identifiers_comma_seq END
   30       | ID RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq END
   31       | ID UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq END
   32       | ID RENAME rename_seq REDEFINE identifiers_comma_seq END
   33       | ID REDEFINE identifiers_comma_seq END
   34       | ID RENAME rename_seq UNDEFINE identifiers_comma_seq END
   35       | ID UNDEFINE identifiers_comma_seq END
   36       | ID RENAME rename_seq END
   37       | ID

   38 rename_seq: ID AS ID
   39           | rename_seq ',' ID AS ID

   40 creators_seq: CREATE identifiers_comma_seq
   41             | creators_seq CREATE identifiers_comma_seq

   42 features_seq: FEATURE feature_decl_seq
   43             | features_seq FEATURE feature_decl_seq

   44 feature_decl_seq: feature_decl opt_semicolon_seq
   45                 | feature_decl_seq feature_decl opt_semicolon_seq

   46 feature_decl: identifiers_comma_seq ':' type
   47             | identifiers_comma_seq DO instruction_seq END
   48             | identifiers_comma_seq LOCAL DO instruction_seq END
   49             | identifiers_comma_seq LOCAL ids_with_type_seq DO instruction_seq END
   50             | identifiers_comma_seq '(' ')' DO instruction_seq END
   51             | identifiers_comma_seq '(' ')' LOCAL DO instruction_seq END
   52             | identifiers_comma_seq '(' ')' LOCAL ids_with_type_seq DO instruction_seq END
   53             | identifiers_comma_seq ':' type DO instruction_seq END
   54             | identifiers_comma_seq ':' type LOCAL DO instruction_seq END
   55             | identifiers_comma_seq ':' type LOCAL ids_with_type_seq DO instruction_seq END
   56             | identifiers_comma_seq '(' ')' ':' type DO instruction_seq END
   57             | identifiers_comma_seq '(' ')' ':' type LOCAL DO instruction_seq END
   58             | identifiers_comma_seq '(' ')' ':' type LOCAL ids_with_type_seq DO instruction_seq END
   59             | identifiers_comma_seq '(' ids_with_type_seq ')' DO instruction_seq END
   60             | identifiers_comma_seq '(' ids_with_type_seq ')' LOCAL DO instruction_seq END
   61             | identifiers_comma_seq '(' ids_with_type_seq ')' LOCAL ids_with_type_seq DO instruction_seq END
   62             | identifiers_comma_seq '(' ids_with_type_seq ')' ':' type DO instruction_seq END
   63             | identifiers_comma_seq '(' ids_with_type_seq ')' ':' type LOCAL DO instruction_seq END
   64             | identifiers_comma_seq '(' ids_with_type_seq ')' ':' type LOCAL ids_with_type_seq DO instruction_seq END

   65 ids_with_type_seq: identifiers_comma_seq ':' type opt_semicolon
   66                  | ids_with_type_seq identifiers_comma_seq ':' type opt_semicolon

   67 instruction_seq: opt_semicolon_seq
   68                | instruction_seq instruction opt_semicolon_seq

   69 instruction: CREATE ID
   70            | CREATE ID '.' ID
   71            | CREATE ID '.' ID '(' ')'
   72            | CREATE ID '.' ID '(' argument_seq ')'
   73            | ID ASSIGNMENT expr
   74            | IF '(' expr ')' THEN instruction_seq END
   75            | IF '(' expr ')' THEN instruction_seq ELSE instruction_seq END
   76            | FROM instruction_seq UNTIL expr LOOP instruction_seq END
   77            | expr

   78 argument_seq: expr
   79             | argument_seq ',' expr

   80 expr: LITER_BOOLEAN
   81     | LITER_INTEGER
   82     | LITER_CHAR
   83     | LITER_STRING
   84     | '(' expr ')'
   85     | CURRENT
   86     | ID
   87     | ID '(' ')'
   88     | ID '(' argument_seq ')'
   89     | PRECURSOR
   90     | PRECURSOR '(' ')'
   91     | PRECURSOR '(' argument_seq ')'
   92     | PRECURSOR '{' ID '}'
   93     | PRECURSOR '{' ID '}' '(' ')'
   94     | PRECURSOR '{' ID '}' '(' argument_seq ')'
   95     | expr '.' ID
   96     | expr '.' ID '(' ')'
   97     | expr '.' ID '(' argument_seq ')'
   98     | CREATE '{' ID '}'
   99     | CREATE '{' ID '}' '.' ID
  100     | CREATE '{' ID '}' '.' ID '(' ')'
  101     | CREATE '{' ID '}' '.' ID '(' argument_seq ')'
  102     | expr '@' expr
  103     | expr '+' expr
  104     | expr '-' expr
  105     | expr '*' expr
  106     | expr INTEGER_DIVISION expr
  107     | '-' expr
  108     | expr '<' expr
  109     | expr '>' expr
  110     | expr LESS_EQUAL expr
  111     | expr GREAT_EQUAL expr
  112     | expr '=' expr
  113     | expr NOTEQUAL expr
  114     | expr AND expr
  115     | expr OR expr
  116     | expr XOR expr
  117     | NOT expr

  118 type: ID
  119     | DATATYPE_BOOLEAN
  120     | DATATYPE_CHARACTER
  121     | DATATYPE_INTEGER
  122     | DATATYPE_NATURAL
  123     | DATATYPE_STRING
  124     | DATATYPE_ARRAY '[' type ']'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 50 51 52 56 57 58 59 60 61 62 63 64 71 72 74 75 84 87 88 90
    91 93 94 96 97 100 101
')' (41) 50 51 52 56 57 58 59 60 61 62 63 64 71 72 74 75 84 87 88 90
    91 93 94 96 97 100 101
'*' (42) 105
'+' (43) 103
',' (44) 2 39 79
'-' (45) 104 107
'.' (46) 70 71 72 95 96 97 99 100 101
':' (58) 46 53 54 55 56 57 58 62 63 64 65 66
';' (59) 4 7 8
'<' (60) 108
'=' (61) 112
'>' (62) 109
'@' (64) 102
'[' (91) 124
']' (93) 124
'{' (123) 92 93 94 98 99 100 101
'}' (125) 92 93 94 98 99 100 101
error (256)
ID (258) 1 2 12 13 14 15 16 17 18 19 22 23 24 25 26 27 28 29 30 31
    32 33 34 35 36 37 38 39 69 70 71 72 73 86 87 88 92 93 94 95 96
    97 98 99 100 101 118
CLASS (259) 12 13 14 15 16 17 18 19
END (260) 12 13 14 15 16 17 18 19 22 23 24 25 26 27 28 29 30 31 32
    33 34 35 36 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63
    64 74 75 76
IF (261) 74 75
THEN (262) 74 75
ELSE (263) 75
FROM (264) 76
UNTIL (265) 76
LOOP (266) 76
DATATYPE_BOOLEAN (267) 119
DATATYPE_CHARACTER (268) 120
DATATYPE_INTEGER (269) 121
DATATYPE_NATURAL (270) 122
DATATYPE_STRING (271) 123
DATATYPE_ARRAY (272) 124
ASSIGNMENT (273) 73
XOR (274) 116
OR (275) 115
AND (276) 114
NOTEQUAL (277) 113
GREAT_EQUAL (278) 111
LESS_EQUAL (279) 110
INTEGER_DIVISION (280) 106
NOT (281) 117
UMINUS (282)
LITER_BOOLEAN (283) 80
LITER_INTEGER (284) 81
LITER_CHAR (285) 82
LITER_STRING (286) 83
INHERIT (287) 20
RENAME (288) 22 24 26 28 30 32 34 36
UNDEFINE (289) 22 23 26 27 30 31 34 35
REDEFINE (290) 22 23 24 25 30 31 32 33
SELECT (291) 22 23 24 25 26 27 28 29
AS (292) 38 39
CREATE (293) 40 41 69 70 71 72 98 99 100 101
FEATURE (294) 42 43
LOCAL (295) 48 49 51 52 54 55 57 58 60 61 63 64
DO (296) 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
CURRENT (297) 85
RESULT (298)
PRECURSOR (299) 89 90 91 92 93 94


Nonterminals, with rules where they appear

$accept (62)
    on left: 0
identifiers_comma_seq (63)
    on left: 1 2, on right: 2 22 23 24 25 26 27 28 29 30 31 32 33 34
    35 40 41 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63
    64 65 66
opt_semicolon (64)
    on left: 3 4, on right: 20 21 65 66
opt_semicolon_seq (65)
    on left: 5 6, on right: 44 45 67 68
nonempty_opt_semicolon_seq (66)
    on left: 7 8, on right: 6 8
program (67)
    on left: 9, on right: 0
class_decl_seq (68)
    on left: 10 11, on right: 9 11
class_decl (69)
    on left: 12 13 14 15 16 17 18 19, on right: 10 11
parent_seq (70)
    on left: 20 21, on right: 12 13 14 15 21
parent (71)
    on left: 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37,
    on right: 20 21
rename_seq (72)
    on left: 38 39, on right: 22 24 26 28 30 32 34 36 39
creators_seq (73)
    on left: 40 41, on right: 12 13 16 17 41
features_seq (74)
    on left: 42 43, on right: 12 14 16 18 43
feature_decl_seq (75)
    on left: 44 45, on right: 42 43 45
feature_decl (76)
    on left: 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63
    64, on right: 44 45
ids_with_type_seq (77)
    on left: 65 66, on right: 49 52 55 58 59 60 61 62 63 64 66
instruction_seq (78)
    on left: 67 68, on right: 47 48 49 50 51 52 53 54 55 56 57 58 59
    60 61 62 63 64 68 74 75 76
instruction (79)
    on left: 69 70 71 72 73 74 75 76 77, on right: 68
argument_seq (80)
    on left: 78 79, on right: 72 79 88 91 94 97 101
expr (81)
    on left: 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97
    98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114
    115 116 117, on right: 73 74 75 76 77 78 79 84 95 96 97 102 103
    104 105 106 107 108 109 110 111 112 113 114 115 116 117
type (82)
    on left: 118 119 120 121 122 123 124, on right: 46 53 54 55 56
    57 58 62 63 64 65 66 124


state 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program         go to state 2
    class_decl_seq  go to state 3
    class_decl      go to state 4


state 1

   12 class_decl: CLASS . ID parent_seq creators_seq features_seq END
   13           | CLASS . ID parent_seq creators_seq END
   14           | CLASS . ID parent_seq features_seq END
   15           | CLASS . ID parent_seq END
   16           | CLASS . ID creators_seq features_seq END
   17           | CLASS . ID creators_seq END
   18           | CLASS . ID features_seq END
   19           | CLASS . ID END

    ID  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    9 program: class_decl_seq .
   11 class_decl_seq: class_decl_seq . class_decl

    CLASS  shift, and go to state 1

    $default  reduce using rule 9 (program)

    class_decl  go to state 7


state 4

   10 class_decl_seq: class_decl .

    $default  reduce using rule 10 (class_decl_seq)


state 5

   12 class_decl: CLASS ID . parent_seq creators_seq features_seq END
   13           | CLASS ID . parent_seq creators_seq END
   14           | CLASS ID . parent_seq features_seq END
   15           | CLASS ID . parent_seq END
   16           | CLASS ID . creators_seq features_seq END
   17           | CLASS ID . creators_seq END
   18           | CLASS ID . features_seq END
   19           | CLASS ID . END

    END      shift, and go to state 8
    INHERIT  shift, and go to state 9
    CREATE   shift, and go to state 10
    FEATURE  shift, and go to state 11

    parent_seq    go to state 12
    creators_seq  go to state 13
    features_seq  go to state 14


state 6

    0 $accept: program $end .

    $default  accept


state 7

   11 class_decl_seq: class_decl_seq class_decl .

    $default  reduce using rule 11 (class_decl_seq)


state 8

   19 class_decl: CLASS ID END .

    $default  reduce using rule 19 (class_decl)


state 9

   20 parent_seq: INHERIT . parent opt_semicolon

    ID  shift, and go to state 15

    parent  go to state 16


state 10

   40 creators_seq: CREATE . identifiers_comma_seq

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 18


state 11

   42 features_seq: FEATURE . feature_decl_seq

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 19
    feature_decl_seq       go to state 20
    feature_decl           go to state 21


state 12

   12 class_decl: CLASS ID parent_seq . creators_seq features_seq END
   13           | CLASS ID parent_seq . creators_seq END
   14           | CLASS ID parent_seq . features_seq END
   15           | CLASS ID parent_seq . END
   21 parent_seq: parent_seq . parent opt_semicolon

    ID       shift, and go to state 15
    END      shift, and go to state 22
    CREATE   shift, and go to state 10
    FEATURE  shift, and go to state 11

    parent        go to state 23
    creators_seq  go to state 24
    features_seq  go to state 25


state 13

   16 class_decl: CLASS ID creators_seq . features_seq END
   17           | CLASS ID creators_seq . END
   41 creators_seq: creators_seq . CREATE identifiers_comma_seq

    END      shift, and go to state 26
    CREATE   shift, and go to state 27
    FEATURE  shift, and go to state 11

    features_seq  go to state 28


state 14

   18 class_decl: CLASS ID features_seq . END
   43 features_seq: features_seq . FEATURE feature_decl_seq

    END      shift, and go to state 29
    FEATURE  shift, and go to state 30


state 15

   22 parent: ID . RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   23       | ID . UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   24       | ID . RENAME rename_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   25       | ID . REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   26       | ID . RENAME rename_seq UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   27       | ID . UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   28       | ID . RENAME rename_seq SELECT identifiers_comma_seq END
   29       | ID . SELECT identifiers_comma_seq END
   30       | ID . RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq END
   31       | ID . UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq END
   32       | ID . RENAME rename_seq REDEFINE identifiers_comma_seq END
   33       | ID . REDEFINE identifiers_comma_seq END
   34       | ID . RENAME rename_seq UNDEFINE identifiers_comma_seq END
   35       | ID . UNDEFINE identifiers_comma_seq END
   36       | ID . RENAME rename_seq END
   37       | ID .

    RENAME    shift, and go to state 31
    UNDEFINE  shift, and go to state 32
    REDEFINE  shift, and go to state 33
    SELECT    shift, and go to state 34

    $default  reduce using rule 37 (parent)


state 16

   20 parent_seq: INHERIT parent . opt_semicolon

    ';'  shift, and go to state 35

    $default  reduce using rule 3 (opt_semicolon)

    opt_semicolon  go to state 36


state 17

    1 identifiers_comma_seq: ID .

    $default  reduce using rule 1 (identifiers_comma_seq)


state 18

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   40 creators_seq: CREATE identifiers_comma_seq .

    ','  shift, and go to state 37

    $default  reduce using rule 40 (creators_seq)


state 19

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   46 feature_decl: identifiers_comma_seq . ':' type
   47             | identifiers_comma_seq . DO instruction_seq END
   48             | identifiers_comma_seq . LOCAL DO instruction_seq END
   49             | identifiers_comma_seq . LOCAL ids_with_type_seq DO instruction_seq END
   50             | identifiers_comma_seq . '(' ')' DO instruction_seq END
   51             | identifiers_comma_seq . '(' ')' LOCAL DO instruction_seq END
   52             | identifiers_comma_seq . '(' ')' LOCAL ids_with_type_seq DO instruction_seq END
   53             | identifiers_comma_seq . ':' type DO instruction_seq END
   54             | identifiers_comma_seq . ':' type LOCAL DO instruction_seq END
   55             | identifiers_comma_seq . ':' type LOCAL ids_with_type_seq DO instruction_seq END
   56             | identifiers_comma_seq . '(' ')' ':' type DO instruction_seq END
   57             | identifiers_comma_seq . '(' ')' ':' type LOCAL DO instruction_seq END
   58             | identifiers_comma_seq . '(' ')' ':' type LOCAL ids_with_type_seq DO instruction_seq END
   59             | identifiers_comma_seq . '(' ids_with_type_seq ')' DO instruction_seq END
   60             | identifiers_comma_seq . '(' ids_with_type_seq ')' LOCAL DO instruction_seq END
   61             | identifiers_comma_seq . '(' ids_with_type_seq ')' LOCAL ids_with_type_seq DO instruction_seq END
   62             | identifiers_comma_seq . '(' ids_with_type_seq ')' ':' type DO instruction_seq END
   63             | identifiers_comma_seq . '(' ids_with_type_seq ')' ':' type LOCAL DO instruction_seq END
   64             | identifiers_comma_seq . '(' ids_with_type_seq ')' ':' type LOCAL ids_with_type_seq DO instruction_seq END

    '('    shift, and go to state 38
    LOCAL  shift, and go to state 39
    DO     shift, and go to state 40
    ','    shift, and go to state 37
    ':'    shift, and go to state 41


state 20

   42 features_seq: FEATURE feature_decl_seq .
   45 feature_decl_seq: feature_decl_seq . feature_decl opt_semicolon_seq

    ID  shift, and go to state 17

    $default  reduce using rule 42 (features_seq)

    identifiers_comma_seq  go to state 19
    feature_decl           go to state 42


state 21

   44 feature_decl_seq: feature_decl . opt_semicolon_seq

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 44
    nonempty_opt_semicolon_seq  go to state 45


state 22

   15 class_decl: CLASS ID parent_seq END .

    $default  reduce using rule 15 (class_decl)


state 23

   21 parent_seq: parent_seq parent . opt_semicolon

    ';'  shift, and go to state 35

    $default  reduce using rule 3 (opt_semicolon)

    opt_semicolon  go to state 46


state 24

   12 class_decl: CLASS ID parent_seq creators_seq . features_seq END
   13           | CLASS ID parent_seq creators_seq . END
   41 creators_seq: creators_seq . CREATE identifiers_comma_seq

    END      shift, and go to state 47
    CREATE   shift, and go to state 27
    FEATURE  shift, and go to state 11

    features_seq  go to state 48


state 25

   14 class_decl: CLASS ID parent_seq features_seq . END
   43 features_seq: features_seq . FEATURE feature_decl_seq

    END      shift, and go to state 49
    FEATURE  shift, and go to state 30


state 26

   17 class_decl: CLASS ID creators_seq END .

    $default  reduce using rule 17 (class_decl)


state 27

   41 creators_seq: creators_seq CREATE . identifiers_comma_seq

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 50


state 28

   16 class_decl: CLASS ID creators_seq features_seq . END
   43 features_seq: features_seq . FEATURE feature_decl_seq

    END      shift, and go to state 51
    FEATURE  shift, and go to state 30


state 29

   18 class_decl: CLASS ID features_seq END .

    $default  reduce using rule 18 (class_decl)


state 30

   43 features_seq: features_seq FEATURE . feature_decl_seq

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 19
    feature_decl_seq       go to state 52
    feature_decl           go to state 21


state 31

   22 parent: ID RENAME . rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   24       | ID RENAME . rename_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   26       | ID RENAME . rename_seq UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   28       | ID RENAME . rename_seq SELECT identifiers_comma_seq END
   30       | ID RENAME . rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq END
   32       | ID RENAME . rename_seq REDEFINE identifiers_comma_seq END
   34       | ID RENAME . rename_seq UNDEFINE identifiers_comma_seq END
   36       | ID RENAME . rename_seq END

    ID  shift, and go to state 53

    rename_seq  go to state 54


state 32

   23 parent: ID UNDEFINE . identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   27       | ID UNDEFINE . identifiers_comma_seq SELECT identifiers_comma_seq END
   31       | ID UNDEFINE . identifiers_comma_seq REDEFINE identifiers_comma_seq END
   35       | ID UNDEFINE . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 55


state 33

   25 parent: ID REDEFINE . identifiers_comma_seq SELECT identifiers_comma_seq END
   33       | ID REDEFINE . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 56


state 34

   29 parent: ID SELECT . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 57


state 35

    4 opt_semicolon: ';' .

    $default  reduce using rule 4 (opt_semicolon)


state 36

   20 parent_seq: INHERIT parent opt_semicolon .

    $default  reduce using rule 20 (parent_seq)


state 37

    2 identifiers_comma_seq: identifiers_comma_seq ',' . ID

    ID  shift, and go to state 58


state 38

   50 feature_decl: identifiers_comma_seq '(' . ')' DO instruction_seq END
   51             | identifiers_comma_seq '(' . ')' LOCAL DO instruction_seq END
   52             | identifiers_comma_seq '(' . ')' LOCAL ids_with_type_seq DO instruction_seq END
   56             | identifiers_comma_seq '(' . ')' ':' type DO instruction_seq END
   57             | identifiers_comma_seq '(' . ')' ':' type LOCAL DO instruction_seq END
   58             | identifiers_comma_seq '(' . ')' ':' type LOCAL ids_with_type_seq DO instruction_seq END
   59             | identifiers_comma_seq '(' . ids_with_type_seq ')' DO instruction_seq END
   60             | identifiers_comma_seq '(' . ids_with_type_seq ')' LOCAL DO instruction_seq END
   61             | identifiers_comma_seq '(' . ids_with_type_seq ')' LOCAL ids_with_type_seq DO instruction_seq END
   62             | identifiers_comma_seq '(' . ids_with_type_seq ')' ':' type DO instruction_seq END
   63             | identifiers_comma_seq '(' . ids_with_type_seq ')' ':' type LOCAL DO instruction_seq END
   64             | identifiers_comma_seq '(' . ids_with_type_seq ')' ':' type LOCAL ids_with_type_seq DO instruction_seq END

    ID   shift, and go to state 17
    ')'  shift, and go to state 59

    identifiers_comma_seq  go to state 60
    ids_with_type_seq      go to state 61


state 39

   48 feature_decl: identifiers_comma_seq LOCAL . DO instruction_seq END
   49             | identifiers_comma_seq LOCAL . ids_with_type_seq DO instruction_seq END

    ID  shift, and go to state 17
    DO  shift, and go to state 62

    identifiers_comma_seq  go to state 60
    ids_with_type_seq      go to state 63


state 40

   47 feature_decl: identifiers_comma_seq DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 65


state 41

   46 feature_decl: identifiers_comma_seq ':' . type
   53             | identifiers_comma_seq ':' . type DO instruction_seq END
   54             | identifiers_comma_seq ':' . type LOCAL DO instruction_seq END
   55             | identifiers_comma_seq ':' . type LOCAL ids_with_type_seq DO instruction_seq END

    ID                  shift, and go to state 66
    DATATYPE_BOOLEAN    shift, and go to state 67
    DATATYPE_CHARACTER  shift, and go to state 68
    DATATYPE_INTEGER    shift, and go to state 69
    DATATYPE_NATURAL    shift, and go to state 70
    DATATYPE_STRING     shift, and go to state 71
    DATATYPE_ARRAY      shift, and go to state 72

    type  go to state 73


state 42

   45 feature_decl_seq: feature_decl_seq feature_decl . opt_semicolon_seq

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 74
    nonempty_opt_semicolon_seq  go to state 45


state 43

    7 nonempty_opt_semicolon_seq: ';' .

    $default  reduce using rule 7 (nonempty_opt_semicolon_seq)


state 44

   44 feature_decl_seq: feature_decl opt_semicolon_seq .

    $default  reduce using rule 44 (feature_decl_seq)


state 45

    6 opt_semicolon_seq: nonempty_opt_semicolon_seq .
    8 nonempty_opt_semicolon_seq: nonempty_opt_semicolon_seq . ';'

    ';'  shift, and go to state 75

    $default  reduce using rule 6 (opt_semicolon_seq)


state 46

   21 parent_seq: parent_seq parent opt_semicolon .

    $default  reduce using rule 21 (parent_seq)


state 47

   13 class_decl: CLASS ID parent_seq creators_seq END .

    $default  reduce using rule 13 (class_decl)


state 48

   12 class_decl: CLASS ID parent_seq creators_seq features_seq . END
   43 features_seq: features_seq . FEATURE feature_decl_seq

    END      shift, and go to state 76
    FEATURE  shift, and go to state 30


state 49

   14 class_decl: CLASS ID parent_seq features_seq END .

    $default  reduce using rule 14 (class_decl)


state 50

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   41 creators_seq: creators_seq CREATE identifiers_comma_seq .

    ','  shift, and go to state 37

    $default  reduce using rule 41 (creators_seq)


state 51

   16 class_decl: CLASS ID creators_seq features_seq END .

    $default  reduce using rule 16 (class_decl)


state 52

   43 features_seq: features_seq FEATURE feature_decl_seq .
   45 feature_decl_seq: feature_decl_seq . feature_decl opt_semicolon_seq

    ID  shift, and go to state 17

    $default  reduce using rule 43 (features_seq)

    identifiers_comma_seq  go to state 19
    feature_decl           go to state 42


state 53

   38 rename_seq: ID . AS ID

    AS  shift, and go to state 77


state 54

   22 parent: ID RENAME rename_seq . UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   24       | ID RENAME rename_seq . REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   26       | ID RENAME rename_seq . UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   28       | ID RENAME rename_seq . SELECT identifiers_comma_seq END
   30       | ID RENAME rename_seq . UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq END
   32       | ID RENAME rename_seq . REDEFINE identifiers_comma_seq END
   34       | ID RENAME rename_seq . UNDEFINE identifiers_comma_seq END
   36       | ID RENAME rename_seq . END
   39 rename_seq: rename_seq . ',' ID AS ID

    END       shift, and go to state 78
    UNDEFINE  shift, and go to state 79
    REDEFINE  shift, and go to state 80
    SELECT    shift, and go to state 81
    ','       shift, and go to state 82


state 55

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   23 parent: ID UNDEFINE identifiers_comma_seq . REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   27       | ID UNDEFINE identifiers_comma_seq . SELECT identifiers_comma_seq END
   31       | ID UNDEFINE identifiers_comma_seq . REDEFINE identifiers_comma_seq END
   35       | ID UNDEFINE identifiers_comma_seq . END

    END       shift, and go to state 83
    REDEFINE  shift, and go to state 84
    SELECT    shift, and go to state 85
    ','       shift, and go to state 37


state 56

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   25 parent: ID REDEFINE identifiers_comma_seq . SELECT identifiers_comma_seq END
   33       | ID REDEFINE identifiers_comma_seq . END

    END     shift, and go to state 86
    SELECT  shift, and go to state 87
    ','     shift, and go to state 37


state 57

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   29 parent: ID SELECT identifiers_comma_seq . END

    END  shift, and go to state 88
    ','  shift, and go to state 37


state 58

    2 identifiers_comma_seq: identifiers_comma_seq ',' ID .

    $default  reduce using rule 2 (identifiers_comma_seq)


state 59

   50 feature_decl: identifiers_comma_seq '(' ')' . DO instruction_seq END
   51             | identifiers_comma_seq '(' ')' . LOCAL DO instruction_seq END
   52             | identifiers_comma_seq '(' ')' . LOCAL ids_with_type_seq DO instruction_seq END
   56             | identifiers_comma_seq '(' ')' . ':' type DO instruction_seq END
   57             | identifiers_comma_seq '(' ')' . ':' type LOCAL DO instruction_seq END
   58             | identifiers_comma_seq '(' ')' . ':' type LOCAL ids_with_type_seq DO instruction_seq END

    LOCAL  shift, and go to state 89
    DO     shift, and go to state 90
    ':'    shift, and go to state 91


state 60

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   65 ids_with_type_seq: identifiers_comma_seq . ':' type opt_semicolon

    ','  shift, and go to state 37
    ':'  shift, and go to state 92


state 61

   59 feature_decl: identifiers_comma_seq '(' ids_with_type_seq . ')' DO instruction_seq END
   60             | identifiers_comma_seq '(' ids_with_type_seq . ')' LOCAL DO instruction_seq END
   61             | identifiers_comma_seq '(' ids_with_type_seq . ')' LOCAL ids_with_type_seq DO instruction_seq END
   62             | identifiers_comma_seq '(' ids_with_type_seq . ')' ':' type DO instruction_seq END
   63             | identifiers_comma_seq '(' ids_with_type_seq . ')' ':' type LOCAL DO instruction_seq END
   64             | identifiers_comma_seq '(' ids_with_type_seq . ')' ':' type LOCAL ids_with_type_seq DO instruction_seq END
   66 ids_with_type_seq: ids_with_type_seq . identifiers_comma_seq ':' type opt_semicolon

    ID   shift, and go to state 17
    ')'  shift, and go to state 93

    identifiers_comma_seq  go to state 94


state 62

   48 feature_decl: identifiers_comma_seq LOCAL DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 95


state 63

   49 feature_decl: identifiers_comma_seq LOCAL ids_with_type_seq . DO instruction_seq END
   66 ids_with_type_seq: ids_with_type_seq . identifiers_comma_seq ':' type opt_semicolon

    ID  shift, and go to state 17
    DO  shift, and go to state 96

    identifiers_comma_seq  go to state 94


state 64

   67 instruction_seq: opt_semicolon_seq .

    $default  reduce using rule 67 (instruction_seq)


state 65

   47 feature_decl: identifiers_comma_seq DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 97
    END            shift, and go to state 98
    IF             shift, and go to state 99
    FROM           shift, and go to state 100
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 108
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    instruction  go to state 111
    expr         go to state 112


state 66

  118 type: ID .

    $default  reduce using rule 118 (type)


state 67

  119 type: DATATYPE_BOOLEAN .

    $default  reduce using rule 119 (type)


state 68

  120 type: DATATYPE_CHARACTER .

    $default  reduce using rule 120 (type)


state 69

  121 type: DATATYPE_INTEGER .

    $default  reduce using rule 121 (type)


state 70

  122 type: DATATYPE_NATURAL .

    $default  reduce using rule 122 (type)


state 71

  123 type: DATATYPE_STRING .

    $default  reduce using rule 123 (type)


state 72

  124 type: DATATYPE_ARRAY . '[' type ']'

    '['  shift, and go to state 113


state 73

   46 feature_decl: identifiers_comma_seq ':' type .
   53             | identifiers_comma_seq ':' type . DO instruction_seq END
   54             | identifiers_comma_seq ':' type . LOCAL DO instruction_seq END
   55             | identifiers_comma_seq ':' type . LOCAL ids_with_type_seq DO instruction_seq END

    LOCAL  shift, and go to state 114
    DO     shift, and go to state 115

    $default  reduce using rule 46 (feature_decl)


state 74

   45 feature_decl_seq: feature_decl_seq feature_decl opt_semicolon_seq .

    $default  reduce using rule 45 (feature_decl_seq)


state 75

    8 nonempty_opt_semicolon_seq: nonempty_opt_semicolon_seq ';' .

    $default  reduce using rule 8 (nonempty_opt_semicolon_seq)


state 76

   12 class_decl: CLASS ID parent_seq creators_seq features_seq END .

    $default  reduce using rule 12 (class_decl)


state 77

   38 rename_seq: ID AS . ID

    ID  shift, and go to state 116


state 78

   36 parent: ID RENAME rename_seq END .

    $default  reduce using rule 36 (parent)


state 79

   22 parent: ID RENAME rename_seq UNDEFINE . identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   26       | ID RENAME rename_seq UNDEFINE . identifiers_comma_seq SELECT identifiers_comma_seq END
   30       | ID RENAME rename_seq UNDEFINE . identifiers_comma_seq REDEFINE identifiers_comma_seq END
   34       | ID RENAME rename_seq UNDEFINE . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 117


state 80

   24 parent: ID RENAME rename_seq REDEFINE . identifiers_comma_seq SELECT identifiers_comma_seq END
   32       | ID RENAME rename_seq REDEFINE . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 118


state 81

   28 parent: ID RENAME rename_seq SELECT . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 119


state 82

   39 rename_seq: rename_seq ',' . ID AS ID

    ID  shift, and go to state 120


state 83

   35 parent: ID UNDEFINE identifiers_comma_seq END .

    $default  reduce using rule 35 (parent)


state 84

   23 parent: ID UNDEFINE identifiers_comma_seq REDEFINE . identifiers_comma_seq SELECT identifiers_comma_seq END
   31       | ID UNDEFINE identifiers_comma_seq REDEFINE . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 121


state 85

   27 parent: ID UNDEFINE identifiers_comma_seq SELECT . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 122


state 86

   33 parent: ID REDEFINE identifiers_comma_seq END .

    $default  reduce using rule 33 (parent)


state 87

   25 parent: ID REDEFINE identifiers_comma_seq SELECT . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 123


state 88

   29 parent: ID SELECT identifiers_comma_seq END .

    $default  reduce using rule 29 (parent)


state 89

   51 feature_decl: identifiers_comma_seq '(' ')' LOCAL . DO instruction_seq END
   52             | identifiers_comma_seq '(' ')' LOCAL . ids_with_type_seq DO instruction_seq END

    ID  shift, and go to state 17
    DO  shift, and go to state 124

    identifiers_comma_seq  go to state 60
    ids_with_type_seq      go to state 125


state 90

   50 feature_decl: identifiers_comma_seq '(' ')' DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 126


state 91

   56 feature_decl: identifiers_comma_seq '(' ')' ':' . type DO instruction_seq END
   57             | identifiers_comma_seq '(' ')' ':' . type LOCAL DO instruction_seq END
   58             | identifiers_comma_seq '(' ')' ':' . type LOCAL ids_with_type_seq DO instruction_seq END

    ID                  shift, and go to state 66
    DATATYPE_BOOLEAN    shift, and go to state 67
    DATATYPE_CHARACTER  shift, and go to state 68
    DATATYPE_INTEGER    shift, and go to state 69
    DATATYPE_NATURAL    shift, and go to state 70
    DATATYPE_STRING     shift, and go to state 71
    DATATYPE_ARRAY      shift, and go to state 72

    type  go to state 127


state 92

   65 ids_with_type_seq: identifiers_comma_seq ':' . type opt_semicolon

    ID                  shift, and go to state 66
    DATATYPE_BOOLEAN    shift, and go to state 67
    DATATYPE_CHARACTER  shift, and go to state 68
    DATATYPE_INTEGER    shift, and go to state 69
    DATATYPE_NATURAL    shift, and go to state 70
    DATATYPE_STRING     shift, and go to state 71
    DATATYPE_ARRAY      shift, and go to state 72

    type  go to state 128


state 93

   59 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' . DO instruction_seq END
   60             | identifiers_comma_seq '(' ids_with_type_seq ')' . LOCAL DO instruction_seq END
   61             | identifiers_comma_seq '(' ids_with_type_seq ')' . LOCAL ids_with_type_seq DO instruction_seq END
   62             | identifiers_comma_seq '(' ids_with_type_seq ')' . ':' type DO instruction_seq END
   63             | identifiers_comma_seq '(' ids_with_type_seq ')' . ':' type LOCAL DO instruction_seq END
   64             | identifiers_comma_seq '(' ids_with_type_seq ')' . ':' type LOCAL ids_with_type_seq DO instruction_seq END

    LOCAL  shift, and go to state 129
    DO     shift, and go to state 130
    ':'    shift, and go to state 131


state 94

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   66 ids_with_type_seq: ids_with_type_seq identifiers_comma_seq . ':' type opt_semicolon

    ','  shift, and go to state 37
    ':'  shift, and go to state 132


state 95

   48 feature_decl: identifiers_comma_seq LOCAL DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 97
    END            shift, and go to state 133
    IF             shift, and go to state 99
    FROM           shift, and go to state 100
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 108
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    instruction  go to state 111
    expr         go to state 112


state 96

   49 feature_decl: identifiers_comma_seq LOCAL ids_with_type_seq DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 134


state 97

   73 instruction: ID . ASSIGNMENT expr
   86 expr: ID .
   87     | ID . '(' ')'
   88     | ID . '(' argument_seq ')'

    ASSIGNMENT  shift, and go to state 135
    '('         shift, and go to state 136

    '('       [reduce using rule 86 (expr)]
    $default  reduce using rule 86 (expr)


state 98

   47 feature_decl: identifiers_comma_seq DO instruction_seq END .

    $default  reduce using rule 47 (feature_decl)


state 99

   74 instruction: IF . '(' expr ')' THEN instruction_seq END
   75            | IF . '(' expr ')' THEN instruction_seq ELSE instruction_seq END

    '('  shift, and go to state 137


state 100

   76 instruction: FROM . instruction_seq UNTIL expr LOOP instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 138


state 101

  107 expr: '-' . expr

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    expr  go to state 141


state 102

  117 expr: NOT . expr

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    expr  go to state 142


state 103

   84 expr: '(' . expr ')'

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    expr  go to state 143


state 104

   80 expr: LITER_BOOLEAN .

    $default  reduce using rule 80 (expr)


state 105

   81 expr: LITER_INTEGER .

    $default  reduce using rule 81 (expr)


state 106

   82 expr: LITER_CHAR .

    $default  reduce using rule 82 (expr)


state 107

   83 expr: LITER_STRING .

    $default  reduce using rule 83 (expr)


state 108

   69 instruction: CREATE . ID
   70            | CREATE . ID '.' ID
   71            | CREATE . ID '.' ID '(' ')'
   72            | CREATE . ID '.' ID '(' argument_seq ')'
   98 expr: CREATE . '{' ID '}'
   99     | CREATE . '{' ID '}' '.' ID
  100     | CREATE . '{' ID '}' '.' ID '(' ')'
  101     | CREATE . '{' ID '}' '.' ID '(' argument_seq ')'

    ID   shift, and go to state 144
    '{'  shift, and go to state 145


state 109

   85 expr: CURRENT .

    $default  reduce using rule 85 (expr)


state 110

   89 expr: PRECURSOR .
   90     | PRECURSOR . '(' ')'
   91     | PRECURSOR . '(' argument_seq ')'
   92     | PRECURSOR . '{' ID '}'
   93     | PRECURSOR . '{' ID '}' '(' ')'
   94     | PRECURSOR . '{' ID '}' '(' argument_seq ')'

    '('  shift, and go to state 146
    '{'  shift, and go to state 147

    '('       [reduce using rule 89 (expr)]
    $default  reduce using rule 89 (expr)


state 111

   68 instruction_seq: instruction_seq instruction . opt_semicolon_seq

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 148
    nonempty_opt_semicolon_seq  go to state 45


state 112

   77 instruction: expr .
   95 expr: expr . '.' ID
   96     | expr . '.' ID '(' ')'
   97     | expr . '.' ID '(' argument_seq ')'
  102     | expr . '@' expr
  103     | expr . '+' expr
  104     | expr . '-' expr
  105     | expr . '*' expr
  106     | expr . INTEGER_DIVISION expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . LESS_EQUAL expr
  111     | expr . GREAT_EQUAL expr
  112     | expr . '=' expr
  113     | expr . NOTEQUAL expr
  114     | expr . AND expr
  115     | expr . OR expr
  116     | expr . XOR expr

    XOR               shift, and go to state 149
    OR                shift, and go to state 150
    AND               shift, and go to state 151
    '<'               shift, and go to state 152
    '>'               shift, and go to state 153
    '='               shift, and go to state 154
    NOTEQUAL          shift, and go to state 155
    GREAT_EQUAL       shift, and go to state 156
    LESS_EQUAL        shift, and go to state 157
    '+'               shift, and go to state 158
    '-'               shift, and go to state 159
    '*'               shift, and go to state 160
    INTEGER_DIVISION  shift, and go to state 161
    '@'               shift, and go to state 162
    '.'               shift, and go to state 163

    '-'       [reduce using rule 77 (instruction)]
    $default  reduce using rule 77 (instruction)


state 113

  124 type: DATATYPE_ARRAY '[' . type ']'

    ID                  shift, and go to state 66
    DATATYPE_BOOLEAN    shift, and go to state 67
    DATATYPE_CHARACTER  shift, and go to state 68
    DATATYPE_INTEGER    shift, and go to state 69
    DATATYPE_NATURAL    shift, and go to state 70
    DATATYPE_STRING     shift, and go to state 71
    DATATYPE_ARRAY      shift, and go to state 72

    type  go to state 164


state 114

   54 feature_decl: identifiers_comma_seq ':' type LOCAL . DO instruction_seq END
   55             | identifiers_comma_seq ':' type LOCAL . ids_with_type_seq DO instruction_seq END

    ID  shift, and go to state 17
    DO  shift, and go to state 165

    identifiers_comma_seq  go to state 60
    ids_with_type_seq      go to state 166


state 115

   53 feature_decl: identifiers_comma_seq ':' type DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 167


state 116

   38 rename_seq: ID AS ID .

    $default  reduce using rule 38 (rename_seq)


state 117

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   22 parent: ID RENAME rename_seq UNDEFINE identifiers_comma_seq . REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   26       | ID RENAME rename_seq UNDEFINE identifiers_comma_seq . SELECT identifiers_comma_seq END
   30       | ID RENAME rename_seq UNDEFINE identifiers_comma_seq . REDEFINE identifiers_comma_seq END
   34       | ID RENAME rename_seq UNDEFINE identifiers_comma_seq . END

    END       shift, and go to state 168
    REDEFINE  shift, and go to state 169
    SELECT    shift, and go to state 170
    ','       shift, and go to state 37


state 118

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   24 parent: ID RENAME rename_seq REDEFINE identifiers_comma_seq . SELECT identifiers_comma_seq END
   32       | ID RENAME rename_seq REDEFINE identifiers_comma_seq . END

    END     shift, and go to state 171
    SELECT  shift, and go to state 172
    ','     shift, and go to state 37


state 119

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   28 parent: ID RENAME rename_seq SELECT identifiers_comma_seq . END

    END  shift, and go to state 173
    ','  shift, and go to state 37


state 120

   39 rename_seq: rename_seq ',' ID . AS ID

    AS  shift, and go to state 174


state 121

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   23 parent: ID UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq . SELECT identifiers_comma_seq END
   31       | ID UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq . END

    END     shift, and go to state 175
    SELECT  shift, and go to state 176
    ','     shift, and go to state 37


state 122

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   27 parent: ID UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq . END

    END  shift, and go to state 177
    ','  shift, and go to state 37


state 123

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   25 parent: ID REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq . END

    END  shift, and go to state 178
    ','  shift, and go to state 37


state 124

   51 feature_decl: identifiers_comma_seq '(' ')' LOCAL DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 179


state 125

   52 feature_decl: identifiers_comma_seq '(' ')' LOCAL ids_with_type_seq . DO instruction_seq END
   66 ids_with_type_seq: ids_with_type_seq . identifiers_comma_seq ':' type opt_semicolon

    ID  shift, and go to state 17
    DO  shift, and go to state 180

    identifiers_comma_seq  go to state 94


state 126

   50 feature_decl: identifiers_comma_seq '(' ')' DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 97
    END            shift, and go to state 181
    IF             shift, and go to state 99
    FROM           shift, and go to state 100
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 108
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    instruction  go to state 111
    expr         go to state 112


state 127

   56 feature_decl: identifiers_comma_seq '(' ')' ':' type . DO instruction_seq END
   57             | identifiers_comma_seq '(' ')' ':' type . LOCAL DO instruction_seq END
   58             | identifiers_comma_seq '(' ')' ':' type . LOCAL ids_with_type_seq DO instruction_seq END

    LOCAL  shift, and go to state 182
    DO     shift, and go to state 183


state 128

   65 ids_with_type_seq: identifiers_comma_seq ':' type . opt_semicolon

    ';'  shift, and go to state 35

    $default  reduce using rule 3 (opt_semicolon)

    opt_semicolon  go to state 184


state 129

   60 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' LOCAL . DO instruction_seq END
   61             | identifiers_comma_seq '(' ids_with_type_seq ')' LOCAL . ids_with_type_seq DO instruction_seq END

    ID  shift, and go to state 17
    DO  shift, and go to state 185

    identifiers_comma_seq  go to state 60
    ids_with_type_seq      go to state 186


state 130

   59 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 187


state 131

   62 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' . type DO instruction_seq END
   63             | identifiers_comma_seq '(' ids_with_type_seq ')' ':' . type LOCAL DO instruction_seq END
   64             | identifiers_comma_seq '(' ids_with_type_seq ')' ':' . type LOCAL ids_with_type_seq DO instruction_seq END

    ID                  shift, and go to state 66
    DATATYPE_BOOLEAN    shift, and go to state 67
    DATATYPE_CHARACTER  shift, and go to state 68
    DATATYPE_INTEGER    shift, and go to state 69
    DATATYPE_NATURAL    shift, and go to state 70
    DATATYPE_STRING     shift, and go to state 71
    DATATYPE_ARRAY      shift, and go to state 72

    type  go to state 188


state 132

   66 ids_with_type_seq: ids_with_type_seq identifiers_comma_seq ':' . type opt_semicolon

    ID                  shift, and go to state 66
    DATATYPE_BOOLEAN    shift, and go to state 67
    DATATYPE_CHARACTER  shift, and go to state 68
    DATATYPE_INTEGER    shift, and go to state 69
    DATATYPE_NATURAL    shift, and go to state 70
    DATATYPE_STRING     shift, and go to state 71
    DATATYPE_ARRAY      shift, and go to state 72

    type  go to state 189


state 133

   48 feature_decl: identifiers_comma_seq LOCAL DO instruction_seq END .

    $default  reduce using rule 48 (feature_decl)


state 134

   49 feature_decl: identifiers_comma_seq LOCAL ids_with_type_seq DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 97
    END            shift, and go to state 190
    IF             shift, and go to state 99
    FROM           shift, and go to state 100
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 108
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    instruction  go to state 111
    expr         go to state 112


state 135

   73 instruction: ID ASSIGNMENT . expr

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    expr  go to state 191


state 136

   87 expr: ID '(' . ')'
   88     | ID '(' . argument_seq ')'

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110
    ')'            shift, and go to state 192

    argument_seq  go to state 193
    expr          go to state 194


state 137

   74 instruction: IF '(' . expr ')' THEN instruction_seq END
   75            | IF '(' . expr ')' THEN instruction_seq ELSE instruction_seq END

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    expr  go to state 195


state 138

   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq
   76 instruction: FROM instruction_seq . UNTIL expr LOOP instruction_seq END

    ID             shift, and go to state 97
    IF             shift, and go to state 99
    FROM           shift, and go to state 100
    UNTIL          shift, and go to state 196
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 108
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    instruction  go to state 111
    expr         go to state 112


state 139

   86 expr: ID .
   87     | ID . '(' ')'
   88     | ID . '(' argument_seq ')'

    '('  shift, and go to state 136

    '('       [reduce using rule 86 (expr)]
    $default  reduce using rule 86 (expr)


state 140

   98 expr: CREATE . '{' ID '}'
   99     | CREATE . '{' ID '}' '.' ID
  100     | CREATE . '{' ID '}' '.' ID '(' ')'
  101     | CREATE . '{' ID '}' '.' ID '(' argument_seq ')'

    '{'  shift, and go to state 145


state 141

   95 expr: expr . '.' ID
   96     | expr . '.' ID '(' ')'
   97     | expr . '.' ID '(' argument_seq ')'
  102     | expr . '@' expr
  103     | expr . '+' expr
  104     | expr . '-' expr
  105     | expr . '*' expr
  106     | expr . INTEGER_DIVISION expr
  107     | '-' expr .
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . LESS_EQUAL expr
  111     | expr . GREAT_EQUAL expr
  112     | expr . '=' expr
  113     | expr . NOTEQUAL expr
  114     | expr . AND expr
  115     | expr . OR expr
  116     | expr . XOR expr

    '@'  shift, and go to state 162
    '.'  shift, and go to state 163

    $default  reduce using rule 107 (expr)


state 142

   95 expr: expr . '.' ID
   96     | expr . '.' ID '(' ')'
   97     | expr . '.' ID '(' argument_seq ')'
  102     | expr . '@' expr
  103     | expr . '+' expr
  104     | expr . '-' expr
  105     | expr . '*' expr
  106     | expr . INTEGER_DIVISION expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . LESS_EQUAL expr
  111     | expr . GREAT_EQUAL expr
  112     | expr . '=' expr
  113     | expr . NOTEQUAL expr
  114     | expr . AND expr
  115     | expr . OR expr
  116     | expr . XOR expr
  117     | NOT expr .

    '@'  shift, and go to state 162
    '.'  shift, and go to state 163

    $default  reduce using rule 117 (expr)


state 143

   84 expr: '(' expr . ')'
   95     | expr . '.' ID
   96     | expr . '.' ID '(' ')'
   97     | expr . '.' ID '(' argument_seq ')'
  102     | expr . '@' expr
  103     | expr . '+' expr
  104     | expr . '-' expr
  105     | expr . '*' expr
  106     | expr . INTEGER_DIVISION expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . LESS_EQUAL expr
  111     | expr . GREAT_EQUAL expr
  112     | expr . '=' expr
  113     | expr . NOTEQUAL expr
  114     | expr . AND expr
  115     | expr . OR expr
  116     | expr . XOR expr

    XOR               shift, and go to state 149
    OR                shift, and go to state 150
    AND               shift, and go to state 151
    '<'               shift, and go to state 152
    '>'               shift, and go to state 153
    '='               shift, and go to state 154
    NOTEQUAL          shift, and go to state 155
    GREAT_EQUAL       shift, and go to state 156
    LESS_EQUAL        shift, and go to state 157
    '+'               shift, and go to state 158
    '-'               shift, and go to state 159
    '*'               shift, and go to state 160
    INTEGER_DIVISION  shift, and go to state 161
    '@'               shift, and go to state 162
    '.'               shift, and go to state 163
    ')'               shift, and go to state 197


state 144

   69 instruction: CREATE ID .
   70            | CREATE ID . '.' ID
   71            | CREATE ID . '.' ID '(' ')'
   72            | CREATE ID . '.' ID '(' argument_seq ')'

    '.'  shift, and go to state 198

    $default  reduce using rule 69 (instruction)


state 145

   98 expr: CREATE '{' . ID '}'
   99     | CREATE '{' . ID '}' '.' ID
  100     | CREATE '{' . ID '}' '.' ID '(' ')'
  101     | CREATE '{' . ID '}' '.' ID '(' argument_seq ')'

    ID  shift, and go to state 199


state 146

   90 expr: PRECURSOR '(' . ')'
   91     | PRECURSOR '(' . argument_seq ')'

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110
    ')'            shift, and go to state 200

    argument_seq  go to state 201
    expr          go to state 194


state 147

   92 expr: PRECURSOR '{' . ID '}'
   93     | PRECURSOR '{' . ID '}' '(' ')'
   94     | PRECURSOR '{' . ID '}' '(' argument_seq ')'

    ID  shift, and go to state 202


state 148

   68 instruction_seq: instruction_seq instruction opt_semicolon_seq .

    $default  reduce using rule 68 (instruction_seq)


state 149

  116 expr: expr XOR . expr

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    expr  go to state 203


state 150

  115 expr: expr OR . expr

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    expr  go to state 204


state 151

  114 expr: expr AND . expr

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    expr  go to state 205


state 152

  108 expr: expr '<' . expr

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    expr  go to state 206


state 153

  109 expr: expr '>' . expr

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    expr  go to state 207


state 154

  112 expr: expr '=' . expr

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    expr  go to state 208


state 155

  113 expr: expr NOTEQUAL . expr

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    expr  go to state 209


state 156

  111 expr: expr GREAT_EQUAL . expr

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    expr  go to state 210


state 157

  110 expr: expr LESS_EQUAL . expr

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    expr  go to state 211


state 158

  103 expr: expr '+' . expr

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    expr  go to state 212


state 159

  104 expr: expr '-' . expr

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    expr  go to state 213


state 160

  105 expr: expr '*' . expr

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    expr  go to state 214


state 161

  106 expr: expr INTEGER_DIVISION . expr

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    expr  go to state 215


state 162

  102 expr: expr '@' . expr

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    expr  go to state 216


state 163

   95 expr: expr '.' . ID
   96     | expr '.' . ID '(' ')'
   97     | expr '.' . ID '(' argument_seq ')'

    ID  shift, and go to state 217


state 164

  124 type: DATATYPE_ARRAY '[' type . ']'

    ']'  shift, and go to state 218


state 165

   54 feature_decl: identifiers_comma_seq ':' type LOCAL DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 219


state 166

   55 feature_decl: identifiers_comma_seq ':' type LOCAL ids_with_type_seq . DO instruction_seq END
   66 ids_with_type_seq: ids_with_type_seq . identifiers_comma_seq ':' type opt_semicolon

    ID  shift, and go to state 17
    DO  shift, and go to state 220

    identifiers_comma_seq  go to state 94


state 167

   53 feature_decl: identifiers_comma_seq ':' type DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 97
    END            shift, and go to state 221
    IF             shift, and go to state 99
    FROM           shift, and go to state 100
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 108
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    instruction  go to state 111
    expr         go to state 112


state 168

   34 parent: ID RENAME rename_seq UNDEFINE identifiers_comma_seq END .

    $default  reduce using rule 34 (parent)


state 169

   22 parent: ID RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE . identifiers_comma_seq SELECT identifiers_comma_seq END
   30       | ID RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 222


state 170

   26 parent: ID RENAME rename_seq UNDEFINE identifiers_comma_seq SELECT . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 223


state 171

   32 parent: ID RENAME rename_seq REDEFINE identifiers_comma_seq END .

    $default  reduce using rule 32 (parent)


state 172

   24 parent: ID RENAME rename_seq REDEFINE identifiers_comma_seq SELECT . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 224


state 173

   28 parent: ID RENAME rename_seq SELECT identifiers_comma_seq END .

    $default  reduce using rule 28 (parent)


state 174

   39 rename_seq: rename_seq ',' ID AS . ID

    ID  shift, and go to state 225


state 175

   31 parent: ID UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq END .

    $default  reduce using rule 31 (parent)


state 176

   23 parent: ID UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 226


state 177

   27 parent: ID UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END .

    $default  reduce using rule 27 (parent)


state 178

   25 parent: ID REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END .

    $default  reduce using rule 25 (parent)


state 179

   51 feature_decl: identifiers_comma_seq '(' ')' LOCAL DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 97
    END            shift, and go to state 227
    IF             shift, and go to state 99
    FROM           shift, and go to state 100
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 108
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    instruction  go to state 111
    expr         go to state 112


state 180

   52 feature_decl: identifiers_comma_seq '(' ')' LOCAL ids_with_type_seq DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 228


state 181

   50 feature_decl: identifiers_comma_seq '(' ')' DO instruction_seq END .

    $default  reduce using rule 50 (feature_decl)


state 182

   57 feature_decl: identifiers_comma_seq '(' ')' ':' type LOCAL . DO instruction_seq END
   58             | identifiers_comma_seq '(' ')' ':' type LOCAL . ids_with_type_seq DO instruction_seq END

    ID  shift, and go to state 17
    DO  shift, and go to state 229

    identifiers_comma_seq  go to state 60
    ids_with_type_seq      go to state 230


state 183

   56 feature_decl: identifiers_comma_seq '(' ')' ':' type DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 231


state 184

   65 ids_with_type_seq: identifiers_comma_seq ':' type opt_semicolon .

    $default  reduce using rule 65 (ids_with_type_seq)


state 185

   60 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' LOCAL DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 232


state 186

   61 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' LOCAL ids_with_type_seq . DO instruction_seq END
   66 ids_with_type_seq: ids_with_type_seq . identifiers_comma_seq ':' type opt_semicolon

    ID  shift, and go to state 17
    DO  shift, and go to state 233

    identifiers_comma_seq  go to state 94


state 187

   59 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 97
    END            shift, and go to state 234
    IF             shift, and go to state 99
    FROM           shift, and go to state 100
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 108
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    instruction  go to state 111
    expr         go to state 112


state 188

   62 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type . DO instruction_seq END
   63             | identifiers_comma_seq '(' ids_with_type_seq ')' ':' type . LOCAL DO instruction_seq END
   64             | identifiers_comma_seq '(' ids_with_type_seq ')' ':' type . LOCAL ids_with_type_seq DO instruction_seq END

    LOCAL  shift, and go to state 235
    DO     shift, and go to state 236


state 189

   66 ids_with_type_seq: ids_with_type_seq identifiers_comma_seq ':' type . opt_semicolon

    ';'  shift, and go to state 35

    $default  reduce using rule 3 (opt_semicolon)

    opt_semicolon  go to state 237


state 190

   49 feature_decl: identifiers_comma_seq LOCAL ids_with_type_seq DO instruction_seq END .

    $default  reduce using rule 49 (feature_decl)


state 191

   73 instruction: ID ASSIGNMENT expr .
   95 expr: expr . '.' ID
   96     | expr . '.' ID '(' ')'
   97     | expr . '.' ID '(' argument_seq ')'
  102     | expr . '@' expr
  103     | expr . '+' expr
  104     | expr . '-' expr
  105     | expr . '*' expr
  106     | expr . INTEGER_DIVISION expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . LESS_EQUAL expr
  111     | expr . GREAT_EQUAL expr
  112     | expr . '=' expr
  113     | expr . NOTEQUAL expr
  114     | expr . AND expr
  115     | expr . OR expr
  116     | expr . XOR expr

    XOR               shift, and go to state 149
    OR                shift, and go to state 150
    AND               shift, and go to state 151
    '<'               shift, and go to state 152
    '>'               shift, and go to state 153
    '='               shift, and go to state 154
    NOTEQUAL          shift, and go to state 155
    GREAT_EQUAL       shift, and go to state 156
    LESS_EQUAL        shift, and go to state 157
    '+'               shift, and go to state 158
    '-'               shift, and go to state 159
    '*'               shift, and go to state 160
    INTEGER_DIVISION  shift, and go to state 161
    '@'               shift, and go to state 162
    '.'               shift, and go to state 163

    '-'       [reduce using rule 73 (instruction)]
    $default  reduce using rule 73 (instruction)


state 192

   87 expr: ID '(' ')' .

    $default  reduce using rule 87 (expr)


state 193

   79 argument_seq: argument_seq . ',' expr
   88 expr: ID '(' argument_seq . ')'

    ','  shift, and go to state 238
    ')'  shift, and go to state 239


state 194

   78 argument_seq: expr .
   95 expr: expr . '.' ID
   96     | expr . '.' ID '(' ')'
   97     | expr . '.' ID '(' argument_seq ')'
  102     | expr . '@' expr
  103     | expr . '+' expr
  104     | expr . '-' expr
  105     | expr . '*' expr
  106     | expr . INTEGER_DIVISION expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . LESS_EQUAL expr
  111     | expr . GREAT_EQUAL expr
  112     | expr . '=' expr
  113     | expr . NOTEQUAL expr
  114     | expr . AND expr
  115     | expr . OR expr
  116     | expr . XOR expr

    XOR               shift, and go to state 149
    OR                shift, and go to state 150
    AND               shift, and go to state 151
    '<'               shift, and go to state 152
    '>'               shift, and go to state 153
    '='               shift, and go to state 154
    NOTEQUAL          shift, and go to state 155
    GREAT_EQUAL       shift, and go to state 156
    LESS_EQUAL        shift, and go to state 157
    '+'               shift, and go to state 158
    '-'               shift, and go to state 159
    '*'               shift, and go to state 160
    INTEGER_DIVISION  shift, and go to state 161
    '@'               shift, and go to state 162
    '.'               shift, and go to state 163

    $default  reduce using rule 78 (argument_seq)


state 195

   74 instruction: IF '(' expr . ')' THEN instruction_seq END
   75            | IF '(' expr . ')' THEN instruction_seq ELSE instruction_seq END
   95 expr: expr . '.' ID
   96     | expr . '.' ID '(' ')'
   97     | expr . '.' ID '(' argument_seq ')'
  102     | expr . '@' expr
  103     | expr . '+' expr
  104     | expr . '-' expr
  105     | expr . '*' expr
  106     | expr . INTEGER_DIVISION expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . LESS_EQUAL expr
  111     | expr . GREAT_EQUAL expr
  112     | expr . '=' expr
  113     | expr . NOTEQUAL expr
  114     | expr . AND expr
  115     | expr . OR expr
  116     | expr . XOR expr

    XOR               shift, and go to state 149
    OR                shift, and go to state 150
    AND               shift, and go to state 151
    '<'               shift, and go to state 152
    '>'               shift, and go to state 153
    '='               shift, and go to state 154
    NOTEQUAL          shift, and go to state 155
    GREAT_EQUAL       shift, and go to state 156
    LESS_EQUAL        shift, and go to state 157
    '+'               shift, and go to state 158
    '-'               shift, and go to state 159
    '*'               shift, and go to state 160
    INTEGER_DIVISION  shift, and go to state 161
    '@'               shift, and go to state 162
    '.'               shift, and go to state 163
    ')'               shift, and go to state 240


state 196

   76 instruction: FROM instruction_seq UNTIL . expr LOOP instruction_seq END

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    expr  go to state 241


state 197

   84 expr: '(' expr ')' .

    $default  reduce using rule 84 (expr)


state 198

   70 instruction: CREATE ID '.' . ID
   71            | CREATE ID '.' . ID '(' ')'
   72            | CREATE ID '.' . ID '(' argument_seq ')'

    ID  shift, and go to state 242


state 199

   98 expr: CREATE '{' ID . '}'
   99     | CREATE '{' ID . '}' '.' ID
  100     | CREATE '{' ID . '}' '.' ID '(' ')'
  101     | CREATE '{' ID . '}' '.' ID '(' argument_seq ')'

    '}'  shift, and go to state 243


state 200

   90 expr: PRECURSOR '(' ')' .

    $default  reduce using rule 90 (expr)


state 201

   79 argument_seq: argument_seq . ',' expr
   91 expr: PRECURSOR '(' argument_seq . ')'

    ','  shift, and go to state 238
    ')'  shift, and go to state 244


state 202

   92 expr: PRECURSOR '{' ID . '}'
   93     | PRECURSOR '{' ID . '}' '(' ')'
   94     | PRECURSOR '{' ID . '}' '(' argument_seq ')'

    '}'  shift, and go to state 245


state 203

   95 expr: expr . '.' ID
   96     | expr . '.' ID '(' ')'
   97     | expr . '.' ID '(' argument_seq ')'
  102     | expr . '@' expr
  103     | expr . '+' expr
  104     | expr . '-' expr
  105     | expr . '*' expr
  106     | expr . INTEGER_DIVISION expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . LESS_EQUAL expr
  111     | expr . GREAT_EQUAL expr
  112     | expr . '=' expr
  113     | expr . NOTEQUAL expr
  114     | expr . AND expr
  115     | expr . OR expr
  116     | expr . XOR expr
  116     | expr XOR expr .

    AND               shift, and go to state 151
    '<'               shift, and go to state 152
    '>'               shift, and go to state 153
    '='               shift, and go to state 154
    NOTEQUAL          shift, and go to state 155
    GREAT_EQUAL       shift, and go to state 156
    LESS_EQUAL        shift, and go to state 157
    '+'               shift, and go to state 158
    '-'               shift, and go to state 159
    '*'               shift, and go to state 160
    INTEGER_DIVISION  shift, and go to state 161
    '@'               shift, and go to state 162
    '.'               shift, and go to state 163

    $default  reduce using rule 116 (expr)


state 204

   95 expr: expr . '.' ID
   96     | expr . '.' ID '(' ')'
   97     | expr . '.' ID '(' argument_seq ')'
  102     | expr . '@' expr
  103     | expr . '+' expr
  104     | expr . '-' expr
  105     | expr . '*' expr
  106     | expr . INTEGER_DIVISION expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . LESS_EQUAL expr
  111     | expr . GREAT_EQUAL expr
  112     | expr . '=' expr
  113     | expr . NOTEQUAL expr
  114     | expr . AND expr
  115     | expr . OR expr
  115     | expr OR expr .
  116     | expr . XOR expr

    AND               shift, and go to state 151
    '<'               shift, and go to state 152
    '>'               shift, and go to state 153
    '='               shift, and go to state 154
    NOTEQUAL          shift, and go to state 155
    GREAT_EQUAL       shift, and go to state 156
    LESS_EQUAL        shift, and go to state 157
    '+'               shift, and go to state 158
    '-'               shift, and go to state 159
    '*'               shift, and go to state 160
    INTEGER_DIVISION  shift, and go to state 161
    '@'               shift, and go to state 162
    '.'               shift, and go to state 163

    $default  reduce using rule 115 (expr)


state 205

   95 expr: expr . '.' ID
   96     | expr . '.' ID '(' ')'
   97     | expr . '.' ID '(' argument_seq ')'
  102     | expr . '@' expr
  103     | expr . '+' expr
  104     | expr . '-' expr
  105     | expr . '*' expr
  106     | expr . INTEGER_DIVISION expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . LESS_EQUAL expr
  111     | expr . GREAT_EQUAL expr
  112     | expr . '=' expr
  113     | expr . NOTEQUAL expr
  114     | expr . AND expr
  114     | expr AND expr .
  115     | expr . OR expr
  116     | expr . XOR expr

    '<'               shift, and go to state 152
    '>'               shift, and go to state 153
    '='               shift, and go to state 154
    NOTEQUAL          shift, and go to state 155
    GREAT_EQUAL       shift, and go to state 156
    LESS_EQUAL        shift, and go to state 157
    '+'               shift, and go to state 158
    '-'               shift, and go to state 159
    '*'               shift, and go to state 160
    INTEGER_DIVISION  shift, and go to state 161
    '@'               shift, and go to state 162
    '.'               shift, and go to state 163

    $default  reduce using rule 114 (expr)


state 206

   95 expr: expr . '.' ID
   96     | expr . '.' ID '(' ')'
   97     | expr . '.' ID '(' argument_seq ')'
  102     | expr . '@' expr
  103     | expr . '+' expr
  104     | expr . '-' expr
  105     | expr . '*' expr
  106     | expr . INTEGER_DIVISION expr
  108     | expr . '<' expr
  108     | expr '<' expr .
  109     | expr . '>' expr
  110     | expr . LESS_EQUAL expr
  111     | expr . GREAT_EQUAL expr
  112     | expr . '=' expr
  113     | expr . NOTEQUAL expr
  114     | expr . AND expr
  115     | expr . OR expr
  116     | expr . XOR expr

    '+'               shift, and go to state 158
    '-'               shift, and go to state 159
    '*'               shift, and go to state 160
    INTEGER_DIVISION  shift, and go to state 161
    '@'               shift, and go to state 162
    '.'               shift, and go to state 163

    $default  reduce using rule 108 (expr)


state 207

   95 expr: expr . '.' ID
   96     | expr . '.' ID '(' ')'
   97     | expr . '.' ID '(' argument_seq ')'
  102     | expr . '@' expr
  103     | expr . '+' expr
  104     | expr . '-' expr
  105     | expr . '*' expr
  106     | expr . INTEGER_DIVISION expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  109     | expr '>' expr .
  110     | expr . LESS_EQUAL expr
  111     | expr . GREAT_EQUAL expr
  112     | expr . '=' expr
  113     | expr . NOTEQUAL expr
  114     | expr . AND expr
  115     | expr . OR expr
  116     | expr . XOR expr

    '+'               shift, and go to state 158
    '-'               shift, and go to state 159
    '*'               shift, and go to state 160
    INTEGER_DIVISION  shift, and go to state 161
    '@'               shift, and go to state 162
    '.'               shift, and go to state 163

    $default  reduce using rule 109 (expr)


state 208

   95 expr: expr . '.' ID
   96     | expr . '.' ID '(' ')'
   97     | expr . '.' ID '(' argument_seq ')'
  102     | expr . '@' expr
  103     | expr . '+' expr
  104     | expr . '-' expr
  105     | expr . '*' expr
  106     | expr . INTEGER_DIVISION expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . LESS_EQUAL expr
  111     | expr . GREAT_EQUAL expr
  112     | expr . '=' expr
  112     | expr '=' expr .
  113     | expr . NOTEQUAL expr
  114     | expr . AND expr
  115     | expr . OR expr
  116     | expr . XOR expr

    '+'               shift, and go to state 158
    '-'               shift, and go to state 159
    '*'               shift, and go to state 160
    INTEGER_DIVISION  shift, and go to state 161
    '@'               shift, and go to state 162
    '.'               shift, and go to state 163

    $default  reduce using rule 112 (expr)


state 209

   95 expr: expr . '.' ID
   96     | expr . '.' ID '(' ')'
   97     | expr . '.' ID '(' argument_seq ')'
  102     | expr . '@' expr
  103     | expr . '+' expr
  104     | expr . '-' expr
  105     | expr . '*' expr
  106     | expr . INTEGER_DIVISION expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . LESS_EQUAL expr
  111     | expr . GREAT_EQUAL expr
  112     | expr . '=' expr
  113     | expr . NOTEQUAL expr
  113     | expr NOTEQUAL expr .
  114     | expr . AND expr
  115     | expr . OR expr
  116     | expr . XOR expr

    '+'               shift, and go to state 158
    '-'               shift, and go to state 159
    '*'               shift, and go to state 160
    INTEGER_DIVISION  shift, and go to state 161
    '@'               shift, and go to state 162
    '.'               shift, and go to state 163

    $default  reduce using rule 113 (expr)


state 210

   95 expr: expr . '.' ID
   96     | expr . '.' ID '(' ')'
   97     | expr . '.' ID '(' argument_seq ')'
  102     | expr . '@' expr
  103     | expr . '+' expr
  104     | expr . '-' expr
  105     | expr . '*' expr
  106     | expr . INTEGER_DIVISION expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . LESS_EQUAL expr
  111     | expr . GREAT_EQUAL expr
  111     | expr GREAT_EQUAL expr .
  112     | expr . '=' expr
  113     | expr . NOTEQUAL expr
  114     | expr . AND expr
  115     | expr . OR expr
  116     | expr . XOR expr

    '+'               shift, and go to state 158
    '-'               shift, and go to state 159
    '*'               shift, and go to state 160
    INTEGER_DIVISION  shift, and go to state 161
    '@'               shift, and go to state 162
    '.'               shift, and go to state 163

    $default  reduce using rule 111 (expr)


state 211

   95 expr: expr . '.' ID
   96     | expr . '.' ID '(' ')'
   97     | expr . '.' ID '(' argument_seq ')'
  102     | expr . '@' expr
  103     | expr . '+' expr
  104     | expr . '-' expr
  105     | expr . '*' expr
  106     | expr . INTEGER_DIVISION expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . LESS_EQUAL expr
  110     | expr LESS_EQUAL expr .
  111     | expr . GREAT_EQUAL expr
  112     | expr . '=' expr
  113     | expr . NOTEQUAL expr
  114     | expr . AND expr
  115     | expr . OR expr
  116     | expr . XOR expr

    '+'               shift, and go to state 158
    '-'               shift, and go to state 159
    '*'               shift, and go to state 160
    INTEGER_DIVISION  shift, and go to state 161
    '@'               shift, and go to state 162
    '.'               shift, and go to state 163

    $default  reduce using rule 110 (expr)


state 212

   95 expr: expr . '.' ID
   96     | expr . '.' ID '(' ')'
   97     | expr . '.' ID '(' argument_seq ')'
  102     | expr . '@' expr
  103     | expr . '+' expr
  103     | expr '+' expr .
  104     | expr . '-' expr
  105     | expr . '*' expr
  106     | expr . INTEGER_DIVISION expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . LESS_EQUAL expr
  111     | expr . GREAT_EQUAL expr
  112     | expr . '=' expr
  113     | expr . NOTEQUAL expr
  114     | expr . AND expr
  115     | expr . OR expr
  116     | expr . XOR expr

    '*'               shift, and go to state 160
    INTEGER_DIVISION  shift, and go to state 161
    '@'               shift, and go to state 162
    '.'               shift, and go to state 163

    $default  reduce using rule 103 (expr)


state 213

   95 expr: expr . '.' ID
   96     | expr . '.' ID '(' ')'
   97     | expr . '.' ID '(' argument_seq ')'
  102     | expr . '@' expr
  103     | expr . '+' expr
  104     | expr . '-' expr
  104     | expr '-' expr .
  105     | expr . '*' expr
  106     | expr . INTEGER_DIVISION expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . LESS_EQUAL expr
  111     | expr . GREAT_EQUAL expr
  112     | expr . '=' expr
  113     | expr . NOTEQUAL expr
  114     | expr . AND expr
  115     | expr . OR expr
  116     | expr . XOR expr

    '*'               shift, and go to state 160
    INTEGER_DIVISION  shift, and go to state 161
    '@'               shift, and go to state 162
    '.'               shift, and go to state 163

    $default  reduce using rule 104 (expr)


state 214

   95 expr: expr . '.' ID
   96     | expr . '.' ID '(' ')'
   97     | expr . '.' ID '(' argument_seq ')'
  102     | expr . '@' expr
  103     | expr . '+' expr
  104     | expr . '-' expr
  105     | expr . '*' expr
  105     | expr '*' expr .
  106     | expr . INTEGER_DIVISION expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . LESS_EQUAL expr
  111     | expr . GREAT_EQUAL expr
  112     | expr . '=' expr
  113     | expr . NOTEQUAL expr
  114     | expr . AND expr
  115     | expr . OR expr
  116     | expr . XOR expr

    '@'  shift, and go to state 162
    '.'  shift, and go to state 163

    $default  reduce using rule 105 (expr)


state 215

   95 expr: expr . '.' ID
   96     | expr . '.' ID '(' ')'
   97     | expr . '.' ID '(' argument_seq ')'
  102     | expr . '@' expr
  103     | expr . '+' expr
  104     | expr . '-' expr
  105     | expr . '*' expr
  106     | expr . INTEGER_DIVISION expr
  106     | expr INTEGER_DIVISION expr .
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . LESS_EQUAL expr
  111     | expr . GREAT_EQUAL expr
  112     | expr . '=' expr
  113     | expr . NOTEQUAL expr
  114     | expr . AND expr
  115     | expr . OR expr
  116     | expr . XOR expr

    '@'  shift, and go to state 162
    '.'  shift, and go to state 163

    $default  reduce using rule 106 (expr)


state 216

   95 expr: expr . '.' ID
   96     | expr . '.' ID '(' ')'
   97     | expr . '.' ID '(' argument_seq ')'
  102     | expr . '@' expr
  102     | expr '@' expr .
  103     | expr . '+' expr
  104     | expr . '-' expr
  105     | expr . '*' expr
  106     | expr . INTEGER_DIVISION expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . LESS_EQUAL expr
  111     | expr . GREAT_EQUAL expr
  112     | expr . '=' expr
  113     | expr . NOTEQUAL expr
  114     | expr . AND expr
  115     | expr . OR expr
  116     | expr . XOR expr

    '.'  shift, and go to state 163

    $default  reduce using rule 102 (expr)


state 217

   95 expr: expr '.' ID .
   96     | expr '.' ID . '(' ')'
   97     | expr '.' ID . '(' argument_seq ')'

    '('  shift, and go to state 246

    '('       [reduce using rule 95 (expr)]
    $default  reduce using rule 95 (expr)


state 218

  124 type: DATATYPE_ARRAY '[' type ']' .

    $default  reduce using rule 124 (type)


state 219

   54 feature_decl: identifiers_comma_seq ':' type LOCAL DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 97
    END            shift, and go to state 247
    IF             shift, and go to state 99
    FROM           shift, and go to state 100
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 108
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    instruction  go to state 111
    expr         go to state 112


state 220

   55 feature_decl: identifiers_comma_seq ':' type LOCAL ids_with_type_seq DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 248


state 221

   53 feature_decl: identifiers_comma_seq ':' type DO instruction_seq END .

    $default  reduce using rule 53 (feature_decl)


state 222

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   22 parent: ID RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq . SELECT identifiers_comma_seq END
   30       | ID RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq . END

    END     shift, and go to state 249
    SELECT  shift, and go to state 250
    ','     shift, and go to state 37


state 223

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   26 parent: ID RENAME rename_seq UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq . END

    END  shift, and go to state 251
    ','  shift, and go to state 37


state 224

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   24 parent: ID RENAME rename_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq . END

    END  shift, and go to state 252
    ','  shift, and go to state 37


state 225

   39 rename_seq: rename_seq ',' ID AS ID .

    $default  reduce using rule 39 (rename_seq)


state 226

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   23 parent: ID UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq . END

    END  shift, and go to state 253
    ','  shift, and go to state 37


state 227

   51 feature_decl: identifiers_comma_seq '(' ')' LOCAL DO instruction_seq END .

    $default  reduce using rule 51 (feature_decl)


state 228

   52 feature_decl: identifiers_comma_seq '(' ')' LOCAL ids_with_type_seq DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 97
    END            shift, and go to state 254
    IF             shift, and go to state 99
    FROM           shift, and go to state 100
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 108
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    instruction  go to state 111
    expr         go to state 112


state 229

   57 feature_decl: identifiers_comma_seq '(' ')' ':' type LOCAL DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 255


state 230

   58 feature_decl: identifiers_comma_seq '(' ')' ':' type LOCAL ids_with_type_seq . DO instruction_seq END
   66 ids_with_type_seq: ids_with_type_seq . identifiers_comma_seq ':' type opt_semicolon

    ID  shift, and go to state 17
    DO  shift, and go to state 256

    identifiers_comma_seq  go to state 94


state 231

   56 feature_decl: identifiers_comma_seq '(' ')' ':' type DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 97
    END            shift, and go to state 257
    IF             shift, and go to state 99
    FROM           shift, and go to state 100
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 108
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    instruction  go to state 111
    expr         go to state 112


state 232

   60 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' LOCAL DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 97
    END            shift, and go to state 258
    IF             shift, and go to state 99
    FROM           shift, and go to state 100
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 108
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    instruction  go to state 111
    expr         go to state 112


state 233

   61 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' LOCAL ids_with_type_seq DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 259


state 234

   59 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' DO instruction_seq END .

    $default  reduce using rule 59 (feature_decl)


state 235

   63 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type LOCAL . DO instruction_seq END
   64             | identifiers_comma_seq '(' ids_with_type_seq ')' ':' type LOCAL . ids_with_type_seq DO instruction_seq END

    ID  shift, and go to state 17
    DO  shift, and go to state 260

    identifiers_comma_seq  go to state 60
    ids_with_type_seq      go to state 261


state 236

   62 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 262


state 237

   66 ids_with_type_seq: ids_with_type_seq identifiers_comma_seq ':' type opt_semicolon .

    $default  reduce using rule 66 (ids_with_type_seq)


state 238

   79 argument_seq: argument_seq ',' . expr

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    expr  go to state 263


state 239

   88 expr: ID '(' argument_seq ')' .

    $default  reduce using rule 88 (expr)


state 240

   74 instruction: IF '(' expr ')' . THEN instruction_seq END
   75            | IF '(' expr ')' . THEN instruction_seq ELSE instruction_seq END

    THEN  shift, and go to state 264


state 241

   76 instruction: FROM instruction_seq UNTIL expr . LOOP instruction_seq END
   95 expr: expr . '.' ID
   96     | expr . '.' ID '(' ')'
   97     | expr . '.' ID '(' argument_seq ')'
  102     | expr . '@' expr
  103     | expr . '+' expr
  104     | expr . '-' expr
  105     | expr . '*' expr
  106     | expr . INTEGER_DIVISION expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . LESS_EQUAL expr
  111     | expr . GREAT_EQUAL expr
  112     | expr . '=' expr
  113     | expr . NOTEQUAL expr
  114     | expr . AND expr
  115     | expr . OR expr
  116     | expr . XOR expr

    LOOP              shift, and go to state 265
    XOR               shift, and go to state 149
    OR                shift, and go to state 150
    AND               shift, and go to state 151
    '<'               shift, and go to state 152
    '>'               shift, and go to state 153
    '='               shift, and go to state 154
    NOTEQUAL          shift, and go to state 155
    GREAT_EQUAL       shift, and go to state 156
    LESS_EQUAL        shift, and go to state 157
    '+'               shift, and go to state 158
    '-'               shift, and go to state 159
    '*'               shift, and go to state 160
    INTEGER_DIVISION  shift, and go to state 161
    '@'               shift, and go to state 162
    '.'               shift, and go to state 163


state 242

   70 instruction: CREATE ID '.' ID .
   71            | CREATE ID '.' ID . '(' ')'
   72            | CREATE ID '.' ID . '(' argument_seq ')'

    '('  shift, and go to state 266

    '('       [reduce using rule 70 (instruction)]
    $default  reduce using rule 70 (instruction)


state 243

   98 expr: CREATE '{' ID '}' .
   99     | CREATE '{' ID '}' . '.' ID
  100     | CREATE '{' ID '}' . '.' ID '(' ')'
  101     | CREATE '{' ID '}' . '.' ID '(' argument_seq ')'

    '.'  shift, and go to state 267

    '.'       [reduce using rule 98 (expr)]
    $default  reduce using rule 98 (expr)


state 244

   91 expr: PRECURSOR '(' argument_seq ')' .

    $default  reduce using rule 91 (expr)


state 245

   92 expr: PRECURSOR '{' ID '}' .
   93     | PRECURSOR '{' ID '}' . '(' ')'
   94     | PRECURSOR '{' ID '}' . '(' argument_seq ')'

    '('  shift, and go to state 268

    '('       [reduce using rule 92 (expr)]
    $default  reduce using rule 92 (expr)


state 246

   96 expr: expr '.' ID '(' . ')'
   97     | expr '.' ID '(' . argument_seq ')'

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110
    ')'            shift, and go to state 269

    argument_seq  go to state 270
    expr          go to state 194


state 247

   54 feature_decl: identifiers_comma_seq ':' type LOCAL DO instruction_seq END .

    $default  reduce using rule 54 (feature_decl)


state 248

   55 feature_decl: identifiers_comma_seq ':' type LOCAL ids_with_type_seq DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 97
    END            shift, and go to state 271
    IF             shift, and go to state 99
    FROM           shift, and go to state 100
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 108
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    instruction  go to state 111
    expr         go to state 112


state 249

   30 parent: ID RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq END .

    $default  reduce using rule 30 (parent)


state 250

   22 parent: ID RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 272


state 251

   26 parent: ID RENAME rename_seq UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END .

    $default  reduce using rule 26 (parent)


state 252

   24 parent: ID RENAME rename_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END .

    $default  reduce using rule 24 (parent)


state 253

   23 parent: ID UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END .

    $default  reduce using rule 23 (parent)


state 254

   52 feature_decl: identifiers_comma_seq '(' ')' LOCAL ids_with_type_seq DO instruction_seq END .

    $default  reduce using rule 52 (feature_decl)


state 255

   57 feature_decl: identifiers_comma_seq '(' ')' ':' type LOCAL DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 97
    END            shift, and go to state 273
    IF             shift, and go to state 99
    FROM           shift, and go to state 100
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 108
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    instruction  go to state 111
    expr         go to state 112


state 256

   58 feature_decl: identifiers_comma_seq '(' ')' ':' type LOCAL ids_with_type_seq DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 274


state 257

   56 feature_decl: identifiers_comma_seq '(' ')' ':' type DO instruction_seq END .

    $default  reduce using rule 56 (feature_decl)


state 258

   60 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' LOCAL DO instruction_seq END .

    $default  reduce using rule 60 (feature_decl)


state 259

   61 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' LOCAL ids_with_type_seq DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 97
    END            shift, and go to state 275
    IF             shift, and go to state 99
    FROM           shift, and go to state 100
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 108
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    instruction  go to state 111
    expr         go to state 112


state 260

   63 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type LOCAL DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 276


state 261

   64 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type LOCAL ids_with_type_seq . DO instruction_seq END
   66 ids_with_type_seq: ids_with_type_seq . identifiers_comma_seq ':' type opt_semicolon

    ID  shift, and go to state 17
    DO  shift, and go to state 277

    identifiers_comma_seq  go to state 94


state 262

   62 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 97
    END            shift, and go to state 278
    IF             shift, and go to state 99
    FROM           shift, and go to state 100
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 108
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    instruction  go to state 111
    expr         go to state 112


state 263

   79 argument_seq: argument_seq ',' expr .
   95 expr: expr . '.' ID
   96     | expr . '.' ID '(' ')'
   97     | expr . '.' ID '(' argument_seq ')'
  102     | expr . '@' expr
  103     | expr . '+' expr
  104     | expr . '-' expr
  105     | expr . '*' expr
  106     | expr . INTEGER_DIVISION expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . LESS_EQUAL expr
  111     | expr . GREAT_EQUAL expr
  112     | expr . '=' expr
  113     | expr . NOTEQUAL expr
  114     | expr . AND expr
  115     | expr . OR expr
  116     | expr . XOR expr

    XOR               shift, and go to state 149
    OR                shift, and go to state 150
    AND               shift, and go to state 151
    '<'               shift, and go to state 152
    '>'               shift, and go to state 153
    '='               shift, and go to state 154
    NOTEQUAL          shift, and go to state 155
    GREAT_EQUAL       shift, and go to state 156
    LESS_EQUAL        shift, and go to state 157
    '+'               shift, and go to state 158
    '-'               shift, and go to state 159
    '*'               shift, and go to state 160
    INTEGER_DIVISION  shift, and go to state 161
    '@'               shift, and go to state 162
    '.'               shift, and go to state 163

    $default  reduce using rule 79 (argument_seq)


state 264

   74 instruction: IF '(' expr ')' THEN . instruction_seq END
   75            | IF '(' expr ')' THEN . instruction_seq ELSE instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 279


state 265

   76 instruction: FROM instruction_seq UNTIL expr LOOP . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 280


state 266

   71 instruction: CREATE ID '.' ID '(' . ')'
   72            | CREATE ID '.' ID '(' . argument_seq ')'

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110
    ')'            shift, and go to state 281

    argument_seq  go to state 282
    expr          go to state 194


state 267

   99 expr: CREATE '{' ID '}' '.' . ID
  100     | CREATE '{' ID '}' '.' . ID '(' ')'
  101     | CREATE '{' ID '}' '.' . ID '(' argument_seq ')'

    ID  shift, and go to state 283


state 268

   93 expr: PRECURSOR '{' ID '}' '(' . ')'
   94     | PRECURSOR '{' ID '}' '(' . argument_seq ')'

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110
    ')'            shift, and go to state 284

    argument_seq  go to state 285
    expr          go to state 194


state 269

   96 expr: expr '.' ID '(' ')' .

    $default  reduce using rule 96 (expr)


state 270

   79 argument_seq: argument_seq . ',' expr
   97 expr: expr '.' ID '(' argument_seq . ')'

    ','  shift, and go to state 238
    ')'  shift, and go to state 286


state 271

   55 feature_decl: identifiers_comma_seq ':' type LOCAL ids_with_type_seq DO instruction_seq END .

    $default  reduce using rule 55 (feature_decl)


state 272

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   22 parent: ID RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq . END

    END  shift, and go to state 287
    ','  shift, and go to state 37


state 273

   57 feature_decl: identifiers_comma_seq '(' ')' ':' type LOCAL DO instruction_seq END .

    $default  reduce using rule 57 (feature_decl)


state 274

   58 feature_decl: identifiers_comma_seq '(' ')' ':' type LOCAL ids_with_type_seq DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 97
    END            shift, and go to state 288
    IF             shift, and go to state 99
    FROM           shift, and go to state 100
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 108
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    instruction  go to state 111
    expr         go to state 112


state 275

   61 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' LOCAL ids_with_type_seq DO instruction_seq END .

    $default  reduce using rule 61 (feature_decl)


state 276

   63 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type LOCAL DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 97
    END            shift, and go to state 289
    IF             shift, and go to state 99
    FROM           shift, and go to state 100
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 108
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    instruction  go to state 111
    expr         go to state 112


state 277

   64 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type LOCAL ids_with_type_seq DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 290


state 278

   62 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type DO instruction_seq END .

    $default  reduce using rule 62 (feature_decl)


state 279

   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq
   74 instruction: IF '(' expr ')' THEN instruction_seq . END
   75            | IF '(' expr ')' THEN instruction_seq . ELSE instruction_seq END

    ID             shift, and go to state 97
    END            shift, and go to state 291
    IF             shift, and go to state 99
    ELSE           shift, and go to state 292
    FROM           shift, and go to state 100
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 108
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    instruction  go to state 111
    expr         go to state 112


state 280

   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq
   76 instruction: FROM instruction_seq UNTIL expr LOOP instruction_seq . END

    ID             shift, and go to state 97
    END            shift, and go to state 293
    IF             shift, and go to state 99
    FROM           shift, and go to state 100
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 108
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    instruction  go to state 111
    expr         go to state 112


state 281

   71 instruction: CREATE ID '.' ID '(' ')' .

    $default  reduce using rule 71 (instruction)


state 282

   72 instruction: CREATE ID '.' ID '(' argument_seq . ')'
   79 argument_seq: argument_seq . ',' expr

    ','  shift, and go to state 238
    ')'  shift, and go to state 294


state 283

   99 expr: CREATE '{' ID '}' '.' ID .
  100     | CREATE '{' ID '}' '.' ID . '(' ')'
  101     | CREATE '{' ID '}' '.' ID . '(' argument_seq ')'

    '('  shift, and go to state 295

    '('       [reduce using rule 99 (expr)]
    $default  reduce using rule 99 (expr)


state 284

   93 expr: PRECURSOR '{' ID '}' '(' ')' .

    $default  reduce using rule 93 (expr)


state 285

   79 argument_seq: argument_seq . ',' expr
   94 expr: PRECURSOR '{' ID '}' '(' argument_seq . ')'

    ','  shift, and go to state 238
    ')'  shift, and go to state 296


state 286

   97 expr: expr '.' ID '(' argument_seq ')' .

    $default  reduce using rule 97 (expr)


state 287

   22 parent: ID RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END .

    $default  reduce using rule 22 (parent)


state 288

   58 feature_decl: identifiers_comma_seq '(' ')' ':' type LOCAL ids_with_type_seq DO instruction_seq END .

    $default  reduce using rule 58 (feature_decl)


state 289

   63 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type LOCAL DO instruction_seq END .

    $default  reduce using rule 63 (feature_decl)


state 290

   64 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type LOCAL ids_with_type_seq DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 97
    END            shift, and go to state 297
    IF             shift, and go to state 99
    FROM           shift, and go to state 100
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 108
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    instruction  go to state 111
    expr         go to state 112


state 291

   74 instruction: IF '(' expr ')' THEN instruction_seq END .

    $default  reduce using rule 74 (instruction)


state 292

   75 instruction: IF '(' expr ')' THEN instruction_seq ELSE . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 298


state 293

   76 instruction: FROM instruction_seq UNTIL expr LOOP instruction_seq END .

    $default  reduce using rule 76 (instruction)


state 294

   72 instruction: CREATE ID '.' ID '(' argument_seq ')' .

    $default  reduce using rule 72 (instruction)


state 295

  100 expr: CREATE '{' ID '}' '.' ID '(' . ')'
  101     | CREATE '{' ID '}' '.' ID '(' . argument_seq ')'

    ID             shift, and go to state 139
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 140
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110
    ')'            shift, and go to state 299

    argument_seq  go to state 300
    expr          go to state 194


state 296

   94 expr: PRECURSOR '{' ID '}' '(' argument_seq ')' .

    $default  reduce using rule 94 (expr)


state 297

   64 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type LOCAL ids_with_type_seq DO instruction_seq END .

    $default  reduce using rule 64 (feature_decl)


state 298

   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq
   75 instruction: IF '(' expr ')' THEN instruction_seq ELSE instruction_seq . END

    ID             shift, and go to state 97
    END            shift, and go to state 301
    IF             shift, and go to state 99
    FROM           shift, and go to state 100
    '-'            shift, and go to state 101
    NOT            shift, and go to state 102
    '('            shift, and go to state 103
    LITER_BOOLEAN  shift, and go to state 104
    LITER_INTEGER  shift, and go to state 105
    LITER_CHAR     shift, and go to state 106
    LITER_STRING   shift, and go to state 107
    CREATE         shift, and go to state 108
    CURRENT        shift, and go to state 109
    PRECURSOR      shift, and go to state 110

    instruction  go to state 111
    expr         go to state 112


state 299

  100 expr: CREATE '{' ID '}' '.' ID '(' ')' .

    $default  reduce using rule 100 (expr)


state 300

   79 argument_seq: argument_seq . ',' expr
  101 expr: CREATE '{' ID '}' '.' ID '(' argument_seq . ')'

    ','  shift, and go to state 238
    ')'  shift, and go to state 302


state 301

   75 instruction: IF '(' expr ')' THEN instruction_seq ELSE instruction_seq END .

    $default  reduce using rule 75 (instruction)


state 302

  101 expr: CREATE '{' ID '}' '.' ID '(' argument_seq ')' .

    $default  reduce using rule 101 (expr)
