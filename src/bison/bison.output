State 103 conflicts: 1 shift/reduce
State 117 conflicts: 1 shift/reduce
State 120 conflicts: 1 shift/reduce
State 147 conflicts: 1 shift/reduce
State 199 conflicts: 1 shift/reduce
State 205 conflicts: 1 shift/reduce
State 207 conflicts: 1 shift/reduce
State 208 conflicts: 1 shift/reduce
State 226 conflicts: 1 shift/reduce
State 252 conflicts: 1 shift/reduce
State 256 conflicts: 1 shift/reduce
State 277 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 identifiers_comma_seq: ID
    2                      | identifiers_comma_seq ',' ID

    3 opt_semicolon: /* empty */
    4              | ';'

    5 opt_semicolon_seq: /* empty */
    6                  | nonempty_opt_semicolon_seq

    7 nonempty_opt_semicolon_seq: ';'
    8                           | nonempty_opt_semicolon_seq ';'

    9 program: class_decl_seq

   10 class_decl_seq: class_decl
   11               | class_decl_seq class_decl

   12 class_decl: CLASS ID parent_seq creators_seq features_seq END
   13           | CLASS ID parent_seq creators_seq END
   14           | CLASS ID parent_seq features_seq END
   15           | CLASS ID parent_seq END
   16           | CLASS ID creators_seq features_seq END
   17           | CLASS ID creators_seq END
   18           | CLASS ID features_seq END
   19           | CLASS ID END

   20 parent_seq: INHERIT parent opt_semicolon
   21           | parent_seq parent opt_semicolon

   22 parent: ID RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   23       | ID UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   24       | ID RENAME rename_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   25       | ID REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   26       | ID RENAME rename_seq UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   27       | ID UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   28       | ID RENAME rename_seq SELECT identifiers_comma_seq END
   29       | ID SELECT identifiers_comma_seq END
   30       | ID RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq END
   31       | ID UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq END
   32       | ID RENAME rename_seq REDEFINE identifiers_comma_seq END
   33       | ID REDEFINE identifiers_comma_seq END
   34       | ID RENAME rename_seq UNDEFINE identifiers_comma_seq END
   35       | ID UNDEFINE identifiers_comma_seq END
   36       | ID RENAME rename_seq END
   37       | ID

   38 rename_seq: ID AS ID
   39           | rename_seq ',' ID AS ID

   40 creators_seq: CREATE identifiers_comma_seq
   41             | creators_seq CREATE identifiers_comma_seq

   42 features_seq: FEATURE feature_decl_seq
   43             | features_seq FEATURE feature_decl_seq

   44 feature_decl_seq: feature_decl opt_semicolon_seq
   45                 | feature_decl_seq feature_decl opt_semicolon_seq

   46 feature_decl: identifiers_comma_seq ':' type
   47             | identifiers_comma_seq DO instruction_seq END
   48             | identifiers_comma_seq LOCAL DO instruction_seq END
   49             | identifiers_comma_seq LOCAL ids_with_type_seq DO instruction_seq END
   50             | identifiers_comma_seq '(' ')' DO instruction_seq END
   51             | identifiers_comma_seq '(' ')' LOCAL DO instruction_seq END
   52             | identifiers_comma_seq '(' ')' LOCAL ids_with_type_seq DO instruction_seq END
   53             | identifiers_comma_seq ':' type DO instruction_seq END
   54             | identifiers_comma_seq ':' type LOCAL DO instruction_seq END
   55             | identifiers_comma_seq ':' type LOCAL ids_with_type_seq DO instruction_seq END
   56             | identifiers_comma_seq '(' ')' ':' type DO instruction_seq END
   57             | identifiers_comma_seq '(' ')' ':' type LOCAL DO instruction_seq END
   58             | identifiers_comma_seq '(' ')' ':' type LOCAL ids_with_type_seq DO instruction_seq END
   59             | identifiers_comma_seq '(' ids_with_type_seq ')' DO instruction_seq END
   60             | identifiers_comma_seq '(' ids_with_type_seq ')' LOCAL DO instruction_seq END
   61             | identifiers_comma_seq '(' ids_with_type_seq ')' LOCAL ids_with_type_seq DO instruction_seq END
   62             | identifiers_comma_seq '(' ids_with_type_seq ')' ':' type DO instruction_seq END
   63             | identifiers_comma_seq '(' ids_with_type_seq ')' ':' type LOCAL DO instruction_seq END
   64             | identifiers_comma_seq '(' ids_with_type_seq ')' ':' type LOCAL ids_with_type_seq DO instruction_seq END

   65 ids_with_type_seq: identifiers_comma_seq ':' type opt_semicolon
   66                  | ids_with_type_seq identifiers_comma_seq ':' type opt_semicolon

   67 instruction_seq: opt_semicolon_seq
   68                | instruction_seq instruction opt_semicolon_seq

   69 instruction: CREATE ID
   70            | CREATE ID '.' ID
   71            | CREATE ID '.' ID '(' argument_seq ')'
   72            | ID ASSIGNMENT expr
   73            | IF '(' expr ')' THEN instruction_seq END
   74            | IF '(' expr ')' THEN instruction_seq ELSE instruction_seq END
   75            | FROM instruction_seq UNTIL expr LOOP instruction_seq END
   76            | expr

   77 call: ID
   78     | ID '(' ')'
   79     | ID '(' argument_seq ')'
   80     | CURRENT '.' ID
   81     | CURRENT '.' ID '(' ')'
   82     | CURRENT '.' ID '(' argument_seq ')'
   83     | RESULT '.' ID
   84     | RESULT '.' ID '(' ')'
   85     | RESULT '.' ID '(' argument_seq ')'
   86     | '(' expr ')' '.' ID
   87     | '(' expr ')' '.' ID '(' ')'
   88     | '(' expr ')' '.' ID '(' argument_seq ')'
   89     | PRECURSOR
   90     | PRECURSOR '(' ')'
   91     | PRECURSOR '(' argument_seq ')'
   92     | PRECURSOR '{' ID '}'
   93     | PRECURSOR '{' ID '}' '(' ')'
   94     | PRECURSOR '{' ID '}' '(' argument_seq ')'

   95 argument_seq: expr
   96             | argument_seq ',' expr

   97 expr: '(' expr ')'
   98     | LITER_BOOLEAN
   99     | LITER_INTEGER
  100     | LITER_CHAR
  101     | LITER_STRING
  102     | call
  103     | expr '.' ID
  104     | expr '.' ID '(' argument_seq ')'
  105     | expr '@' expr
  106     | expr '+' expr
  107     | expr '-' expr
  108     | expr '*' expr
  109     | expr INTEGER_DIVISION expr
  110     | '-' expr
  111     | expr '<' expr
  112     | expr '>' expr
  113     | expr LESS_EQUAL expr
  114     | expr GREAT_EQUAL expr
  115     | expr '=' expr
  116     | expr NOTEQUAL expr
  117     | expr AND expr
  118     | expr OR expr
  119     | expr XOR expr
  120     | NOT expr

  121 type: ID
  122     | DATATYPE_BOOLEAN
  123     | DATATYPE_CHARACTER
  124     | DATATYPE_INTEGER_8
  125     | DATATYPE_INTEGER_16
  126     | DATATYPE_INTEGER_32
  127     | DATATYPE_INTEGER_64
  128     | DATATYPE_NATURAL_8
  129     | DATATYPE_NATURAL_16
  130     | DATATYPE_NATURAL_32
  131     | DATATYPE_NATURAL_64
  132     | DATATYPE_STRING
  133     | DATATYPE_ARRAY '[' type ']'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 50 51 52 56 57 58 59 60 61 62 63 64 71 73 74 78 79 81 82 84
    85 86 87 88 90 91 93 94 97 104
')' (41) 50 51 52 56 57 58 59 60 61 62 63 64 71 73 74 78 79 81 82 84
    85 86 87 88 90 91 93 94 97 104
'*' (42) 108
'+' (43) 106
',' (44) 2 39 96
'-' (45) 107 110
'.' (46) 70 71 80 81 82 83 84 85 86 87 88 103 104
':' (58) 46 53 54 55 56 57 58 62 63 64 65 66
';' (59) 4 7 8
'<' (60) 111
'=' (61) 115
'>' (62) 112
'@' (64) 105
'[' (91) 133
']' (93) 133
'{' (123) 92 93 94
'}' (125) 92 93 94
error (256)
ID (258) 1 2 12 13 14 15 16 17 18 19 22 23 24 25 26 27 28 29 30 31
    32 33 34 35 36 37 38 39 69 70 71 72 77 78 79 80 81 82 83 84 85
    86 87 88 92 93 94 103 104 121
CLASS (259) 12 13 14 15 16 17 18 19
END (260) 12 13 14 15 16 17 18 19 22 23 24 25 26 27 28 29 30 31 32
    33 34 35 36 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63
    64 73 74 75
IF (261) 73 74
THEN (262) 73 74
ELSE (263) 74
FROM (264) 75
UNTIL (265) 75
LOOP (266) 75
DATATYPE_BOOLEAN (267) 122
DATATYPE_CHARACTER (268) 123
DATATYPE_INTEGER_8 (269) 124
DATATYPE_INTEGER_16 (270) 125
DATATYPE_INTEGER_32 (271) 126
DATATYPE_INTEGER_64 (272) 127
DATATYPE_NATURAL_8 (273) 128
DATATYPE_NATURAL_16 (274) 129
DATATYPE_NATURAL_32 (275) 130
DATATYPE_NATURAL_64 (276) 131
DATATYPE_STRING (277) 132
DATATYPE_ARRAY (278) 133
ASSIGNMENT (279) 72
XOR (280) 119
OR (281) 118
AND (282) 117
NOTEQUAL (283) 116
GREAT_EQUAL (284) 114
LESS_EQUAL (285) 113
INTEGER_DIVISION (286) 109
NOT (287) 120
UMINUS (288)
LITER_BOOLEAN (289) 98
LITER_INTEGER (290) 99
LITER_CHAR (291) 100
LITER_STRING (292) 101
INHERIT (293) 20
RENAME (294) 22 24 26 28 30 32 34 36
UNDEFINE (295) 22 23 26 27 30 31 34 35
REDEFINE (296) 22 23 24 25 30 31 32 33
SELECT (297) 22 23 24 25 26 27 28 29
AS (298) 38 39
CREATE (299) 40 41 69 70 71
FEATURE (300) 42 43
LOCAL (301) 48 49 51 52 54 55 57 58 60 61 63 64
DO (302) 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
CURRENT (303) 80 81 82
RESULT (304) 83 84 85
PRECURSOR (305) 89 90 91 92 93 94


Nonterminals, with rules where they appear

$accept (68)
    on left: 0
identifiers_comma_seq (69)
    on left: 1 2, on right: 2 22 23 24 25 26 27 28 29 30 31 32 33 34
    35 40 41 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63
    64 65 66
opt_semicolon (70)
    on left: 3 4, on right: 20 21 65 66
opt_semicolon_seq (71)
    on left: 5 6, on right: 44 45 67 68
nonempty_opt_semicolon_seq (72)
    on left: 7 8, on right: 6 8
program (73)
    on left: 9, on right: 0
class_decl_seq (74)
    on left: 10 11, on right: 9 11
class_decl (75)
    on left: 12 13 14 15 16 17 18 19, on right: 10 11
parent_seq (76)
    on left: 20 21, on right: 12 13 14 15 21
parent (77)
    on left: 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37,
    on right: 20 21
rename_seq (78)
    on left: 38 39, on right: 22 24 26 28 30 32 34 36 39
creators_seq (79)
    on left: 40 41, on right: 12 13 16 17 41
features_seq (80)
    on left: 42 43, on right: 12 14 16 18 43
feature_decl_seq (81)
    on left: 44 45, on right: 42 43 45
feature_decl (82)
    on left: 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63
    64, on right: 44 45
ids_with_type_seq (83)
    on left: 65 66, on right: 49 52 55 58 59 60 61 62 63 64 66
instruction_seq (84)
    on left: 67 68, on right: 47 48 49 50 51 52 53 54 55 56 57 58 59
    60 61 62 63 64 68 73 74 75
instruction (85)
    on left: 69 70 71 72 73 74 75 76, on right: 68
call (86)
    on left: 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94
   , on right: 102
argument_seq (87)
    on left: 95 96, on right: 71 79 82 85 88 91 94 96 104
expr (88)
    on left: 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111
    112 113 114 115 116 117 118 119 120, on right: 72 73 74 75 76 86
    87 88 95 96 97 103 104 105 106 107 108 109 110 111 112 113 114
    115 116 117 118 119 120
type (89)
    on left: 121 122 123 124 125 126 127 128 129 130 131 132 133,
    on right: 46 53 54 55 56 57 58 62 63 64 65 66 133


state 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program         go to state 2
    class_decl_seq  go to state 3
    class_decl      go to state 4


state 1

   12 class_decl: CLASS . ID parent_seq creators_seq features_seq END
   13           | CLASS . ID parent_seq creators_seq END
   14           | CLASS . ID parent_seq features_seq END
   15           | CLASS . ID parent_seq END
   16           | CLASS . ID creators_seq features_seq END
   17           | CLASS . ID creators_seq END
   18           | CLASS . ID features_seq END
   19           | CLASS . ID END

    ID  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    9 program: class_decl_seq .
   11 class_decl_seq: class_decl_seq . class_decl

    CLASS  shift, and go to state 1

    $default  reduce using rule 9 (program)

    class_decl  go to state 7


state 4

   10 class_decl_seq: class_decl .

    $default  reduce using rule 10 (class_decl_seq)


state 5

   12 class_decl: CLASS ID . parent_seq creators_seq features_seq END
   13           | CLASS ID . parent_seq creators_seq END
   14           | CLASS ID . parent_seq features_seq END
   15           | CLASS ID . parent_seq END
   16           | CLASS ID . creators_seq features_seq END
   17           | CLASS ID . creators_seq END
   18           | CLASS ID . features_seq END
   19           | CLASS ID . END

    END      shift, and go to state 8
    INHERIT  shift, and go to state 9
    CREATE   shift, and go to state 10
    FEATURE  shift, and go to state 11

    parent_seq    go to state 12
    creators_seq  go to state 13
    features_seq  go to state 14


state 6

    0 $accept: program $end .

    $default  accept


state 7

   11 class_decl_seq: class_decl_seq class_decl .

    $default  reduce using rule 11 (class_decl_seq)


state 8

   19 class_decl: CLASS ID END .

    $default  reduce using rule 19 (class_decl)


state 9

   20 parent_seq: INHERIT . parent opt_semicolon

    ID  shift, and go to state 15

    parent  go to state 16


state 10

   40 creators_seq: CREATE . identifiers_comma_seq

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 18


state 11

   42 features_seq: FEATURE . feature_decl_seq

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 19
    feature_decl_seq       go to state 20
    feature_decl           go to state 21


state 12

   12 class_decl: CLASS ID parent_seq . creators_seq features_seq END
   13           | CLASS ID parent_seq . creators_seq END
   14           | CLASS ID parent_seq . features_seq END
   15           | CLASS ID parent_seq . END
   21 parent_seq: parent_seq . parent opt_semicolon

    ID       shift, and go to state 15
    END      shift, and go to state 22
    CREATE   shift, and go to state 10
    FEATURE  shift, and go to state 11

    parent        go to state 23
    creators_seq  go to state 24
    features_seq  go to state 25


state 13

   16 class_decl: CLASS ID creators_seq . features_seq END
   17           | CLASS ID creators_seq . END
   41 creators_seq: creators_seq . CREATE identifiers_comma_seq

    END      shift, and go to state 26
    CREATE   shift, and go to state 27
    FEATURE  shift, and go to state 11

    features_seq  go to state 28


state 14

   18 class_decl: CLASS ID features_seq . END
   43 features_seq: features_seq . FEATURE feature_decl_seq

    END      shift, and go to state 29
    FEATURE  shift, and go to state 30


state 15

   22 parent: ID . RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   23       | ID . UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   24       | ID . RENAME rename_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   25       | ID . REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   26       | ID . RENAME rename_seq UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   27       | ID . UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   28       | ID . RENAME rename_seq SELECT identifiers_comma_seq END
   29       | ID . SELECT identifiers_comma_seq END
   30       | ID . RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq END
   31       | ID . UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq END
   32       | ID . RENAME rename_seq REDEFINE identifiers_comma_seq END
   33       | ID . REDEFINE identifiers_comma_seq END
   34       | ID . RENAME rename_seq UNDEFINE identifiers_comma_seq END
   35       | ID . UNDEFINE identifiers_comma_seq END
   36       | ID . RENAME rename_seq END
   37       | ID .

    RENAME    shift, and go to state 31
    UNDEFINE  shift, and go to state 32
    REDEFINE  shift, and go to state 33
    SELECT    shift, and go to state 34

    $default  reduce using rule 37 (parent)


state 16

   20 parent_seq: INHERIT parent . opt_semicolon

    ';'  shift, and go to state 35

    $default  reduce using rule 3 (opt_semicolon)

    opt_semicolon  go to state 36


state 17

    1 identifiers_comma_seq: ID .

    $default  reduce using rule 1 (identifiers_comma_seq)


state 18

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   40 creators_seq: CREATE identifiers_comma_seq .

    ','  shift, and go to state 37

    $default  reduce using rule 40 (creators_seq)


state 19

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   46 feature_decl: identifiers_comma_seq . ':' type
   47             | identifiers_comma_seq . DO instruction_seq END
   48             | identifiers_comma_seq . LOCAL DO instruction_seq END
   49             | identifiers_comma_seq . LOCAL ids_with_type_seq DO instruction_seq END
   50             | identifiers_comma_seq . '(' ')' DO instruction_seq END
   51             | identifiers_comma_seq . '(' ')' LOCAL DO instruction_seq END
   52             | identifiers_comma_seq . '(' ')' LOCAL ids_with_type_seq DO instruction_seq END
   53             | identifiers_comma_seq . ':' type DO instruction_seq END
   54             | identifiers_comma_seq . ':' type LOCAL DO instruction_seq END
   55             | identifiers_comma_seq . ':' type LOCAL ids_with_type_seq DO instruction_seq END
   56             | identifiers_comma_seq . '(' ')' ':' type DO instruction_seq END
   57             | identifiers_comma_seq . '(' ')' ':' type LOCAL DO instruction_seq END
   58             | identifiers_comma_seq . '(' ')' ':' type LOCAL ids_with_type_seq DO instruction_seq END
   59             | identifiers_comma_seq . '(' ids_with_type_seq ')' DO instruction_seq END
   60             | identifiers_comma_seq . '(' ids_with_type_seq ')' LOCAL DO instruction_seq END
   61             | identifiers_comma_seq . '(' ids_with_type_seq ')' LOCAL ids_with_type_seq DO instruction_seq END
   62             | identifiers_comma_seq . '(' ids_with_type_seq ')' ':' type DO instruction_seq END
   63             | identifiers_comma_seq . '(' ids_with_type_seq ')' ':' type LOCAL DO instruction_seq END
   64             | identifiers_comma_seq . '(' ids_with_type_seq ')' ':' type LOCAL ids_with_type_seq DO instruction_seq END

    '('    shift, and go to state 38
    LOCAL  shift, and go to state 39
    DO     shift, and go to state 40
    ','    shift, and go to state 37
    ':'    shift, and go to state 41


state 20

   42 features_seq: FEATURE feature_decl_seq .
   45 feature_decl_seq: feature_decl_seq . feature_decl opt_semicolon_seq

    ID  shift, and go to state 17

    $default  reduce using rule 42 (features_seq)

    identifiers_comma_seq  go to state 19
    feature_decl           go to state 42


state 21

   44 feature_decl_seq: feature_decl . opt_semicolon_seq

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 44
    nonempty_opt_semicolon_seq  go to state 45


state 22

   15 class_decl: CLASS ID parent_seq END .

    $default  reduce using rule 15 (class_decl)


state 23

   21 parent_seq: parent_seq parent . opt_semicolon

    ';'  shift, and go to state 35

    $default  reduce using rule 3 (opt_semicolon)

    opt_semicolon  go to state 46


state 24

   12 class_decl: CLASS ID parent_seq creators_seq . features_seq END
   13           | CLASS ID parent_seq creators_seq . END
   41 creators_seq: creators_seq . CREATE identifiers_comma_seq

    END      shift, and go to state 47
    CREATE   shift, and go to state 27
    FEATURE  shift, and go to state 11

    features_seq  go to state 48


state 25

   14 class_decl: CLASS ID parent_seq features_seq . END
   43 features_seq: features_seq . FEATURE feature_decl_seq

    END      shift, and go to state 49
    FEATURE  shift, and go to state 30


state 26

   17 class_decl: CLASS ID creators_seq END .

    $default  reduce using rule 17 (class_decl)


state 27

   41 creators_seq: creators_seq CREATE . identifiers_comma_seq

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 50


state 28

   16 class_decl: CLASS ID creators_seq features_seq . END
   43 features_seq: features_seq . FEATURE feature_decl_seq

    END      shift, and go to state 51
    FEATURE  shift, and go to state 30


state 29

   18 class_decl: CLASS ID features_seq END .

    $default  reduce using rule 18 (class_decl)


state 30

   43 features_seq: features_seq FEATURE . feature_decl_seq

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 19
    feature_decl_seq       go to state 52
    feature_decl           go to state 21


state 31

   22 parent: ID RENAME . rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   24       | ID RENAME . rename_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   26       | ID RENAME . rename_seq UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   28       | ID RENAME . rename_seq SELECT identifiers_comma_seq END
   30       | ID RENAME . rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq END
   32       | ID RENAME . rename_seq REDEFINE identifiers_comma_seq END
   34       | ID RENAME . rename_seq UNDEFINE identifiers_comma_seq END
   36       | ID RENAME . rename_seq END

    ID  shift, and go to state 53

    rename_seq  go to state 54


state 32

   23 parent: ID UNDEFINE . identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   27       | ID UNDEFINE . identifiers_comma_seq SELECT identifiers_comma_seq END
   31       | ID UNDEFINE . identifiers_comma_seq REDEFINE identifiers_comma_seq END
   35       | ID UNDEFINE . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 55


state 33

   25 parent: ID REDEFINE . identifiers_comma_seq SELECT identifiers_comma_seq END
   33       | ID REDEFINE . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 56


state 34

   29 parent: ID SELECT . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 57


state 35

    4 opt_semicolon: ';' .

    $default  reduce using rule 4 (opt_semicolon)


state 36

   20 parent_seq: INHERIT parent opt_semicolon .

    $default  reduce using rule 20 (parent_seq)


state 37

    2 identifiers_comma_seq: identifiers_comma_seq ',' . ID

    ID  shift, and go to state 58


state 38

   50 feature_decl: identifiers_comma_seq '(' . ')' DO instruction_seq END
   51             | identifiers_comma_seq '(' . ')' LOCAL DO instruction_seq END
   52             | identifiers_comma_seq '(' . ')' LOCAL ids_with_type_seq DO instruction_seq END
   56             | identifiers_comma_seq '(' . ')' ':' type DO instruction_seq END
   57             | identifiers_comma_seq '(' . ')' ':' type LOCAL DO instruction_seq END
   58             | identifiers_comma_seq '(' . ')' ':' type LOCAL ids_with_type_seq DO instruction_seq END
   59             | identifiers_comma_seq '(' . ids_with_type_seq ')' DO instruction_seq END
   60             | identifiers_comma_seq '(' . ids_with_type_seq ')' LOCAL DO instruction_seq END
   61             | identifiers_comma_seq '(' . ids_with_type_seq ')' LOCAL ids_with_type_seq DO instruction_seq END
   62             | identifiers_comma_seq '(' . ids_with_type_seq ')' ':' type DO instruction_seq END
   63             | identifiers_comma_seq '(' . ids_with_type_seq ')' ':' type LOCAL DO instruction_seq END
   64             | identifiers_comma_seq '(' . ids_with_type_seq ')' ':' type LOCAL ids_with_type_seq DO instruction_seq END

    ID   shift, and go to state 17
    ')'  shift, and go to state 59

    identifiers_comma_seq  go to state 60
    ids_with_type_seq      go to state 61


state 39

   48 feature_decl: identifiers_comma_seq LOCAL . DO instruction_seq END
   49             | identifiers_comma_seq LOCAL . ids_with_type_seq DO instruction_seq END

    ID  shift, and go to state 17
    DO  shift, and go to state 62

    identifiers_comma_seq  go to state 60
    ids_with_type_seq      go to state 63


state 40

   47 feature_decl: identifiers_comma_seq DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 65


state 41

   46 feature_decl: identifiers_comma_seq ':' . type
   53             | identifiers_comma_seq ':' . type DO instruction_seq END
   54             | identifiers_comma_seq ':' . type LOCAL DO instruction_seq END
   55             | identifiers_comma_seq ':' . type LOCAL ids_with_type_seq DO instruction_seq END

    ID                   shift, and go to state 66
    DATATYPE_BOOLEAN     shift, and go to state 67
    DATATYPE_CHARACTER   shift, and go to state 68
    DATATYPE_INTEGER_8   shift, and go to state 69
    DATATYPE_INTEGER_16  shift, and go to state 70
    DATATYPE_INTEGER_32  shift, and go to state 71
    DATATYPE_INTEGER_64  shift, and go to state 72
    DATATYPE_NATURAL_8   shift, and go to state 73
    DATATYPE_NATURAL_16  shift, and go to state 74
    DATATYPE_NATURAL_32  shift, and go to state 75
    DATATYPE_NATURAL_64  shift, and go to state 76
    DATATYPE_STRING      shift, and go to state 77
    DATATYPE_ARRAY       shift, and go to state 78

    type  go to state 79


state 42

   45 feature_decl_seq: feature_decl_seq feature_decl . opt_semicolon_seq

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 80
    nonempty_opt_semicolon_seq  go to state 45


state 43

    7 nonempty_opt_semicolon_seq: ';' .

    $default  reduce using rule 7 (nonempty_opt_semicolon_seq)


state 44

   44 feature_decl_seq: feature_decl opt_semicolon_seq .

    $default  reduce using rule 44 (feature_decl_seq)


state 45

    6 opt_semicolon_seq: nonempty_opt_semicolon_seq .
    8 nonempty_opt_semicolon_seq: nonempty_opt_semicolon_seq . ';'

    ';'  shift, and go to state 81

    $default  reduce using rule 6 (opt_semicolon_seq)


state 46

   21 parent_seq: parent_seq parent opt_semicolon .

    $default  reduce using rule 21 (parent_seq)


state 47

   13 class_decl: CLASS ID parent_seq creators_seq END .

    $default  reduce using rule 13 (class_decl)


state 48

   12 class_decl: CLASS ID parent_seq creators_seq features_seq . END
   43 features_seq: features_seq . FEATURE feature_decl_seq

    END      shift, and go to state 82
    FEATURE  shift, and go to state 30


state 49

   14 class_decl: CLASS ID parent_seq features_seq END .

    $default  reduce using rule 14 (class_decl)


state 50

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   41 creators_seq: creators_seq CREATE identifiers_comma_seq .

    ','  shift, and go to state 37

    $default  reduce using rule 41 (creators_seq)


state 51

   16 class_decl: CLASS ID creators_seq features_seq END .

    $default  reduce using rule 16 (class_decl)


state 52

   43 features_seq: features_seq FEATURE feature_decl_seq .
   45 feature_decl_seq: feature_decl_seq . feature_decl opt_semicolon_seq

    ID  shift, and go to state 17

    $default  reduce using rule 43 (features_seq)

    identifiers_comma_seq  go to state 19
    feature_decl           go to state 42


state 53

   38 rename_seq: ID . AS ID

    AS  shift, and go to state 83


state 54

   22 parent: ID RENAME rename_seq . UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   24       | ID RENAME rename_seq . REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   26       | ID RENAME rename_seq . UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   28       | ID RENAME rename_seq . SELECT identifiers_comma_seq END
   30       | ID RENAME rename_seq . UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq END
   32       | ID RENAME rename_seq . REDEFINE identifiers_comma_seq END
   34       | ID RENAME rename_seq . UNDEFINE identifiers_comma_seq END
   36       | ID RENAME rename_seq . END
   39 rename_seq: rename_seq . ',' ID AS ID

    END       shift, and go to state 84
    UNDEFINE  shift, and go to state 85
    REDEFINE  shift, and go to state 86
    SELECT    shift, and go to state 87
    ','       shift, and go to state 88


state 55

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   23 parent: ID UNDEFINE identifiers_comma_seq . REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   27       | ID UNDEFINE identifiers_comma_seq . SELECT identifiers_comma_seq END
   31       | ID UNDEFINE identifiers_comma_seq . REDEFINE identifiers_comma_seq END
   35       | ID UNDEFINE identifiers_comma_seq . END

    END       shift, and go to state 89
    REDEFINE  shift, and go to state 90
    SELECT    shift, and go to state 91
    ','       shift, and go to state 37


state 56

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   25 parent: ID REDEFINE identifiers_comma_seq . SELECT identifiers_comma_seq END
   33       | ID REDEFINE identifiers_comma_seq . END

    END     shift, and go to state 92
    SELECT  shift, and go to state 93
    ','     shift, and go to state 37


state 57

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   29 parent: ID SELECT identifiers_comma_seq . END

    END  shift, and go to state 94
    ','  shift, and go to state 37


state 58

    2 identifiers_comma_seq: identifiers_comma_seq ',' ID .

    $default  reduce using rule 2 (identifiers_comma_seq)


state 59

   50 feature_decl: identifiers_comma_seq '(' ')' . DO instruction_seq END
   51             | identifiers_comma_seq '(' ')' . LOCAL DO instruction_seq END
   52             | identifiers_comma_seq '(' ')' . LOCAL ids_with_type_seq DO instruction_seq END
   56             | identifiers_comma_seq '(' ')' . ':' type DO instruction_seq END
   57             | identifiers_comma_seq '(' ')' . ':' type LOCAL DO instruction_seq END
   58             | identifiers_comma_seq '(' ')' . ':' type LOCAL ids_with_type_seq DO instruction_seq END

    LOCAL  shift, and go to state 95
    DO     shift, and go to state 96
    ':'    shift, and go to state 97


state 60

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   65 ids_with_type_seq: identifiers_comma_seq . ':' type opt_semicolon

    ','  shift, and go to state 37
    ':'  shift, and go to state 98


state 61

   59 feature_decl: identifiers_comma_seq '(' ids_with_type_seq . ')' DO instruction_seq END
   60             | identifiers_comma_seq '(' ids_with_type_seq . ')' LOCAL DO instruction_seq END
   61             | identifiers_comma_seq '(' ids_with_type_seq . ')' LOCAL ids_with_type_seq DO instruction_seq END
   62             | identifiers_comma_seq '(' ids_with_type_seq . ')' ':' type DO instruction_seq END
   63             | identifiers_comma_seq '(' ids_with_type_seq . ')' ':' type LOCAL DO instruction_seq END
   64             | identifiers_comma_seq '(' ids_with_type_seq . ')' ':' type LOCAL ids_with_type_seq DO instruction_seq END
   66 ids_with_type_seq: ids_with_type_seq . identifiers_comma_seq ':' type opt_semicolon

    ID   shift, and go to state 17
    ')'  shift, and go to state 99

    identifiers_comma_seq  go to state 100


state 62

   48 feature_decl: identifiers_comma_seq LOCAL DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 101


state 63

   49 feature_decl: identifiers_comma_seq LOCAL ids_with_type_seq . DO instruction_seq END
   66 ids_with_type_seq: ids_with_type_seq . identifiers_comma_seq ':' type opt_semicolon

    ID  shift, and go to state 17
    DO  shift, and go to state 102

    identifiers_comma_seq  go to state 100


state 64

   67 instruction_seq: opt_semicolon_seq .

    $default  reduce using rule 67 (instruction_seq)


state 65

   47 feature_decl: identifiers_comma_seq DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 103
    END            shift, and go to state 104
    IF             shift, and go to state 105
    FROM           shift, and go to state 106
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CREATE         shift, and go to state 114
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    instruction  go to state 118
    call         go to state 119
    expr         go to state 120


state 66

  121 type: ID .

    $default  reduce using rule 121 (type)


state 67

  122 type: DATATYPE_BOOLEAN .

    $default  reduce using rule 122 (type)


state 68

  123 type: DATATYPE_CHARACTER .

    $default  reduce using rule 123 (type)


state 69

  124 type: DATATYPE_INTEGER_8 .

    $default  reduce using rule 124 (type)


state 70

  125 type: DATATYPE_INTEGER_16 .

    $default  reduce using rule 125 (type)


state 71

  126 type: DATATYPE_INTEGER_32 .

    $default  reduce using rule 126 (type)


state 72

  127 type: DATATYPE_INTEGER_64 .

    $default  reduce using rule 127 (type)


state 73

  128 type: DATATYPE_NATURAL_8 .

    $default  reduce using rule 128 (type)


state 74

  129 type: DATATYPE_NATURAL_16 .

    $default  reduce using rule 129 (type)


state 75

  130 type: DATATYPE_NATURAL_32 .

    $default  reduce using rule 130 (type)


state 76

  131 type: DATATYPE_NATURAL_64 .

    $default  reduce using rule 131 (type)


state 77

  132 type: DATATYPE_STRING .

    $default  reduce using rule 132 (type)


state 78

  133 type: DATATYPE_ARRAY . '[' type ']'

    '['  shift, and go to state 121


state 79

   46 feature_decl: identifiers_comma_seq ':' type .
   53             | identifiers_comma_seq ':' type . DO instruction_seq END
   54             | identifiers_comma_seq ':' type . LOCAL DO instruction_seq END
   55             | identifiers_comma_seq ':' type . LOCAL ids_with_type_seq DO instruction_seq END

    LOCAL  shift, and go to state 122
    DO     shift, and go to state 123

    $default  reduce using rule 46 (feature_decl)


state 80

   45 feature_decl_seq: feature_decl_seq feature_decl opt_semicolon_seq .

    $default  reduce using rule 45 (feature_decl_seq)


state 81

    8 nonempty_opt_semicolon_seq: nonempty_opt_semicolon_seq ';' .

    $default  reduce using rule 8 (nonempty_opt_semicolon_seq)


state 82

   12 class_decl: CLASS ID parent_seq creators_seq features_seq END .

    $default  reduce using rule 12 (class_decl)


state 83

   38 rename_seq: ID AS . ID

    ID  shift, and go to state 124


state 84

   36 parent: ID RENAME rename_seq END .

    $default  reduce using rule 36 (parent)


state 85

   22 parent: ID RENAME rename_seq UNDEFINE . identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   26       | ID RENAME rename_seq UNDEFINE . identifiers_comma_seq SELECT identifiers_comma_seq END
   30       | ID RENAME rename_seq UNDEFINE . identifiers_comma_seq REDEFINE identifiers_comma_seq END
   34       | ID RENAME rename_seq UNDEFINE . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 125


state 86

   24 parent: ID RENAME rename_seq REDEFINE . identifiers_comma_seq SELECT identifiers_comma_seq END
   32       | ID RENAME rename_seq REDEFINE . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 126


state 87

   28 parent: ID RENAME rename_seq SELECT . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 127


state 88

   39 rename_seq: rename_seq ',' . ID AS ID

    ID  shift, and go to state 128


state 89

   35 parent: ID UNDEFINE identifiers_comma_seq END .

    $default  reduce using rule 35 (parent)


state 90

   23 parent: ID UNDEFINE identifiers_comma_seq REDEFINE . identifiers_comma_seq SELECT identifiers_comma_seq END
   31       | ID UNDEFINE identifiers_comma_seq REDEFINE . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 129


state 91

   27 parent: ID UNDEFINE identifiers_comma_seq SELECT . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 130


state 92

   33 parent: ID REDEFINE identifiers_comma_seq END .

    $default  reduce using rule 33 (parent)


state 93

   25 parent: ID REDEFINE identifiers_comma_seq SELECT . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 131


state 94

   29 parent: ID SELECT identifiers_comma_seq END .

    $default  reduce using rule 29 (parent)


state 95

   51 feature_decl: identifiers_comma_seq '(' ')' LOCAL . DO instruction_seq END
   52             | identifiers_comma_seq '(' ')' LOCAL . ids_with_type_seq DO instruction_seq END

    ID  shift, and go to state 17
    DO  shift, and go to state 132

    identifiers_comma_seq  go to state 60
    ids_with_type_seq      go to state 133


state 96

   50 feature_decl: identifiers_comma_seq '(' ')' DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 134


state 97

   56 feature_decl: identifiers_comma_seq '(' ')' ':' . type DO instruction_seq END
   57             | identifiers_comma_seq '(' ')' ':' . type LOCAL DO instruction_seq END
   58             | identifiers_comma_seq '(' ')' ':' . type LOCAL ids_with_type_seq DO instruction_seq END

    ID                   shift, and go to state 66
    DATATYPE_BOOLEAN     shift, and go to state 67
    DATATYPE_CHARACTER   shift, and go to state 68
    DATATYPE_INTEGER_8   shift, and go to state 69
    DATATYPE_INTEGER_16  shift, and go to state 70
    DATATYPE_INTEGER_32  shift, and go to state 71
    DATATYPE_INTEGER_64  shift, and go to state 72
    DATATYPE_NATURAL_8   shift, and go to state 73
    DATATYPE_NATURAL_16  shift, and go to state 74
    DATATYPE_NATURAL_32  shift, and go to state 75
    DATATYPE_NATURAL_64  shift, and go to state 76
    DATATYPE_STRING      shift, and go to state 77
    DATATYPE_ARRAY       shift, and go to state 78

    type  go to state 135


state 98

   65 ids_with_type_seq: identifiers_comma_seq ':' . type opt_semicolon

    ID                   shift, and go to state 66
    DATATYPE_BOOLEAN     shift, and go to state 67
    DATATYPE_CHARACTER   shift, and go to state 68
    DATATYPE_INTEGER_8   shift, and go to state 69
    DATATYPE_INTEGER_16  shift, and go to state 70
    DATATYPE_INTEGER_32  shift, and go to state 71
    DATATYPE_INTEGER_64  shift, and go to state 72
    DATATYPE_NATURAL_8   shift, and go to state 73
    DATATYPE_NATURAL_16  shift, and go to state 74
    DATATYPE_NATURAL_32  shift, and go to state 75
    DATATYPE_NATURAL_64  shift, and go to state 76
    DATATYPE_STRING      shift, and go to state 77
    DATATYPE_ARRAY       shift, and go to state 78

    type  go to state 136


state 99

   59 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' . DO instruction_seq END
   60             | identifiers_comma_seq '(' ids_with_type_seq ')' . LOCAL DO instruction_seq END
   61             | identifiers_comma_seq '(' ids_with_type_seq ')' . LOCAL ids_with_type_seq DO instruction_seq END
   62             | identifiers_comma_seq '(' ids_with_type_seq ')' . ':' type DO instruction_seq END
   63             | identifiers_comma_seq '(' ids_with_type_seq ')' . ':' type LOCAL DO instruction_seq END
   64             | identifiers_comma_seq '(' ids_with_type_seq ')' . ':' type LOCAL ids_with_type_seq DO instruction_seq END

    LOCAL  shift, and go to state 137
    DO     shift, and go to state 138
    ':'    shift, and go to state 139


state 100

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   66 ids_with_type_seq: ids_with_type_seq identifiers_comma_seq . ':' type opt_semicolon

    ','  shift, and go to state 37
    ':'  shift, and go to state 140


state 101

   48 feature_decl: identifiers_comma_seq LOCAL DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 103
    END            shift, and go to state 141
    IF             shift, and go to state 105
    FROM           shift, and go to state 106
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CREATE         shift, and go to state 114
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    instruction  go to state 118
    call         go to state 119
    expr         go to state 120


state 102

   49 feature_decl: identifiers_comma_seq LOCAL ids_with_type_seq DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 142


state 103

   72 instruction: ID . ASSIGNMENT expr
   77 call: ID .
   78     | ID . '(' ')'
   79     | ID . '(' argument_seq ')'

    ASSIGNMENT  shift, and go to state 143
    '('         shift, and go to state 144

    '('       [reduce using rule 77 (call)]
    $default  reduce using rule 77 (call)


state 104

   47 feature_decl: identifiers_comma_seq DO instruction_seq END .

    $default  reduce using rule 47 (feature_decl)


state 105

   73 instruction: IF . '(' expr ')' THEN instruction_seq END
   74            | IF . '(' expr ')' THEN instruction_seq ELSE instruction_seq END

    '('  shift, and go to state 145


state 106

   75 instruction: FROM . instruction_seq UNTIL expr LOOP instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 146


state 107

  110 expr: '-' . expr

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    call  go to state 119
    expr  go to state 148


state 108

  120 expr: NOT . expr

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    call  go to state 119
    expr  go to state 149


state 109

   86 call: '(' . expr ')' '.' ID
   87     | '(' . expr ')' '.' ID '(' ')'
   88     | '(' . expr ')' '.' ID '(' argument_seq ')'
   97 expr: '(' . expr ')'

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    call  go to state 119
    expr  go to state 150


state 110

   98 expr: LITER_BOOLEAN .

    $default  reduce using rule 98 (expr)


state 111

   99 expr: LITER_INTEGER .

    $default  reduce using rule 99 (expr)


state 112

  100 expr: LITER_CHAR .

    $default  reduce using rule 100 (expr)


state 113

  101 expr: LITER_STRING .

    $default  reduce using rule 101 (expr)


state 114

   69 instruction: CREATE . ID
   70            | CREATE . ID '.' ID
   71            | CREATE . ID '.' ID '(' argument_seq ')'

    ID  shift, and go to state 151


state 115

   80 call: CURRENT . '.' ID
   81     | CURRENT . '.' ID '(' ')'
   82     | CURRENT . '.' ID '(' argument_seq ')'

    '.'  shift, and go to state 152


state 116

   83 call: RESULT . '.' ID
   84     | RESULT . '.' ID '(' ')'
   85     | RESULT . '.' ID '(' argument_seq ')'

    '.'  shift, and go to state 153


state 117

   89 call: PRECURSOR .
   90     | PRECURSOR . '(' ')'
   91     | PRECURSOR . '(' argument_seq ')'
   92     | PRECURSOR . '{' ID '}'
   93     | PRECURSOR . '{' ID '}' '(' ')'
   94     | PRECURSOR . '{' ID '}' '(' argument_seq ')'

    '('  shift, and go to state 154
    '{'  shift, and go to state 155

    '('       [reduce using rule 89 (call)]
    $default  reduce using rule 89 (call)


state 118

   68 instruction_seq: instruction_seq instruction . opt_semicolon_seq

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 156
    nonempty_opt_semicolon_seq  go to state 45


state 119

  102 expr: call .

    $default  reduce using rule 102 (expr)


state 120

   76 instruction: expr .
  103 expr: expr . '.' ID
  104     | expr . '.' ID '(' argument_seq ')'
  105     | expr . '@' expr
  106     | expr . '+' expr
  107     | expr . '-' expr
  108     | expr . '*' expr
  109     | expr . INTEGER_DIVISION expr
  111     | expr . '<' expr
  112     | expr . '>' expr
  113     | expr . LESS_EQUAL expr
  114     | expr . GREAT_EQUAL expr
  115     | expr . '=' expr
  116     | expr . NOTEQUAL expr
  117     | expr . AND expr
  118     | expr . OR expr
  119     | expr . XOR expr

    XOR               shift, and go to state 157
    OR                shift, and go to state 158
    AND               shift, and go to state 159
    '<'               shift, and go to state 160
    '>'               shift, and go to state 161
    '='               shift, and go to state 162
    NOTEQUAL          shift, and go to state 163
    GREAT_EQUAL       shift, and go to state 164
    LESS_EQUAL        shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    INTEGER_DIVISION  shift, and go to state 169
    '@'               shift, and go to state 170
    '.'               shift, and go to state 171

    '-'       [reduce using rule 76 (instruction)]
    $default  reduce using rule 76 (instruction)


state 121

  133 type: DATATYPE_ARRAY '[' . type ']'

    ID                   shift, and go to state 66
    DATATYPE_BOOLEAN     shift, and go to state 67
    DATATYPE_CHARACTER   shift, and go to state 68
    DATATYPE_INTEGER_8   shift, and go to state 69
    DATATYPE_INTEGER_16  shift, and go to state 70
    DATATYPE_INTEGER_32  shift, and go to state 71
    DATATYPE_INTEGER_64  shift, and go to state 72
    DATATYPE_NATURAL_8   shift, and go to state 73
    DATATYPE_NATURAL_16  shift, and go to state 74
    DATATYPE_NATURAL_32  shift, and go to state 75
    DATATYPE_NATURAL_64  shift, and go to state 76
    DATATYPE_STRING      shift, and go to state 77
    DATATYPE_ARRAY       shift, and go to state 78

    type  go to state 172


state 122

   54 feature_decl: identifiers_comma_seq ':' type LOCAL . DO instruction_seq END
   55             | identifiers_comma_seq ':' type LOCAL . ids_with_type_seq DO instruction_seq END

    ID  shift, and go to state 17
    DO  shift, and go to state 173

    identifiers_comma_seq  go to state 60
    ids_with_type_seq      go to state 174


state 123

   53 feature_decl: identifiers_comma_seq ':' type DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 175


state 124

   38 rename_seq: ID AS ID .

    $default  reduce using rule 38 (rename_seq)


state 125

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   22 parent: ID RENAME rename_seq UNDEFINE identifiers_comma_seq . REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END
   26       | ID RENAME rename_seq UNDEFINE identifiers_comma_seq . SELECT identifiers_comma_seq END
   30       | ID RENAME rename_seq UNDEFINE identifiers_comma_seq . REDEFINE identifiers_comma_seq END
   34       | ID RENAME rename_seq UNDEFINE identifiers_comma_seq . END

    END       shift, and go to state 176
    REDEFINE  shift, and go to state 177
    SELECT    shift, and go to state 178
    ','       shift, and go to state 37


state 126

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   24 parent: ID RENAME rename_seq REDEFINE identifiers_comma_seq . SELECT identifiers_comma_seq END
   32       | ID RENAME rename_seq REDEFINE identifiers_comma_seq . END

    END     shift, and go to state 179
    SELECT  shift, and go to state 180
    ','     shift, and go to state 37


state 127

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   28 parent: ID RENAME rename_seq SELECT identifiers_comma_seq . END

    END  shift, and go to state 181
    ','  shift, and go to state 37


state 128

   39 rename_seq: rename_seq ',' ID . AS ID

    AS  shift, and go to state 182


state 129

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   23 parent: ID UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq . SELECT identifiers_comma_seq END
   31       | ID UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq . END

    END     shift, and go to state 183
    SELECT  shift, and go to state 184
    ','     shift, and go to state 37


state 130

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   27 parent: ID UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq . END

    END  shift, and go to state 185
    ','  shift, and go to state 37


state 131

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   25 parent: ID REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq . END

    END  shift, and go to state 186
    ','  shift, and go to state 37


state 132

   51 feature_decl: identifiers_comma_seq '(' ')' LOCAL DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 187


state 133

   52 feature_decl: identifiers_comma_seq '(' ')' LOCAL ids_with_type_seq . DO instruction_seq END
   66 ids_with_type_seq: ids_with_type_seq . identifiers_comma_seq ':' type opt_semicolon

    ID  shift, and go to state 17
    DO  shift, and go to state 188

    identifiers_comma_seq  go to state 100


state 134

   50 feature_decl: identifiers_comma_seq '(' ')' DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 103
    END            shift, and go to state 189
    IF             shift, and go to state 105
    FROM           shift, and go to state 106
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CREATE         shift, and go to state 114
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    instruction  go to state 118
    call         go to state 119
    expr         go to state 120


state 135

   56 feature_decl: identifiers_comma_seq '(' ')' ':' type . DO instruction_seq END
   57             | identifiers_comma_seq '(' ')' ':' type . LOCAL DO instruction_seq END
   58             | identifiers_comma_seq '(' ')' ':' type . LOCAL ids_with_type_seq DO instruction_seq END

    LOCAL  shift, and go to state 190
    DO     shift, and go to state 191


state 136

   65 ids_with_type_seq: identifiers_comma_seq ':' type . opt_semicolon

    ';'  shift, and go to state 35

    $default  reduce using rule 3 (opt_semicolon)

    opt_semicolon  go to state 192


state 137

   60 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' LOCAL . DO instruction_seq END
   61             | identifiers_comma_seq '(' ids_with_type_seq ')' LOCAL . ids_with_type_seq DO instruction_seq END

    ID  shift, and go to state 17
    DO  shift, and go to state 193

    identifiers_comma_seq  go to state 60
    ids_with_type_seq      go to state 194


state 138

   59 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 195


state 139

   62 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' . type DO instruction_seq END
   63             | identifiers_comma_seq '(' ids_with_type_seq ')' ':' . type LOCAL DO instruction_seq END
   64             | identifiers_comma_seq '(' ids_with_type_seq ')' ':' . type LOCAL ids_with_type_seq DO instruction_seq END

    ID                   shift, and go to state 66
    DATATYPE_BOOLEAN     shift, and go to state 67
    DATATYPE_CHARACTER   shift, and go to state 68
    DATATYPE_INTEGER_8   shift, and go to state 69
    DATATYPE_INTEGER_16  shift, and go to state 70
    DATATYPE_INTEGER_32  shift, and go to state 71
    DATATYPE_INTEGER_64  shift, and go to state 72
    DATATYPE_NATURAL_8   shift, and go to state 73
    DATATYPE_NATURAL_16  shift, and go to state 74
    DATATYPE_NATURAL_32  shift, and go to state 75
    DATATYPE_NATURAL_64  shift, and go to state 76
    DATATYPE_STRING      shift, and go to state 77
    DATATYPE_ARRAY       shift, and go to state 78

    type  go to state 196


state 140

   66 ids_with_type_seq: ids_with_type_seq identifiers_comma_seq ':' . type opt_semicolon

    ID                   shift, and go to state 66
    DATATYPE_BOOLEAN     shift, and go to state 67
    DATATYPE_CHARACTER   shift, and go to state 68
    DATATYPE_INTEGER_8   shift, and go to state 69
    DATATYPE_INTEGER_16  shift, and go to state 70
    DATATYPE_INTEGER_32  shift, and go to state 71
    DATATYPE_INTEGER_64  shift, and go to state 72
    DATATYPE_NATURAL_8   shift, and go to state 73
    DATATYPE_NATURAL_16  shift, and go to state 74
    DATATYPE_NATURAL_32  shift, and go to state 75
    DATATYPE_NATURAL_64  shift, and go to state 76
    DATATYPE_STRING      shift, and go to state 77
    DATATYPE_ARRAY       shift, and go to state 78

    type  go to state 197


state 141

   48 feature_decl: identifiers_comma_seq LOCAL DO instruction_seq END .

    $default  reduce using rule 48 (feature_decl)


state 142

   49 feature_decl: identifiers_comma_seq LOCAL ids_with_type_seq DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 103
    END            shift, and go to state 198
    IF             shift, and go to state 105
    FROM           shift, and go to state 106
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CREATE         shift, and go to state 114
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    instruction  go to state 118
    call         go to state 119
    expr         go to state 120


state 143

   72 instruction: ID ASSIGNMENT . expr

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    call  go to state 119
    expr  go to state 199


state 144

   78 call: ID '(' . ')'
   79     | ID '(' . argument_seq ')'

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117
    ')'            shift, and go to state 200

    call          go to state 119
    argument_seq  go to state 201
    expr          go to state 202


state 145

   73 instruction: IF '(' . expr ')' THEN instruction_seq END
   74            | IF '(' . expr ')' THEN instruction_seq ELSE instruction_seq END

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    call  go to state 119
    expr  go to state 203


state 146

   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq
   75 instruction: FROM instruction_seq . UNTIL expr LOOP instruction_seq END

    ID             shift, and go to state 103
    IF             shift, and go to state 105
    FROM           shift, and go to state 106
    UNTIL          shift, and go to state 204
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CREATE         shift, and go to state 114
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    instruction  go to state 118
    call         go to state 119
    expr         go to state 120


state 147

   77 call: ID .
   78     | ID . '(' ')'
   79     | ID . '(' argument_seq ')'

    '('  shift, and go to state 144

    '('       [reduce using rule 77 (call)]
    $default  reduce using rule 77 (call)


state 148

  103 expr: expr . '.' ID
  104     | expr . '.' ID '(' argument_seq ')'
  105     | expr . '@' expr
  106     | expr . '+' expr
  107     | expr . '-' expr
  108     | expr . '*' expr
  109     | expr . INTEGER_DIVISION expr
  110     | '-' expr .
  111     | expr . '<' expr
  112     | expr . '>' expr
  113     | expr . LESS_EQUAL expr
  114     | expr . GREAT_EQUAL expr
  115     | expr . '=' expr
  116     | expr . NOTEQUAL expr
  117     | expr . AND expr
  118     | expr . OR expr
  119     | expr . XOR expr

    '@'  shift, and go to state 170
    '.'  shift, and go to state 171

    $default  reduce using rule 110 (expr)


state 149

  103 expr: expr . '.' ID
  104     | expr . '.' ID '(' argument_seq ')'
  105     | expr . '@' expr
  106     | expr . '+' expr
  107     | expr . '-' expr
  108     | expr . '*' expr
  109     | expr . INTEGER_DIVISION expr
  111     | expr . '<' expr
  112     | expr . '>' expr
  113     | expr . LESS_EQUAL expr
  114     | expr . GREAT_EQUAL expr
  115     | expr . '=' expr
  116     | expr . NOTEQUAL expr
  117     | expr . AND expr
  118     | expr . OR expr
  119     | expr . XOR expr
  120     | NOT expr .

    '@'  shift, and go to state 170
    '.'  shift, and go to state 171

    $default  reduce using rule 120 (expr)


state 150

   86 call: '(' expr . ')' '.' ID
   87     | '(' expr . ')' '.' ID '(' ')'
   88     | '(' expr . ')' '.' ID '(' argument_seq ')'
   97 expr: '(' expr . ')'
  103     | expr . '.' ID
  104     | expr . '.' ID '(' argument_seq ')'
  105     | expr . '@' expr
  106     | expr . '+' expr
  107     | expr . '-' expr
  108     | expr . '*' expr
  109     | expr . INTEGER_DIVISION expr
  111     | expr . '<' expr
  112     | expr . '>' expr
  113     | expr . LESS_EQUAL expr
  114     | expr . GREAT_EQUAL expr
  115     | expr . '=' expr
  116     | expr . NOTEQUAL expr
  117     | expr . AND expr
  118     | expr . OR expr
  119     | expr . XOR expr

    XOR               shift, and go to state 157
    OR                shift, and go to state 158
    AND               shift, and go to state 159
    '<'               shift, and go to state 160
    '>'               shift, and go to state 161
    '='               shift, and go to state 162
    NOTEQUAL          shift, and go to state 163
    GREAT_EQUAL       shift, and go to state 164
    LESS_EQUAL        shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    INTEGER_DIVISION  shift, and go to state 169
    '@'               shift, and go to state 170
    '.'               shift, and go to state 171
    ')'               shift, and go to state 205


state 151

   69 instruction: CREATE ID .
   70            | CREATE ID . '.' ID
   71            | CREATE ID . '.' ID '(' argument_seq ')'

    '.'  shift, and go to state 206

    $default  reduce using rule 69 (instruction)


state 152

   80 call: CURRENT '.' . ID
   81     | CURRENT '.' . ID '(' ')'
   82     | CURRENT '.' . ID '(' argument_seq ')'

    ID  shift, and go to state 207


state 153

   83 call: RESULT '.' . ID
   84     | RESULT '.' . ID '(' ')'
   85     | RESULT '.' . ID '(' argument_seq ')'

    ID  shift, and go to state 208


state 154

   90 call: PRECURSOR '(' . ')'
   91     | PRECURSOR '(' . argument_seq ')'

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117
    ')'            shift, and go to state 209

    call          go to state 119
    argument_seq  go to state 210
    expr          go to state 202


state 155

   92 call: PRECURSOR '{' . ID '}'
   93     | PRECURSOR '{' . ID '}' '(' ')'
   94     | PRECURSOR '{' . ID '}' '(' argument_seq ')'

    ID  shift, and go to state 211


state 156

   68 instruction_seq: instruction_seq instruction opt_semicolon_seq .

    $default  reduce using rule 68 (instruction_seq)


state 157

  119 expr: expr XOR . expr

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    call  go to state 119
    expr  go to state 212


state 158

  118 expr: expr OR . expr

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    call  go to state 119
    expr  go to state 213


state 159

  117 expr: expr AND . expr

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    call  go to state 119
    expr  go to state 214


state 160

  111 expr: expr '<' . expr

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    call  go to state 119
    expr  go to state 215


state 161

  112 expr: expr '>' . expr

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    call  go to state 119
    expr  go to state 216


state 162

  115 expr: expr '=' . expr

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    call  go to state 119
    expr  go to state 217


state 163

  116 expr: expr NOTEQUAL . expr

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    call  go to state 119
    expr  go to state 218


state 164

  114 expr: expr GREAT_EQUAL . expr

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    call  go to state 119
    expr  go to state 219


state 165

  113 expr: expr LESS_EQUAL . expr

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    call  go to state 119
    expr  go to state 220


state 166

  106 expr: expr '+' . expr

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    call  go to state 119
    expr  go to state 221


state 167

  107 expr: expr '-' . expr

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    call  go to state 119
    expr  go to state 222


state 168

  108 expr: expr '*' . expr

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    call  go to state 119
    expr  go to state 223


state 169

  109 expr: expr INTEGER_DIVISION . expr

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    call  go to state 119
    expr  go to state 224


state 170

  105 expr: expr '@' . expr

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    call  go to state 119
    expr  go to state 225


state 171

  103 expr: expr '.' . ID
  104     | expr '.' . ID '(' argument_seq ')'

    ID  shift, and go to state 226


state 172

  133 type: DATATYPE_ARRAY '[' type . ']'

    ']'  shift, and go to state 227


state 173

   54 feature_decl: identifiers_comma_seq ':' type LOCAL DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 228


state 174

   55 feature_decl: identifiers_comma_seq ':' type LOCAL ids_with_type_seq . DO instruction_seq END
   66 ids_with_type_seq: ids_with_type_seq . identifiers_comma_seq ':' type opt_semicolon

    ID  shift, and go to state 17
    DO  shift, and go to state 229

    identifiers_comma_seq  go to state 100


state 175

   53 feature_decl: identifiers_comma_seq ':' type DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 103
    END            shift, and go to state 230
    IF             shift, and go to state 105
    FROM           shift, and go to state 106
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CREATE         shift, and go to state 114
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    instruction  go to state 118
    call         go to state 119
    expr         go to state 120


state 176

   34 parent: ID RENAME rename_seq UNDEFINE identifiers_comma_seq END .

    $default  reduce using rule 34 (parent)


state 177

   22 parent: ID RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE . identifiers_comma_seq SELECT identifiers_comma_seq END
   30       | ID RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 231


state 178

   26 parent: ID RENAME rename_seq UNDEFINE identifiers_comma_seq SELECT . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 232


state 179

   32 parent: ID RENAME rename_seq REDEFINE identifiers_comma_seq END .

    $default  reduce using rule 32 (parent)


state 180

   24 parent: ID RENAME rename_seq REDEFINE identifiers_comma_seq SELECT . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 233


state 181

   28 parent: ID RENAME rename_seq SELECT identifiers_comma_seq END .

    $default  reduce using rule 28 (parent)


state 182

   39 rename_seq: rename_seq ',' ID AS . ID

    ID  shift, and go to state 234


state 183

   31 parent: ID UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq END .

    $default  reduce using rule 31 (parent)


state 184

   23 parent: ID UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 235


state 185

   27 parent: ID UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END .

    $default  reduce using rule 27 (parent)


state 186

   25 parent: ID REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END .

    $default  reduce using rule 25 (parent)


state 187

   51 feature_decl: identifiers_comma_seq '(' ')' LOCAL DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 103
    END            shift, and go to state 236
    IF             shift, and go to state 105
    FROM           shift, and go to state 106
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CREATE         shift, and go to state 114
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    instruction  go to state 118
    call         go to state 119
    expr         go to state 120


state 188

   52 feature_decl: identifiers_comma_seq '(' ')' LOCAL ids_with_type_seq DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 237


state 189

   50 feature_decl: identifiers_comma_seq '(' ')' DO instruction_seq END .

    $default  reduce using rule 50 (feature_decl)


state 190

   57 feature_decl: identifiers_comma_seq '(' ')' ':' type LOCAL . DO instruction_seq END
   58             | identifiers_comma_seq '(' ')' ':' type LOCAL . ids_with_type_seq DO instruction_seq END

    ID  shift, and go to state 17
    DO  shift, and go to state 238

    identifiers_comma_seq  go to state 60
    ids_with_type_seq      go to state 239


state 191

   56 feature_decl: identifiers_comma_seq '(' ')' ':' type DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 240


state 192

   65 ids_with_type_seq: identifiers_comma_seq ':' type opt_semicolon .

    $default  reduce using rule 65 (ids_with_type_seq)


state 193

   60 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' LOCAL DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 241


state 194

   61 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' LOCAL ids_with_type_seq . DO instruction_seq END
   66 ids_with_type_seq: ids_with_type_seq . identifiers_comma_seq ':' type opt_semicolon

    ID  shift, and go to state 17
    DO  shift, and go to state 242

    identifiers_comma_seq  go to state 100


state 195

   59 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 103
    END            shift, and go to state 243
    IF             shift, and go to state 105
    FROM           shift, and go to state 106
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CREATE         shift, and go to state 114
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    instruction  go to state 118
    call         go to state 119
    expr         go to state 120


state 196

   62 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type . DO instruction_seq END
   63             | identifiers_comma_seq '(' ids_with_type_seq ')' ':' type . LOCAL DO instruction_seq END
   64             | identifiers_comma_seq '(' ids_with_type_seq ')' ':' type . LOCAL ids_with_type_seq DO instruction_seq END

    LOCAL  shift, and go to state 244
    DO     shift, and go to state 245


state 197

   66 ids_with_type_seq: ids_with_type_seq identifiers_comma_seq ':' type . opt_semicolon

    ';'  shift, and go to state 35

    $default  reduce using rule 3 (opt_semicolon)

    opt_semicolon  go to state 246


state 198

   49 feature_decl: identifiers_comma_seq LOCAL ids_with_type_seq DO instruction_seq END .

    $default  reduce using rule 49 (feature_decl)


state 199

   72 instruction: ID ASSIGNMENT expr .
  103 expr: expr . '.' ID
  104     | expr . '.' ID '(' argument_seq ')'
  105     | expr . '@' expr
  106     | expr . '+' expr
  107     | expr . '-' expr
  108     | expr . '*' expr
  109     | expr . INTEGER_DIVISION expr
  111     | expr . '<' expr
  112     | expr . '>' expr
  113     | expr . LESS_EQUAL expr
  114     | expr . GREAT_EQUAL expr
  115     | expr . '=' expr
  116     | expr . NOTEQUAL expr
  117     | expr . AND expr
  118     | expr . OR expr
  119     | expr . XOR expr

    XOR               shift, and go to state 157
    OR                shift, and go to state 158
    AND               shift, and go to state 159
    '<'               shift, and go to state 160
    '>'               shift, and go to state 161
    '='               shift, and go to state 162
    NOTEQUAL          shift, and go to state 163
    GREAT_EQUAL       shift, and go to state 164
    LESS_EQUAL        shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    INTEGER_DIVISION  shift, and go to state 169
    '@'               shift, and go to state 170
    '.'               shift, and go to state 171

    '-'       [reduce using rule 72 (instruction)]
    $default  reduce using rule 72 (instruction)


state 200

   78 call: ID '(' ')' .

    $default  reduce using rule 78 (call)


state 201

   79 call: ID '(' argument_seq . ')'
   96 argument_seq: argument_seq . ',' expr

    ','  shift, and go to state 247
    ')'  shift, and go to state 248


state 202

   95 argument_seq: expr .
  103 expr: expr . '.' ID
  104     | expr . '.' ID '(' argument_seq ')'
  105     | expr . '@' expr
  106     | expr . '+' expr
  107     | expr . '-' expr
  108     | expr . '*' expr
  109     | expr . INTEGER_DIVISION expr
  111     | expr . '<' expr
  112     | expr . '>' expr
  113     | expr . LESS_EQUAL expr
  114     | expr . GREAT_EQUAL expr
  115     | expr . '=' expr
  116     | expr . NOTEQUAL expr
  117     | expr . AND expr
  118     | expr . OR expr
  119     | expr . XOR expr

    XOR               shift, and go to state 157
    OR                shift, and go to state 158
    AND               shift, and go to state 159
    '<'               shift, and go to state 160
    '>'               shift, and go to state 161
    '='               shift, and go to state 162
    NOTEQUAL          shift, and go to state 163
    GREAT_EQUAL       shift, and go to state 164
    LESS_EQUAL        shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    INTEGER_DIVISION  shift, and go to state 169
    '@'               shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 95 (argument_seq)


state 203

   73 instruction: IF '(' expr . ')' THEN instruction_seq END
   74            | IF '(' expr . ')' THEN instruction_seq ELSE instruction_seq END
  103 expr: expr . '.' ID
  104     | expr . '.' ID '(' argument_seq ')'
  105     | expr . '@' expr
  106     | expr . '+' expr
  107     | expr . '-' expr
  108     | expr . '*' expr
  109     | expr . INTEGER_DIVISION expr
  111     | expr . '<' expr
  112     | expr . '>' expr
  113     | expr . LESS_EQUAL expr
  114     | expr . GREAT_EQUAL expr
  115     | expr . '=' expr
  116     | expr . NOTEQUAL expr
  117     | expr . AND expr
  118     | expr . OR expr
  119     | expr . XOR expr

    XOR               shift, and go to state 157
    OR                shift, and go to state 158
    AND               shift, and go to state 159
    '<'               shift, and go to state 160
    '>'               shift, and go to state 161
    '='               shift, and go to state 162
    NOTEQUAL          shift, and go to state 163
    GREAT_EQUAL       shift, and go to state 164
    LESS_EQUAL        shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    INTEGER_DIVISION  shift, and go to state 169
    '@'               shift, and go to state 170
    '.'               shift, and go to state 171
    ')'               shift, and go to state 249


state 204

   75 instruction: FROM instruction_seq UNTIL . expr LOOP instruction_seq END

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    call  go to state 119
    expr  go to state 250


state 205

   86 call: '(' expr ')' . '.' ID
   87     | '(' expr ')' . '.' ID '(' ')'
   88     | '(' expr ')' . '.' ID '(' argument_seq ')'
   97 expr: '(' expr ')' .

    '.'  shift, and go to state 251

    '.'       [reduce using rule 97 (expr)]
    $default  reduce using rule 97 (expr)


state 206

   70 instruction: CREATE ID '.' . ID
   71            | CREATE ID '.' . ID '(' argument_seq ')'

    ID  shift, and go to state 252


state 207

   80 call: CURRENT '.' ID .
   81     | CURRENT '.' ID . '(' ')'
   82     | CURRENT '.' ID . '(' argument_seq ')'

    '('  shift, and go to state 253

    '('       [reduce using rule 80 (call)]
    $default  reduce using rule 80 (call)


state 208

   83 call: RESULT '.' ID .
   84     | RESULT '.' ID . '(' ')'
   85     | RESULT '.' ID . '(' argument_seq ')'

    '('  shift, and go to state 254

    '('       [reduce using rule 83 (call)]
    $default  reduce using rule 83 (call)


state 209

   90 call: PRECURSOR '(' ')' .

    $default  reduce using rule 90 (call)


state 210

   91 call: PRECURSOR '(' argument_seq . ')'
   96 argument_seq: argument_seq . ',' expr

    ','  shift, and go to state 247
    ')'  shift, and go to state 255


state 211

   92 call: PRECURSOR '{' ID . '}'
   93     | PRECURSOR '{' ID . '}' '(' ')'
   94     | PRECURSOR '{' ID . '}' '(' argument_seq ')'

    '}'  shift, and go to state 256


state 212

  103 expr: expr . '.' ID
  104     | expr . '.' ID '(' argument_seq ')'
  105     | expr . '@' expr
  106     | expr . '+' expr
  107     | expr . '-' expr
  108     | expr . '*' expr
  109     | expr . INTEGER_DIVISION expr
  111     | expr . '<' expr
  112     | expr . '>' expr
  113     | expr . LESS_EQUAL expr
  114     | expr . GREAT_EQUAL expr
  115     | expr . '=' expr
  116     | expr . NOTEQUAL expr
  117     | expr . AND expr
  118     | expr . OR expr
  119     | expr . XOR expr
  119     | expr XOR expr .

    AND               shift, and go to state 159
    '<'               shift, and go to state 160
    '>'               shift, and go to state 161
    '='               shift, and go to state 162
    NOTEQUAL          shift, and go to state 163
    GREAT_EQUAL       shift, and go to state 164
    LESS_EQUAL        shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    INTEGER_DIVISION  shift, and go to state 169
    '@'               shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 119 (expr)


state 213

  103 expr: expr . '.' ID
  104     | expr . '.' ID '(' argument_seq ')'
  105     | expr . '@' expr
  106     | expr . '+' expr
  107     | expr . '-' expr
  108     | expr . '*' expr
  109     | expr . INTEGER_DIVISION expr
  111     | expr . '<' expr
  112     | expr . '>' expr
  113     | expr . LESS_EQUAL expr
  114     | expr . GREAT_EQUAL expr
  115     | expr . '=' expr
  116     | expr . NOTEQUAL expr
  117     | expr . AND expr
  118     | expr . OR expr
  118     | expr OR expr .
  119     | expr . XOR expr

    AND               shift, and go to state 159
    '<'               shift, and go to state 160
    '>'               shift, and go to state 161
    '='               shift, and go to state 162
    NOTEQUAL          shift, and go to state 163
    GREAT_EQUAL       shift, and go to state 164
    LESS_EQUAL        shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    INTEGER_DIVISION  shift, and go to state 169
    '@'               shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 118 (expr)


state 214

  103 expr: expr . '.' ID
  104     | expr . '.' ID '(' argument_seq ')'
  105     | expr . '@' expr
  106     | expr . '+' expr
  107     | expr . '-' expr
  108     | expr . '*' expr
  109     | expr . INTEGER_DIVISION expr
  111     | expr . '<' expr
  112     | expr . '>' expr
  113     | expr . LESS_EQUAL expr
  114     | expr . GREAT_EQUAL expr
  115     | expr . '=' expr
  116     | expr . NOTEQUAL expr
  117     | expr . AND expr
  117     | expr AND expr .
  118     | expr . OR expr
  119     | expr . XOR expr

    '<'               shift, and go to state 160
    '>'               shift, and go to state 161
    '='               shift, and go to state 162
    NOTEQUAL          shift, and go to state 163
    GREAT_EQUAL       shift, and go to state 164
    LESS_EQUAL        shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    INTEGER_DIVISION  shift, and go to state 169
    '@'               shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 117 (expr)


state 215

  103 expr: expr . '.' ID
  104     | expr . '.' ID '(' argument_seq ')'
  105     | expr . '@' expr
  106     | expr . '+' expr
  107     | expr . '-' expr
  108     | expr . '*' expr
  109     | expr . INTEGER_DIVISION expr
  111     | expr . '<' expr
  111     | expr '<' expr .
  112     | expr . '>' expr
  113     | expr . LESS_EQUAL expr
  114     | expr . GREAT_EQUAL expr
  115     | expr . '=' expr
  116     | expr . NOTEQUAL expr
  117     | expr . AND expr
  118     | expr . OR expr
  119     | expr . XOR expr

    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    INTEGER_DIVISION  shift, and go to state 169
    '@'               shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 111 (expr)


state 216

  103 expr: expr . '.' ID
  104     | expr . '.' ID '(' argument_seq ')'
  105     | expr . '@' expr
  106     | expr . '+' expr
  107     | expr . '-' expr
  108     | expr . '*' expr
  109     | expr . INTEGER_DIVISION expr
  111     | expr . '<' expr
  112     | expr . '>' expr
  112     | expr '>' expr .
  113     | expr . LESS_EQUAL expr
  114     | expr . GREAT_EQUAL expr
  115     | expr . '=' expr
  116     | expr . NOTEQUAL expr
  117     | expr . AND expr
  118     | expr . OR expr
  119     | expr . XOR expr

    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    INTEGER_DIVISION  shift, and go to state 169
    '@'               shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 112 (expr)


state 217

  103 expr: expr . '.' ID
  104     | expr . '.' ID '(' argument_seq ')'
  105     | expr . '@' expr
  106     | expr . '+' expr
  107     | expr . '-' expr
  108     | expr . '*' expr
  109     | expr . INTEGER_DIVISION expr
  111     | expr . '<' expr
  112     | expr . '>' expr
  113     | expr . LESS_EQUAL expr
  114     | expr . GREAT_EQUAL expr
  115     | expr . '=' expr
  115     | expr '=' expr .
  116     | expr . NOTEQUAL expr
  117     | expr . AND expr
  118     | expr . OR expr
  119     | expr . XOR expr

    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    INTEGER_DIVISION  shift, and go to state 169
    '@'               shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 115 (expr)


state 218

  103 expr: expr . '.' ID
  104     | expr . '.' ID '(' argument_seq ')'
  105     | expr . '@' expr
  106     | expr . '+' expr
  107     | expr . '-' expr
  108     | expr . '*' expr
  109     | expr . INTEGER_DIVISION expr
  111     | expr . '<' expr
  112     | expr . '>' expr
  113     | expr . LESS_EQUAL expr
  114     | expr . GREAT_EQUAL expr
  115     | expr . '=' expr
  116     | expr . NOTEQUAL expr
  116     | expr NOTEQUAL expr .
  117     | expr . AND expr
  118     | expr . OR expr
  119     | expr . XOR expr

    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    INTEGER_DIVISION  shift, and go to state 169
    '@'               shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 116 (expr)


state 219

  103 expr: expr . '.' ID
  104     | expr . '.' ID '(' argument_seq ')'
  105     | expr . '@' expr
  106     | expr . '+' expr
  107     | expr . '-' expr
  108     | expr . '*' expr
  109     | expr . INTEGER_DIVISION expr
  111     | expr . '<' expr
  112     | expr . '>' expr
  113     | expr . LESS_EQUAL expr
  114     | expr . GREAT_EQUAL expr
  114     | expr GREAT_EQUAL expr .
  115     | expr . '=' expr
  116     | expr . NOTEQUAL expr
  117     | expr . AND expr
  118     | expr . OR expr
  119     | expr . XOR expr

    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    INTEGER_DIVISION  shift, and go to state 169
    '@'               shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 114 (expr)


state 220

  103 expr: expr . '.' ID
  104     | expr . '.' ID '(' argument_seq ')'
  105     | expr . '@' expr
  106     | expr . '+' expr
  107     | expr . '-' expr
  108     | expr . '*' expr
  109     | expr . INTEGER_DIVISION expr
  111     | expr . '<' expr
  112     | expr . '>' expr
  113     | expr . LESS_EQUAL expr
  113     | expr LESS_EQUAL expr .
  114     | expr . GREAT_EQUAL expr
  115     | expr . '=' expr
  116     | expr . NOTEQUAL expr
  117     | expr . AND expr
  118     | expr . OR expr
  119     | expr . XOR expr

    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    INTEGER_DIVISION  shift, and go to state 169
    '@'               shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 113 (expr)


state 221

  103 expr: expr . '.' ID
  104     | expr . '.' ID '(' argument_seq ')'
  105     | expr . '@' expr
  106     | expr . '+' expr
  106     | expr '+' expr .
  107     | expr . '-' expr
  108     | expr . '*' expr
  109     | expr . INTEGER_DIVISION expr
  111     | expr . '<' expr
  112     | expr . '>' expr
  113     | expr . LESS_EQUAL expr
  114     | expr . GREAT_EQUAL expr
  115     | expr . '=' expr
  116     | expr . NOTEQUAL expr
  117     | expr . AND expr
  118     | expr . OR expr
  119     | expr . XOR expr

    '*'               shift, and go to state 168
    INTEGER_DIVISION  shift, and go to state 169
    '@'               shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 106 (expr)


state 222

  103 expr: expr . '.' ID
  104     | expr . '.' ID '(' argument_seq ')'
  105     | expr . '@' expr
  106     | expr . '+' expr
  107     | expr . '-' expr
  107     | expr '-' expr .
  108     | expr . '*' expr
  109     | expr . INTEGER_DIVISION expr
  111     | expr . '<' expr
  112     | expr . '>' expr
  113     | expr . LESS_EQUAL expr
  114     | expr . GREAT_EQUAL expr
  115     | expr . '=' expr
  116     | expr . NOTEQUAL expr
  117     | expr . AND expr
  118     | expr . OR expr
  119     | expr . XOR expr

    '*'               shift, and go to state 168
    INTEGER_DIVISION  shift, and go to state 169
    '@'               shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 107 (expr)


state 223

  103 expr: expr . '.' ID
  104     | expr . '.' ID '(' argument_seq ')'
  105     | expr . '@' expr
  106     | expr . '+' expr
  107     | expr . '-' expr
  108     | expr . '*' expr
  108     | expr '*' expr .
  109     | expr . INTEGER_DIVISION expr
  111     | expr . '<' expr
  112     | expr . '>' expr
  113     | expr . LESS_EQUAL expr
  114     | expr . GREAT_EQUAL expr
  115     | expr . '=' expr
  116     | expr . NOTEQUAL expr
  117     | expr . AND expr
  118     | expr . OR expr
  119     | expr . XOR expr

    '@'  shift, and go to state 170
    '.'  shift, and go to state 171

    $default  reduce using rule 108 (expr)


state 224

  103 expr: expr . '.' ID
  104     | expr . '.' ID '(' argument_seq ')'
  105     | expr . '@' expr
  106     | expr . '+' expr
  107     | expr . '-' expr
  108     | expr . '*' expr
  109     | expr . INTEGER_DIVISION expr
  109     | expr INTEGER_DIVISION expr .
  111     | expr . '<' expr
  112     | expr . '>' expr
  113     | expr . LESS_EQUAL expr
  114     | expr . GREAT_EQUAL expr
  115     | expr . '=' expr
  116     | expr . NOTEQUAL expr
  117     | expr . AND expr
  118     | expr . OR expr
  119     | expr . XOR expr

    '@'  shift, and go to state 170
    '.'  shift, and go to state 171

    $default  reduce using rule 109 (expr)


state 225

  103 expr: expr . '.' ID
  104     | expr . '.' ID '(' argument_seq ')'
  105     | expr . '@' expr
  105     | expr '@' expr .
  106     | expr . '+' expr
  107     | expr . '-' expr
  108     | expr . '*' expr
  109     | expr . INTEGER_DIVISION expr
  111     | expr . '<' expr
  112     | expr . '>' expr
  113     | expr . LESS_EQUAL expr
  114     | expr . GREAT_EQUAL expr
  115     | expr . '=' expr
  116     | expr . NOTEQUAL expr
  117     | expr . AND expr
  118     | expr . OR expr
  119     | expr . XOR expr

    '.'  shift, and go to state 171

    $default  reduce using rule 105 (expr)


state 226

  103 expr: expr '.' ID .
  104     | expr '.' ID . '(' argument_seq ')'

    '('  shift, and go to state 257

    '('       [reduce using rule 103 (expr)]
    $default  reduce using rule 103 (expr)


state 227

  133 type: DATATYPE_ARRAY '[' type ']' .

    $default  reduce using rule 133 (type)


state 228

   54 feature_decl: identifiers_comma_seq ':' type LOCAL DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 103
    END            shift, and go to state 258
    IF             shift, and go to state 105
    FROM           shift, and go to state 106
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CREATE         shift, and go to state 114
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    instruction  go to state 118
    call         go to state 119
    expr         go to state 120


state 229

   55 feature_decl: identifiers_comma_seq ':' type LOCAL ids_with_type_seq DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 259


state 230

   53 feature_decl: identifiers_comma_seq ':' type DO instruction_seq END .

    $default  reduce using rule 53 (feature_decl)


state 231

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   22 parent: ID RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq . SELECT identifiers_comma_seq END
   30       | ID RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq . END

    END     shift, and go to state 260
    SELECT  shift, and go to state 261
    ','     shift, and go to state 37


state 232

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   26 parent: ID RENAME rename_seq UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq . END

    END  shift, and go to state 262
    ','  shift, and go to state 37


state 233

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   24 parent: ID RENAME rename_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq . END

    END  shift, and go to state 263
    ','  shift, and go to state 37


state 234

   39 rename_seq: rename_seq ',' ID AS ID .

    $default  reduce using rule 39 (rename_seq)


state 235

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   23 parent: ID UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq . END

    END  shift, and go to state 264
    ','  shift, and go to state 37


state 236

   51 feature_decl: identifiers_comma_seq '(' ')' LOCAL DO instruction_seq END .

    $default  reduce using rule 51 (feature_decl)


state 237

   52 feature_decl: identifiers_comma_seq '(' ')' LOCAL ids_with_type_seq DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 103
    END            shift, and go to state 265
    IF             shift, and go to state 105
    FROM           shift, and go to state 106
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CREATE         shift, and go to state 114
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    instruction  go to state 118
    call         go to state 119
    expr         go to state 120


state 238

   57 feature_decl: identifiers_comma_seq '(' ')' ':' type LOCAL DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 266


state 239

   58 feature_decl: identifiers_comma_seq '(' ')' ':' type LOCAL ids_with_type_seq . DO instruction_seq END
   66 ids_with_type_seq: ids_with_type_seq . identifiers_comma_seq ':' type opt_semicolon

    ID  shift, and go to state 17
    DO  shift, and go to state 267

    identifiers_comma_seq  go to state 100


state 240

   56 feature_decl: identifiers_comma_seq '(' ')' ':' type DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 103
    END            shift, and go to state 268
    IF             shift, and go to state 105
    FROM           shift, and go to state 106
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CREATE         shift, and go to state 114
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    instruction  go to state 118
    call         go to state 119
    expr         go to state 120


state 241

   60 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' LOCAL DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 103
    END            shift, and go to state 269
    IF             shift, and go to state 105
    FROM           shift, and go to state 106
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CREATE         shift, and go to state 114
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    instruction  go to state 118
    call         go to state 119
    expr         go to state 120


state 242

   61 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' LOCAL ids_with_type_seq DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 270


state 243

   59 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' DO instruction_seq END .

    $default  reduce using rule 59 (feature_decl)


state 244

   63 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type LOCAL . DO instruction_seq END
   64             | identifiers_comma_seq '(' ids_with_type_seq ')' ':' type LOCAL . ids_with_type_seq DO instruction_seq END

    ID  shift, and go to state 17
    DO  shift, and go to state 271

    identifiers_comma_seq  go to state 60
    ids_with_type_seq      go to state 272


state 245

   62 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 273


state 246

   66 ids_with_type_seq: ids_with_type_seq identifiers_comma_seq ':' type opt_semicolon .

    $default  reduce using rule 66 (ids_with_type_seq)


state 247

   96 argument_seq: argument_seq ',' . expr

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    call  go to state 119
    expr  go to state 274


state 248

   79 call: ID '(' argument_seq ')' .

    $default  reduce using rule 79 (call)


state 249

   73 instruction: IF '(' expr ')' . THEN instruction_seq END
   74            | IF '(' expr ')' . THEN instruction_seq ELSE instruction_seq END

    THEN  shift, and go to state 275


state 250

   75 instruction: FROM instruction_seq UNTIL expr . LOOP instruction_seq END
  103 expr: expr . '.' ID
  104     | expr . '.' ID '(' argument_seq ')'
  105     | expr . '@' expr
  106     | expr . '+' expr
  107     | expr . '-' expr
  108     | expr . '*' expr
  109     | expr . INTEGER_DIVISION expr
  111     | expr . '<' expr
  112     | expr . '>' expr
  113     | expr . LESS_EQUAL expr
  114     | expr . GREAT_EQUAL expr
  115     | expr . '=' expr
  116     | expr . NOTEQUAL expr
  117     | expr . AND expr
  118     | expr . OR expr
  119     | expr . XOR expr

    LOOP              shift, and go to state 276
    XOR               shift, and go to state 157
    OR                shift, and go to state 158
    AND               shift, and go to state 159
    '<'               shift, and go to state 160
    '>'               shift, and go to state 161
    '='               shift, and go to state 162
    NOTEQUAL          shift, and go to state 163
    GREAT_EQUAL       shift, and go to state 164
    LESS_EQUAL        shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    INTEGER_DIVISION  shift, and go to state 169
    '@'               shift, and go to state 170
    '.'               shift, and go to state 171


state 251

   86 call: '(' expr ')' '.' . ID
   87     | '(' expr ')' '.' . ID '(' ')'
   88     | '(' expr ')' '.' . ID '(' argument_seq ')'

    ID  shift, and go to state 277


state 252

   70 instruction: CREATE ID '.' ID .
   71            | CREATE ID '.' ID . '(' argument_seq ')'

    '('  shift, and go to state 278

    '('       [reduce using rule 70 (instruction)]
    $default  reduce using rule 70 (instruction)


state 253

   81 call: CURRENT '.' ID '(' . ')'
   82     | CURRENT '.' ID '(' . argument_seq ')'

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117
    ')'            shift, and go to state 279

    call          go to state 119
    argument_seq  go to state 280
    expr          go to state 202


state 254

   84 call: RESULT '.' ID '(' . ')'
   85     | RESULT '.' ID '(' . argument_seq ')'

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117
    ')'            shift, and go to state 281

    call          go to state 119
    argument_seq  go to state 282
    expr          go to state 202


state 255

   91 call: PRECURSOR '(' argument_seq ')' .

    $default  reduce using rule 91 (call)


state 256

   92 call: PRECURSOR '{' ID '}' .
   93     | PRECURSOR '{' ID '}' . '(' ')'
   94     | PRECURSOR '{' ID '}' . '(' argument_seq ')'

    '('  shift, and go to state 283

    '('       [reduce using rule 92 (call)]
    $default  reduce using rule 92 (call)


state 257

  104 expr: expr '.' ID '(' . argument_seq ')'

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    call          go to state 119
    argument_seq  go to state 284
    expr          go to state 202


state 258

   54 feature_decl: identifiers_comma_seq ':' type LOCAL DO instruction_seq END .

    $default  reduce using rule 54 (feature_decl)


state 259

   55 feature_decl: identifiers_comma_seq ':' type LOCAL ids_with_type_seq DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 103
    END            shift, and go to state 285
    IF             shift, and go to state 105
    FROM           shift, and go to state 106
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CREATE         shift, and go to state 114
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    instruction  go to state 118
    call         go to state 119
    expr         go to state 120


state 260

   30 parent: ID RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq END .

    $default  reduce using rule 30 (parent)


state 261

   22 parent: ID RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT . identifiers_comma_seq END

    ID  shift, and go to state 17

    identifiers_comma_seq  go to state 286


state 262

   26 parent: ID RENAME rename_seq UNDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END .

    $default  reduce using rule 26 (parent)


state 263

   24 parent: ID RENAME rename_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END .

    $default  reduce using rule 24 (parent)


state 264

   23 parent: ID UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END .

    $default  reduce using rule 23 (parent)


state 265

   52 feature_decl: identifiers_comma_seq '(' ')' LOCAL ids_with_type_seq DO instruction_seq END .

    $default  reduce using rule 52 (feature_decl)


state 266

   57 feature_decl: identifiers_comma_seq '(' ')' ':' type LOCAL DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 103
    END            shift, and go to state 287
    IF             shift, and go to state 105
    FROM           shift, and go to state 106
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CREATE         shift, and go to state 114
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    instruction  go to state 118
    call         go to state 119
    expr         go to state 120


state 267

   58 feature_decl: identifiers_comma_seq '(' ')' ':' type LOCAL ids_with_type_seq DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 288


state 268

   56 feature_decl: identifiers_comma_seq '(' ')' ':' type DO instruction_seq END .

    $default  reduce using rule 56 (feature_decl)


state 269

   60 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' LOCAL DO instruction_seq END .

    $default  reduce using rule 60 (feature_decl)


state 270

   61 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' LOCAL ids_with_type_seq DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 103
    END            shift, and go to state 289
    IF             shift, and go to state 105
    FROM           shift, and go to state 106
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CREATE         shift, and go to state 114
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    instruction  go to state 118
    call         go to state 119
    expr         go to state 120


state 271

   63 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type LOCAL DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 290


state 272

   64 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type LOCAL ids_with_type_seq . DO instruction_seq END
   66 ids_with_type_seq: ids_with_type_seq . identifiers_comma_seq ':' type opt_semicolon

    ID  shift, and go to state 17
    DO  shift, and go to state 291

    identifiers_comma_seq  go to state 100


state 273

   62 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 103
    END            shift, and go to state 292
    IF             shift, and go to state 105
    FROM           shift, and go to state 106
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CREATE         shift, and go to state 114
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    instruction  go to state 118
    call         go to state 119
    expr         go to state 120


state 274

   96 argument_seq: argument_seq ',' expr .
  103 expr: expr . '.' ID
  104     | expr . '.' ID '(' argument_seq ')'
  105     | expr . '@' expr
  106     | expr . '+' expr
  107     | expr . '-' expr
  108     | expr . '*' expr
  109     | expr . INTEGER_DIVISION expr
  111     | expr . '<' expr
  112     | expr . '>' expr
  113     | expr . LESS_EQUAL expr
  114     | expr . GREAT_EQUAL expr
  115     | expr . '=' expr
  116     | expr . NOTEQUAL expr
  117     | expr . AND expr
  118     | expr . OR expr
  119     | expr . XOR expr

    XOR               shift, and go to state 157
    OR                shift, and go to state 158
    AND               shift, and go to state 159
    '<'               shift, and go to state 160
    '>'               shift, and go to state 161
    '='               shift, and go to state 162
    NOTEQUAL          shift, and go to state 163
    GREAT_EQUAL       shift, and go to state 164
    LESS_EQUAL        shift, and go to state 165
    '+'               shift, and go to state 166
    '-'               shift, and go to state 167
    '*'               shift, and go to state 168
    INTEGER_DIVISION  shift, and go to state 169
    '@'               shift, and go to state 170
    '.'               shift, and go to state 171

    $default  reduce using rule 96 (argument_seq)


state 275

   73 instruction: IF '(' expr ')' THEN . instruction_seq END
   74            | IF '(' expr ')' THEN . instruction_seq ELSE instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 293


state 276

   75 instruction: FROM instruction_seq UNTIL expr LOOP . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 294


state 277

   86 call: '(' expr ')' '.' ID .
   87     | '(' expr ')' '.' ID . '(' ')'
   88     | '(' expr ')' '.' ID . '(' argument_seq ')'

    '('  shift, and go to state 295

    '('       [reduce using rule 86 (call)]
    $default  reduce using rule 86 (call)


state 278

   71 instruction: CREATE ID '.' ID '(' . argument_seq ')'

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    call          go to state 119
    argument_seq  go to state 296
    expr          go to state 202


state 279

   81 call: CURRENT '.' ID '(' ')' .

    $default  reduce using rule 81 (call)


state 280

   82 call: CURRENT '.' ID '(' argument_seq . ')'
   96 argument_seq: argument_seq . ',' expr

    ','  shift, and go to state 247
    ')'  shift, and go to state 297


state 281

   84 call: RESULT '.' ID '(' ')' .

    $default  reduce using rule 84 (call)


state 282

   85 call: RESULT '.' ID '(' argument_seq . ')'
   96 argument_seq: argument_seq . ',' expr

    ','  shift, and go to state 247
    ')'  shift, and go to state 298


state 283

   93 call: PRECURSOR '{' ID '}' '(' . ')'
   94     | PRECURSOR '{' ID '}' '(' . argument_seq ')'

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117
    ')'            shift, and go to state 299

    call          go to state 119
    argument_seq  go to state 300
    expr          go to state 202


state 284

   96 argument_seq: argument_seq . ',' expr
  104 expr: expr '.' ID '(' argument_seq . ')'

    ','  shift, and go to state 247
    ')'  shift, and go to state 301


state 285

   55 feature_decl: identifiers_comma_seq ':' type LOCAL ids_with_type_seq DO instruction_seq END .

    $default  reduce using rule 55 (feature_decl)


state 286

    2 identifiers_comma_seq: identifiers_comma_seq . ',' ID
   22 parent: ID RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq . END

    END  shift, and go to state 302
    ','  shift, and go to state 37


state 287

   57 feature_decl: identifiers_comma_seq '(' ')' ':' type LOCAL DO instruction_seq END .

    $default  reduce using rule 57 (feature_decl)


state 288

   58 feature_decl: identifiers_comma_seq '(' ')' ':' type LOCAL ids_with_type_seq DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 103
    END            shift, and go to state 303
    IF             shift, and go to state 105
    FROM           shift, and go to state 106
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CREATE         shift, and go to state 114
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    instruction  go to state 118
    call         go to state 119
    expr         go to state 120


state 289

   61 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' LOCAL ids_with_type_seq DO instruction_seq END .

    $default  reduce using rule 61 (feature_decl)


state 290

   63 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type LOCAL DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 103
    END            shift, and go to state 304
    IF             shift, and go to state 105
    FROM           shift, and go to state 106
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CREATE         shift, and go to state 114
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    instruction  go to state 118
    call         go to state 119
    expr         go to state 120


state 291

   64 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type LOCAL ids_with_type_seq DO . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 305


state 292

   62 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type DO instruction_seq END .

    $default  reduce using rule 62 (feature_decl)


state 293

   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq
   73 instruction: IF '(' expr ')' THEN instruction_seq . END
   74            | IF '(' expr ')' THEN instruction_seq . ELSE instruction_seq END

    ID             shift, and go to state 103
    END            shift, and go to state 306
    IF             shift, and go to state 105
    ELSE           shift, and go to state 307
    FROM           shift, and go to state 106
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CREATE         shift, and go to state 114
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    instruction  go to state 118
    call         go to state 119
    expr         go to state 120


state 294

   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq
   75 instruction: FROM instruction_seq UNTIL expr LOOP instruction_seq . END

    ID             shift, and go to state 103
    END            shift, and go to state 308
    IF             shift, and go to state 105
    FROM           shift, and go to state 106
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CREATE         shift, and go to state 114
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    instruction  go to state 118
    call         go to state 119
    expr         go to state 120


state 295

   87 call: '(' expr ')' '.' ID '(' . ')'
   88     | '(' expr ')' '.' ID '(' . argument_seq ')'

    ID             shift, and go to state 147
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117
    ')'            shift, and go to state 309

    call          go to state 119
    argument_seq  go to state 310
    expr          go to state 202


state 296

   71 instruction: CREATE ID '.' ID '(' argument_seq . ')'
   96 argument_seq: argument_seq . ',' expr

    ','  shift, and go to state 247
    ')'  shift, and go to state 311


state 297

   82 call: CURRENT '.' ID '(' argument_seq ')' .

    $default  reduce using rule 82 (call)


state 298

   85 call: RESULT '.' ID '(' argument_seq ')' .

    $default  reduce using rule 85 (call)


state 299

   93 call: PRECURSOR '{' ID '}' '(' ')' .

    $default  reduce using rule 93 (call)


state 300

   94 call: PRECURSOR '{' ID '}' '(' argument_seq . ')'
   96 argument_seq: argument_seq . ',' expr

    ','  shift, and go to state 247
    ')'  shift, and go to state 312


state 301

  104 expr: expr '.' ID '(' argument_seq ')' .

    $default  reduce using rule 104 (expr)


state 302

   22 parent: ID RENAME rename_seq UNDEFINE identifiers_comma_seq REDEFINE identifiers_comma_seq SELECT identifiers_comma_seq END .

    $default  reduce using rule 22 (parent)


state 303

   58 feature_decl: identifiers_comma_seq '(' ')' ':' type LOCAL ids_with_type_seq DO instruction_seq END .

    $default  reduce using rule 58 (feature_decl)


state 304

   63 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type LOCAL DO instruction_seq END .

    $default  reduce using rule 63 (feature_decl)


state 305

   64 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type LOCAL ids_with_type_seq DO instruction_seq . END
   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq

    ID             shift, and go to state 103
    END            shift, and go to state 313
    IF             shift, and go to state 105
    FROM           shift, and go to state 106
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CREATE         shift, and go to state 114
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    instruction  go to state 118
    call         go to state 119
    expr         go to state 120


state 306

   73 instruction: IF '(' expr ')' THEN instruction_seq END .

    $default  reduce using rule 73 (instruction)


state 307

   74 instruction: IF '(' expr ')' THEN instruction_seq ELSE . instruction_seq END

    ';'  shift, and go to state 43

    $default  reduce using rule 5 (opt_semicolon_seq)

    opt_semicolon_seq           go to state 64
    nonempty_opt_semicolon_seq  go to state 45
    instruction_seq             go to state 314


state 308

   75 instruction: FROM instruction_seq UNTIL expr LOOP instruction_seq END .

    $default  reduce using rule 75 (instruction)


state 309

   87 call: '(' expr ')' '.' ID '(' ')' .

    $default  reduce using rule 87 (call)


state 310

   88 call: '(' expr ')' '.' ID '(' argument_seq . ')'
   96 argument_seq: argument_seq . ',' expr

    ','  shift, and go to state 247
    ')'  shift, and go to state 315


state 311

   71 instruction: CREATE ID '.' ID '(' argument_seq ')' .

    $default  reduce using rule 71 (instruction)


state 312

   94 call: PRECURSOR '{' ID '}' '(' argument_seq ')' .

    $default  reduce using rule 94 (call)


state 313

   64 feature_decl: identifiers_comma_seq '(' ids_with_type_seq ')' ':' type LOCAL ids_with_type_seq DO instruction_seq END .

    $default  reduce using rule 64 (feature_decl)


state 314

   68 instruction_seq: instruction_seq . instruction opt_semicolon_seq
   74 instruction: IF '(' expr ')' THEN instruction_seq ELSE instruction_seq . END

    ID             shift, and go to state 103
    END            shift, and go to state 316
    IF             shift, and go to state 105
    FROM           shift, and go to state 106
    '-'            shift, and go to state 107
    NOT            shift, and go to state 108
    '('            shift, and go to state 109
    LITER_BOOLEAN  shift, and go to state 110
    LITER_INTEGER  shift, and go to state 111
    LITER_CHAR     shift, and go to state 112
    LITER_STRING   shift, and go to state 113
    CREATE         shift, and go to state 114
    CURRENT        shift, and go to state 115
    RESULT         shift, and go to state 116
    PRECURSOR      shift, and go to state 117

    instruction  go to state 118
    call         go to state 119
    expr         go to state 120


state 315

   88 call: '(' expr ')' '.' ID '(' argument_seq ')' .

    $default  reduce using rule 88 (call)


state 316

   74 instruction: IF '(' expr ')' THEN instruction_seq ELSE instruction_seq END .

    $default  reduce using rule 74 (instruction)
